{"id":924568535,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680145669,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/924568535/","is_pending":"Not Pending","title":"Scramble String","memory":"43 MB","code":"class Solution {\n  public boolean isScramble(String s1, String s2) {\n    if (s1.equals(s2))\n      return true;\n    if (s1.length() != s2.length())\n      return false;\n    final String hashedKey = s1 + \"+\" + s2;\n    if (memo.containsKey(hashedKey))\n      return memo.get(hashedKey);\n\n    int[] count = new int[128];\n\n    for (int i = 0; i < s1.length(); ++i) {\n      ++count[s1.charAt(i)];\n      --count[s2.charAt(i)];\n    }\n\n    for (final int c : count)\n      if (c != 0) {\n        memo.put(hashedKey, false);\n        return false;\n      }\n\n    for (int i = 1; i < s1.length(); ++i) {\n      if (isScramble(s1.substring(0, i), s2.substring(0, i)) &&\n          isScramble(s1.substring(i), s2.substring(i))) {\n        memo.put(hashedKey, true);\n        return true;\n      }\n      if (isScramble(s1.substring(0, i), s2.substring(s2.length() - i)) &&\n          isScramble(s1.substring(i), s2.substring(0, s2.length() - i))) {\n        memo.put(hashedKey, true);\n        return true;\n      }\n    }\n\n    memo.put(hashedKey, false);\n    return false;\n  }\n\n  private Map<String, Boolean> memo = new HashMap<>();\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"scramble-string","has_notes":false}