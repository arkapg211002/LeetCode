{"id":815082374,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1664897633,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/815082374/","is_pending":"Not Pending","title":"Count Days Spent Together","memory":"40.1 MB","code":"class Solution\n{\n    public int countDaysTogether(String arriveAlice, String leaveAlice, String arriveBob, String leaveBob)\n    {\n        int[] days = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n        \n        String ar, dp; // ar is the latest arrival date, dp is the earliest departure date\n        \n        ar = arriveAlice.compareTo(arriveBob) <= 0 ? arriveBob : arriveAlice;\n        \n        dp = leaveAlice.compareTo(leaveBob) <= 0 ? leaveAlice : leaveBob;\n        \n        int ret = 1;\n        \n        if(ar.compareTo(dp) > 0) // ar is later than dp\n            return 0;\n\n        int amm = Integer.parseInt(ar.substring(0,2)), dmm = Integer.parseInt(dp.substring(0,2)), add = Integer.parseInt(ar.substring(3)), ddd = Integer.parseInt(dp.substring(3));\n        // Month and day separated for arr and dp values\n\t\t\n        for(int i = amm+1; i < dmm; i++)\n            ret += days[i]; // Days of months between arrival and departure(exclusive)\n        \n        if(amm == dmm) // If arrival and departure in the same month, day difference is departure - arrival\n            ret += (ddd-add);\n        \n        else // If arrival and departure in different months, day difference is number of days remaining in the arrival month + departure date\n        {\n            ret += days[amm]-add;\n            ret += ddd;\n        }\n        \n        return ret;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"count-days-spent-together","has_notes":false}