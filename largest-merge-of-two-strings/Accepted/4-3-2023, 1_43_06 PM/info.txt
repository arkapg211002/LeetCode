{"id":927082862,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1680509586,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/927082862/","is_pending":"Not Pending","title":"Largest Merge Of Two Strings","memory":"42.7 MB","code":"class Solution {\n    public String largestMerge(String word1, String word2) {\n        StringBuilder sb = new StringBuilder();\n        int i=0;\n        int j=0;\n        char[] w1 = word1.toCharArray();\n        char[] w2 = word2.toCharArray();\n        \n        int n1=w1.length;\n        int n2=w2.length;\n        \n        // we loop until we exhaust any one of the 2 words completely\n        while(i<n1 && j<n2){\n            \n            // if both the characters are equal we choose the one where the next largest occurs earlier\n            if(w1[i]==w2[j]){\n                if(check(w1,i,w2,j)){\n                    sb.append(w1[i++]);\n                }else{\n                    sb.append(w2[j++]);\n                }\n            }\n            \n            // else we greedily choose the largest of the two characters\n            else if(w1[i]>w2[j]){\n                sb.append(w1[i++]);\n            }else{\n                sb.append(w2[j++]);\n            }\n        }\n        \n        // at the end of the loop we append any remaining word\n        sb.append(word1.substring(i));\n        sb.append(word2.substring(j));\n\t\t\n        return sb.toString();\n    }\n    \n    private boolean check(char[] w1, int i, char[] w2, int j){\n        // will return true if we need to extract from word1 and false if we need to extract from word2\n        \n        while(i<w1.length && j<w2.length){\n            if(w1[i]==w2[j]){\n                i++;\n                j++;\n            }\n            else if(w1[i]>w2[j]){\n                return true;\n            }else{\n                return false;\n            }\n        }\n        \n        // if we are unable to find any exhaustable character till the end of the loop we use the one having larger length\n        if(i<w1.length){\n            return true;\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-merge-of-two-strings","has_notes":false}