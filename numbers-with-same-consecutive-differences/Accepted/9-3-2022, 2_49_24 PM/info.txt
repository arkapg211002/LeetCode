{"id":790273154,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1662196764,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/790273154/","is_pending":"Not Pending","title":"Numbers With Same Consecutive Differences","memory":"41.9 MB","code":"class Solution {\n    List<Integer> res;\n    public int[] numsSameConsecDiff(int n, int k) {\n        res = new ArrayList<>();\n        \n        // Taking all possible cases for first digit from 1-9\n        for(int i=1; i<=9; i++)solve(i,1,n,k);\n        \n        // Converting List to Array\n        int len = res.size();\n        int[] arr  = new int[len];\n        for(int i=0; i<len; i++)arr[i] = res.get(i);\n        return arr;\n    }\n    \n    private void solve(int item, int i, int n, int k){\n        if(i==n){\n            res.add(item);\n            return;\n        }\n        \n        // To check for +k and -k results with the last digit\n        int a = item % 10;\n        \n        // If the absolute difference is zero, then should be single recursive call else there will be duplicate values in the result\n        if(k == 0){\n            int temp = (item*10) + a;\n            solve(temp,i+1,n,k);\n        }\n        else{\n            \n            // Check for +k and -k values and proceed accordingly\n            if((a+k)<=9){\n                int temp = (item*10) + (a+k);\n                solve(temp,i+1,n,k);\n            }\n            if((a-k)>=0){\n                int temp = (item*10) + (a-k);\n                solve(temp,i+1,n,k);\n            }    \n        }\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"numbers-with-same-consecutive-differences","has_notes":false}