{"id":933429763,"lang":"java","lang_name":"Java","time":"3 weeks, 3 days","timestamp":1681448140,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/933429763/","is_pending":"Not Pending","title":"Regions Cut By Slashes","memory":"40.9 MB","code":"class Solution {\n    static int[] par;\n    public static int findLeaderParent(int u)\n    {   return par[u]==u ? u : (par[u]=findLeaderParent(par[u]));}\n    public static int mergeUnion(int p1, int p2) \n    {\n        if (p1 != p2) \n        {\n            par[p2] = p1;\n            return 0;\n        }\n        return 1;     \n    }\n    public int regionsBySlashes(String[] grid) {\n        int n = grid.length;\n        int N = n + 1;\n        par = new int[N * N];\n        for (int i = 0; i < N * N; i++) \n        {\n            if (i / N == 0 || i % N == 0 || i / N == N - 1 || i % N == N - 1) par[i] = 0;\n            else par[i] = i;\n        }\n\n        int numberOfCycles = 1; \n        for (int i = 0; i < n; i++) \n        {\n            String str = grid[i];\n            for (int j = 0; j < str.length(); j++) \n            {\n                char ch = str.charAt(j);\n                if (ch == '/') \n                {\n                    int p1 = findLeaderParent(i * N + j + 1);\n                    int p2 = findLeaderParent((i + 1) * N + j);\n                    numberOfCycles += mergeUnion(p1, p2);\n                } \n                else if (ch == '\\\\')\n                {\n                    int p1 = findLeaderParent(i * N + j);\n                    int p2 = findLeaderParent((i + 1) * N + j + 1);\n                    numberOfCycles += mergeUnion(p1, p2);\n                }\n            }\n        }\n        return numberOfCycles;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"regions-cut-by-slashes","has_notes":false}