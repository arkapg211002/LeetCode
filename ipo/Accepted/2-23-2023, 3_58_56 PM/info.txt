{"id":903456431,"lang":"java","lang_name":"Java","time":"2 months, 1 week","timestamp":1677148136,"status":10,"status_display":"Accepted","runtime":"114 ms","url":"/submissions/detail/903456431/","is_pending":"Not Pending","title":"IPO","memory":"86.4 MB","code":"class Solution {\n    class Pair implements Comparable<Pair> {\n        int capital, profit;\n\n        public Pair(int capital, int profit) {\n            this.capital = capital;\n            this.profit = profit;\n        }\n\n        public int compareTo(Pair pair) {\n            return capital - pair.capital;\n        }\n    }\n    \n    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {\n        int n = profits.length;\n        Pair [] projects = new Pair[n];\n        for(int i = 0;i<n;i++){\n            projects[i] = new Pair(capital[i],profits[i]);\n        }\n        \n        Arrays.sort(projects);\n        PriorityQueue<Integer> priority = new PriorityQueue<Integer>( Collections.reverseOrder());\n        int j = 0;\n        int ans = w;\n        for(int i = 0;i<k;i++){\n            while(j<n && projects[j].capital<=ans){\n                priority.add(projects[j++].profit);\n            }\n            if(priority.isEmpty()){\n                break;\n            }\n            ans+=priority.poll();\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"ipo","has_notes":false}