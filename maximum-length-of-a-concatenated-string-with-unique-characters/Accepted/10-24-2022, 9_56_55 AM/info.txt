{"id":829043438,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666585615,"status":10,"status_display":"Accepted","runtime":"280 ms","url":"/submissions/detail/829043438/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"117.6 MB","code":"class Solution {\n    public int maxLength(List<String> arr) {\n        return solve(arr, 0, \"\");\n    }\n    \n    \n    public int solve(List<String> arr, int i, String soFar)\n    {\n        if(i == arr.size())\n        {\n            if(isValid(soFar))\n            {\n                return soFar.length();\n            }\n            return 0;\n        }\n        \n        int size1 = solve(arr, i+1, soFar);\n        int size2 = solve(arr, i+1, soFar+arr.get(i));\n        \n        return Math.max(size1, size2);\n\n    }\n    \n    \n    public boolean isValid(String s)\n    {\n        int[] freq = new int[26];\n        \n        for(int i=0;i<s.length();i++)\n        {\n            int val = s.charAt(i) - 'a';\n            freq[val]++;\n            \n            if(freq[val]>1)\n            {\n                return false;\n            }\n        }\n        \n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false}