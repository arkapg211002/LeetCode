{"id":911245949,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1678250163,"status":10,"status_display":"Accepted","runtime":"458 ms","url":"/submissions/detail/911245949/","is_pending":"Not Pending","title":"Find Elements in a Contaminated Binary Tree","memory":"46.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass FindElements {\n    //TreeNode r=null;\n    List<Integer>l=new ArrayList<>();\n    public FindElements(TreeNode root) {\n        root.val=0;\n        change(root);\n        inorder(root);\n    }\n    public void inorder(TreeNode root)\n    {\n        if(root==null)return;\n        inorder(root.left);\n        l.add(root.val);\n        inorder(root.right);\n    }\n    public void change(TreeNode root)\n    {\n        if(root==null)return;\n        if(root.left!=null)root.left.val=(2*root.val)+1;\n        if(root.right!=null)root.right.val=(2*root.val)+2;\n        change(root.left);\n        change(root.right);\n    }\n    public boolean find(int target) {\n        return(l.contains(target));\n    }\n}\n\n/**\n * Your FindElements object will be instantiated and called as such:\n * FindElements obj = new FindElements(root);\n * boolean param_1 = obj.find(target);\n */","compare_result":"1111111111111111111111111111111","title_slug":"find-elements-in-a-contaminated-binary-tree","has_notes":false}