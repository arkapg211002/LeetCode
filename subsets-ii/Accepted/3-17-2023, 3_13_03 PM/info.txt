{"id":916785073,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1679046183,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/916785073/","is_pending":"Not Pending","title":"Subsets II","memory":"42.5 MB","code":"class Solution {\n    public List<List<Integer>> subsetsWithDup(int[] nums) {\n        Set<List<Integer>> set = new HashSet<>();\n        set.add(new ArrayList<>());\n        for (int i = 0; i < nums.length; i++) {\n            goBacktracking(i, nums, new ArrayList<>(), set);\n        }\n        return new ArrayList<>(set);\n    }\n\n    private void goBacktracking(int i, int[] nums, ArrayList<Integer> list, Set<List<Integer>> set) {\n        if (i >= nums.length) {\n            List<Integer> templist = new ArrayList<>(list);\n            Collections.sort(templist);\n            set.add(templist);\n            return;\n        }\n\n        list.add(nums[i]);\n        \n        for (int j = i + 1; j <= nums.length; j++) {\n            goBacktracking(j, nums, list, set);\n        }\n        list.remove(list.size() - 1);\n    }\n}","compare_result":"11111111111111111111","title_slug":"subsets-ii","has_notes":false}