{"id":848939262,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1669265359,"status":10,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/848939262/","is_pending":"Not Pending","title":"Word Search","memory":"40.7 MB","code":"class Solution {\n    public boolean exist(char[][] board, String word) {\n         boolean visited[][]=new boolean[board.length][board[0].length];\n          for(int i=0;i<board.length;i++){\n              for(int j=0;j<board[0].length;j++){\n                  if(board[i][j]==word.charAt(0) && search(board,word,i,j,0,visited)){\n                      return true;\n                  }\n              }\n          }\n        return false;\n        \n    }\n    public boolean search(char[][]board,String word,int i,int j,int idx,boolean visited[][]){\n       if(idx==word.length()){\n           return true;\n       }\n       if(i<0 || j<0 || i>=board.length || j>=board[0].length || board[i][j]!=word.charAt(idx) || visited[i][j]){\n            return false;\n        }\n        visited[i][j]=true;\n        if(search(board,word,i+1,j,idx+1,visited) || search(board,word,i,j+1,idx+1,visited) || search(board,word,i-1,j,idx+1,visited) || search(board,word,i,j-1,idx+1,visited)){\n            return true;\n        }\n        visited[i][j]=false;\n        return false;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search","has_notes":false}