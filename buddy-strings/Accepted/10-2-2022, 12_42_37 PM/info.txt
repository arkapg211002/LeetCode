{"id":813331375,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1664694757,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/813331375/","is_pending":"Not Pending","title":"Buddy Strings","memory":"42.9 MB","code":"class Solution {\n    public boolean buddyStrings(String s, String goal) {\n\tif (s.length() != goal.length())\n\t\treturn false;\n\tif (s.equals(goal) && hasDuplicateChars(s))\n\t\treturn true;\n\n\tvar diffs = findDiffs(s, goal);\n\treturn diffs.size() == 2 &&\n\t\t   s.charAt(diffs.getFirst()) == goal.charAt(diffs.getLast()) &&\n\t\t   s.charAt(diffs.getLast()) == goal.charAt(diffs.getFirst());\n}\n\nprivate boolean hasDuplicateChars(String s) {\n\tvar chars = new HashSet<Character>();\n\treturn IntStream.range(0, s.length())\n\t\t\t\t\t.anyMatch(i -> !chars.add(s.charAt(i)));\n}\n\nprivate Deque<Integer> findDiffs(String s, String goal) {\n\tvar diffs = new ArrayDeque<Integer>();\n\n\tfor (var i = 0; i < s.length(); i++)\n\t\tif (s.charAt(i) != goal.charAt(i)) {\n\t\t\tdiffs.add(i);\n\t\t\tif (diffs.size() > 2)\n\t\t\t\tbreak;\n\t\t}\n\n\treturn diffs;\n}\n}","compare_result":"1111111111111111111111111111111111","title_slug":"buddy-strings","has_notes":false}