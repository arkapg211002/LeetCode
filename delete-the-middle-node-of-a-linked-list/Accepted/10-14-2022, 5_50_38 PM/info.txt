{"id":822301759,"lang":"java","lang_name":"Java","time":"6 months, 3 weeks","timestamp":1665750038,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/822301759/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"238.2 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode deleteMiddle(ListNode head) {\n        if(head.next==null){\n            return null;\n        }\n        ListNode fast=head,slow=head,prev=null;\n        while(fast!=null && fast.next!=null){\n            fast=fast.next.next;\n            prev=slow;\n            slow=slow.next;\n        }\n        prev.next=prev.next.next;\n        return head;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false}