{"id":926067114,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1680367423,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/926067114/","is_pending":"Not Pending","title":"Minimum Number of Swaps to Make the Binary String Alternating","memory":"N/A","code":"public int minSwaps(String s) {\n        int one=0,zero=0;\n        for(char ch : s.toCharArray()){\n            if(ch == '1')   one++;\n            else zero++;\n        }\n        if(Math.abs(one-zero) > 1)\n            return -1;\n        //if no of 1 is more then, all ones should be placed at even positions,\n        //if it's not present at even position then we need a swap. vice-versa for 0\n        if(one > zero)\n            return checkSwaps(s.toCharArray(),'1');\n        else if(zero > one)\n            return checkSwaps(s.toCharArray(),'0');\n        //if both are having same count then either can be placed at even/odd position\n        //so take minimum of both possibilities\n        else\n            return Math.min(checkSwaps(s.toCharArray(),'1'),checkSwaps(s.toCharArray(),'0'));\n    }\n    \n    //checks wrong position when symbol is not present at even positon \n    //(this symbol is present more)\n    public int checkSwaps(char[] s, char symbol){\n        int swaps=0;\n        for(int i=0;i<s.length;i++){\n            if(s[i] == symbol && i%2 != 0)\n                swaps++;\n        }\n        return swaps;\n    }","compare_result":null,"title_slug":"minimum-number-of-swaps-to-make-the-binary-string-alternating","has_notes":false}