{"id":940627780,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682605140,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/940627780/","is_pending":"Not Pending","title":"Coin Change","memory":"N/A","code":"class Solution {\n    public int coinChange(int[] coins, int amount) {\n        int n=coins.length;\n        int dp[][]=new int[n][amount+1];\n        for(int r[]:dp)Arrays.fill(r,-1);\n        int ans=f(n-1,amount,coins,dp);\n        if(ans>=Integer.MAX_VALUE)return -1;\n        return ans;\n    }\n    public int f(int ind,int amount,int coins[],int dp[][])\n    {\n        if(ind == 0)\n        {\n            if(amount % coins[0] == 0)return amount/coins[0];\n            else return Integer.MAX_VALUE;\n        }\n        if(dp[ind][amount]!=-1)return dp[ind][amount];\n        int nottake=0+f(ind-1,amount,coins,dp);\n        int take=Integer.MAX_VALUE;\n        if(coins[ind]<=amount)\n            take=1+f(ind,amount-coins[ind],coins,dp);\n        return dp[ind][amount]=(int)Math.min(nottake,take);\n    }\n}","compare_result":"111111111111111111111111111111000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101","title_slug":"coin-change","has_notes":false}