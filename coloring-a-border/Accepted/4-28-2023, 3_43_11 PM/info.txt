{"id":941041852,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1682676791,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/941041852/","is_pending":"Not Pending","title":"Coloring A Border","memory":"43.5 MB","code":"class Solution {\n    public int[][] colorBorder(int[][] grid, int r0, int c0, int color) {\n        \n        int n = grid.length;\n        int m = grid[0].length;\n        \n        if (grid[r0][c0]==color)\n            return grid;\n        \n        boolean[][] visited = new boolean[n][m];\n        dfs(grid, r0, c0, grid[r0][c0], visited, color, n, m);\n        \n        return grid;\n        \n    }\n    \n    public void dfs(int[][] grid, int i, int j, int col, boolean[][] visited, int target, int n, int m){\n        \n        if (i>n-1 || i<0 || j>m-1 || j<0 || grid[i][j]!=col || visited[i][j])\n            return;\n        \n        visited[i][j] = true;\n        boolean border = false;\n        \n        if (i==0 || j==0 || j==m-1 || i==n-1 || grid[i+1][j]!=col || grid[i-1][j]!=col || grid[i][j-1]!=col || grid[i][j+1]!=col)\n            border = true;\n        \n        dfs(grid, i+1, j, col, visited, target, n, m);\n        dfs(grid, i-1, j, col, visited, target, n, m);\n        dfs(grid, i, j+1, col, visited, target, n, m);\n        dfs(grid, i, j-1, col, visited, target, n, m);\n        \n        if (border)\n            grid[i][j] = target;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coloring-a-border","has_notes":false}