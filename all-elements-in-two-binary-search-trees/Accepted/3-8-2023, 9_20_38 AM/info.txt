{"id":911225653,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1678247438,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/911225653/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"44.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {\n        List<Integer>l=new ArrayList<>();\n        inorder(root1,l);\n        inorder(root2,l);\n        Collections.sort(l);\n        return l;\n    }\n    public void inorder(TreeNode root,List<Integer>l)\n    {\n        if(root==null)return;\n        inorder(root.left,l);\n        l.add(root.val);\n        inorder(root.right,l);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees","has_notes":false}