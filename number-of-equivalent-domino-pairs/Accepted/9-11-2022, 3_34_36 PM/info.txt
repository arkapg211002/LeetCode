{"id":797018792,"lang":"java","lang_name":"Java","time":"7 months, 4 weeks","timestamp":1662890676,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/797018792/","is_pending":"Not Pending","title":"Number of Equivalent Domino Pairs","memory":"59.9 MB","code":"class Solution {\n    public int numEquivDominoPairs(int[][] dominoes) {\n        for(int i=0;i<dominoes.length;i++)\n        {\n            if(dominoes[i][0]>dominoes[i][1])\n            {\n                int tmp=dominoes[i][1];\n                dominoes[i][1]=dominoes[i][0];\n                dominoes[i][0]=tmp;\n            }\n        }\n        HashMap<Integer,Integer>hm=new HashMap<>();\n        int c=0;\n        for(int i=0;i<dominoes.length;i++)\n        {\n            if(hm.get(dominoes[i][0]*10+dominoes[i][1])==null)\n            {\n                hm.put(dominoes[i][0]*10+dominoes[i][1],1);\n            }\n            else hm.put(dominoes[i][0]*10+dominoes[i][1],hm.get(dominoes[i][0]*10+dominoes[i][1])+1);\n            \n        }\n        System.out.println(hm);\n        for(Map.Entry<Integer,Integer>e:hm.entrySet())\n        {\n            int k=e.getValue();\n            if(k>1)c+=((k*(k-1))/2);\n        }\n        return c;\n    }\n}","compare_result":"1111111111111111111","title_slug":"number-of-equivalent-domino-pairs","has_notes":false}