{"id":843371036,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1668445179,"status":10,"status_display":"Accepted","runtime":"1392 ms","url":"/submissions/detail/843371036/","is_pending":"Not Pending","title":"Most Stones Removed with Same Row or Column","memory":"143.8 MB","code":"class Solution {\n    public int removeStones(int[][] stones) {\n \n        HashSet<Pair <Integer,Integer>> visited = new HashSet<>(); \n        int ans = stones.length;\n        for(int i=0;i<stones.length;i++){\n            if(!visited.contains(new Pair <Integer,Integer> (stones[i][0],stones[i][1]))){\n                dfs(stones,visited,stones[i][0],stones[i][1]);\n                ans--;\n            }\n        }\n        return ans;\n    }\n    \n    void dfs(int[][] stones,HashSet<Pair <Integer,Integer>> visited,int i,int j){\n        visited.add(new Pair<Integer,Integer>(i,j));\n        for(int k=0;k<stones.length;k++){\n            if(!visited.contains(new Pair <Integer,Integer> (stones[k][0],stones[k][1]))){\n                if(i==stones[k][0] || j==stones[k][1])\n                    dfs(stones,visited,stones[k][0],stones[k][1]);\n            }\n        }\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"most-stones-removed-with-same-row-or-column","has_notes":false}