{"id":916782443,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1679045834,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/916782443/","is_pending":"Not Pending","title":"Next Permutation","memory":"N/A","code":"public void nextPermutation(int[] A) {\n    if(A == null || A.length <= 1) return;\n    int i = A.length - 2;\n    while(i >= 0 && A[i] >= A[i + 1]) i--; // Find 1st id i that breaks descending order\n    if(i >= 0) {                           // If not entirely descending\n        int j = A.length - 1;              // Start from the end\n        while(A[j] <= A[i]) j--;           // Find rightmost first larger id j\n        swap(A, i, j);                     // Switch i and j\n    }\n    reverse(A, i + 1, A.length - 1);       // Reverse the descending sequence\n}\n\npublic void swap(int[] A, int i, int j) {\n    int tmp = A[i];\n    A[i] = A[j];\n    A[j] = tmp;\n}\n\npublic void reverse(int[] A, int i, int j) {\n    while(i < j) swap(A, i++, j--);\n}","compare_result":null,"title_slug":"next-permutation","has_notes":false}