{"id":940774593,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682623547,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/940774593/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"45.4 MB","code":"class Solution {        \n    public String longestPalindrome(String str) {\n        int n = str.length();\n        boolean table[][] = new boolean[n][n];\n        int maxLength = 1;\n        for (int i = 0; i < n; ++i)\n            table[i][i] = true;\n        int start = 0;\n        for (int i = 0; i < n - 1; ++i) {\n            if (str.charAt(i) == str.charAt(i + 1)) {\n                table[i][i + 1] = true;\n                start = i;\n                maxLength = 2;\n            }\n        }\n        for (int k = 3; k <= n; ++k) {\n            for (int i = 0; i < n - k + 1; ++i) {\n                int j = i + k - 1;\n                if (table[i + 1][j - 1]\n                    && str.charAt(i) == str.charAt(j)) {\n                    table[i][j] = true;\n                    if (k > maxLength) {\n                        start = i;\n                        maxLength = k;\n                    }\n                }\n            }\n        }\n        //System.out.print(\"Longest palindrome substring is; \");\n        // printSubStr(str, start,start + maxLength - 1);\n        int low=start;\n        int high=start + maxLength - 1;\n        return str.substring(low, high + 1);\n        // return maxLength;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false}