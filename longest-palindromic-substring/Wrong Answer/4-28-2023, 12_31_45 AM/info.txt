{"id":940764473,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682622105,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/940764473/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution {\n    public String longestPalindrome(String s) {\n        int n=s.length();\n        String s2=new StringBuilder(s).reverse().toString();\n        int dp[][]=new int[n+1][n+1];\n        int ans=0;\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                if(s.charAt(i-1)==s2.charAt(j-1))\n                {\n                    int val=dp[i][j]=dp[i-1][j-1]+1;;\n                    dp[i][j]=val;\n                    ans=(int)Math.max(ans,val);\n                }\n                else dp[i][j]=0;\n            }\n        }\n        /*System.out.println(ans);\n        for(int i=0;i<=n;i++)\n        {\n            for(int j=0;j<=n;j++)\n            {\n                System.out.print(dp[i][j]+\" \");\n            }\n            System.out.println();\n        }*/\n\n        String p=\"\";\n        for(int i=1;i<=n;i++)\n        {\n            if(dp[i][i]!=0 && dp[i][i]==dp[i-1][i-1]+1)\n                p+=s.charAt(i-1);\n        }\n        return p;\n    }\n}","compare_result":"111011001100111000000100100100111100011101010100000000000000000000000000000001111111111111111100000010101010101010101010101011010101010101110","title_slug":"longest-palindromic-substring","has_notes":false}