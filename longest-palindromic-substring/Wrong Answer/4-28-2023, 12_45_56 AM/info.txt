{"id":940770517,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682622956,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/940770517/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution {\n    public String longestPalindrome(String s) {\n        int n=s.length();\n        String s2=new StringBuilder(s).reverse().toString();\n        int dp[][]=new int[n+1][n+1];\n        int ans=0,start=-1,end=-1;\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                if(s.charAt(i-1)==s2.charAt(j-1))\n                {\n                    int val=dp[i][j]=dp[i-1][j-1]+1;;\n                    dp[i][j]=val;\n                    if (val > ans) \n                    { \n                        ans = val;\n                        start = i;\n                        end = j;\n                    }\n                }\n                else dp[i][j]=0;\n            }\n        }\n        if (ans == 0)return \"\"; \n        StringBuilder sb = new StringBuilder();\n        for (int i = start - ans; i < end; i++) \n            sb.append(s.charAt(i));\n    \n        return sb.toString();    \n\n        \n        \n    }\n}","compare_result":"011011001100111000000110100100111100011101010100000000000000000000000000000001111111111111111100000010101010101010101010101011010101010101110","title_slug":"longest-palindromic-substring","has_notes":false}