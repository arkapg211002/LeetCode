{"id":915653815,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1678886359,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/915653815/","is_pending":"Not Pending","title":"Jump Game IV","memory":"55.4 MB","code":"class Solution {\n    public int minJumps(int[] arr) {\n        int steps=0;\n        int  n=arr.length;\n        HashMap<Integer,List<Integer>> hm=new HashMap<>();\n        for(int i=0;i<arr.length;i++){\n            if(!hm.containsKey(arr[i])){\n                List<Integer> temp =new ArrayList<>();\n                temp.add(i);\n                hm.put(arr[i],temp);\n            }\n            else{\n                List<Integer> temp=hm.get(arr[i]);\n                temp.add(i);\n                hm.put(arr[i],temp);\n            }\n        }\n        boolean vis[]=new boolean[n];\n        vis[0]=true;\n        Queue<Integer> qu=new LinkedList<>();\n        qu.add(0);\n        while(!qu.isEmpty()){\n            int size=qu.size();\n            for(int i=0;i<size;i++){\n                int curridx=qu.poll();\n                if(curridx==n-1)\n                    return steps;\n                List<Integer> jumptoindexes=hm.get(arr[curridx]);\n                jumptoindexes.add(curridx+1);\n                jumptoindexes.add(curridx-1);\n                for(int q:jumptoindexes){\n                    if(q>=0 && q<n && !vis[q]){\n                        vis[q]=true;\n                        qu.add(q);\n                    }\n                }\n                jumptoindexes.clear();\n            }\n            steps++;\n        }\n        return -1;\n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"jump-game-iv","has_notes":false}