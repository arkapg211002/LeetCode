{"id":924693161,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680163696,"status":10,"status_display":"Accepted","runtime":"537 ms","url":"/submissions/detail/924693161/","is_pending":"Not Pending","title":"Maximum Average Pass Ratio","memory":"99.9 MB","code":"class Solution {\n        // O(N*logN) time\n    // O(N) space\n    public double maxAverageRatio(int[][] classes, int extraStudents) {\n        PriorityQueue<double[]> doubles = new PriorityQueue<>((o1, o2) -> {\n            double t1 = (o1[0] + 1) / (o1[1] + 1) - o1[0] / o1[1];\n            double t2 = (o2[0] + 1) / (o2[1] + 1) - o2[0] / o2[1];\n            if (t1 == t2) return 0;\n            return t1 - t2 > 0 ? -1 : 1;\n        });\n        for (int[] c : classes) {\n            double[] t = new double[3];\n            t[0] = c[0];\n            t[1] = c[1];\n            t[2] = c[0] * 1.0D / c[1];\n            doubles.add(t);\n        }\n        while (extraStudents > 0) {\n            extraStudents--;\n            double[] t = doubles.poll();\n            t[0] += 1;\n            t[1] += 1;\n            t[2] = t[0] * 1.0D / t[1];\n            doubles.add(t);\n        }\n        double t = 0;\n        while (!doubles.isEmpty()) t += doubles.poll()[2];\n\n        return t / classes.length;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-pass-ratio","has_notes":false}