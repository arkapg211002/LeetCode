{"id":787085174,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1661857542,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/787085174/","is_pending":"Not Pending","title":"Day of the Week","memory":"39.2 MB","code":"class Solution {\n    public String dayOfTheWeek(int day, int month, int year) {\n      String[] days = new String[]{\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"};\n        int[] months = new int[]{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n        //1971-1-1 is Friday\n      int dayCount = 0;\n        //deal with year\n    for(int i = 1971; i < year; i++) {\n          boolean isLeap = isLeapYear(i);\n          if(isLeap) {\n              dayCount += 366;\n          } else {\n              dayCount += 365;\n          }\n      }\n      //deal with month\n     for(int m = 1; m < month; m++) {\n         dayCount += months[m-1];\n         if(isLeapYear(year) && m == 2) {\n             dayCount += 1;\n         }\n     }  \n        //deal with day\n        dayCount += day - 1;\n        \n        //start from Friday\n        return days[(dayCount + 5) % 7];\n    }\n    \n    private boolean isLeapYear(int year) {\n        if(year % 400 == 0) return true;\n        if(year % 100 == 0) return false;\n        if(year % 4 == 0) return true;\n        return false;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111","title_slug":"day-of-the-week","has_notes":false}