{"id":924040189,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680068239,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/924040189/","is_pending":"Not Pending","title":"Score After Flipping Matrix","memory":"40.2 MB","code":"class Solution {\n    public int matrixScore(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n        for(int i = 0;i<n;i++){       // Flip all rows that start with zero\n            if(grid[i][0] == 0)\n            for(int j = 0;j<m;j++){\n                if(grid[i][j] == 0)\n                    grid[i][j] = 1;\n                else\n                    grid[i][j] = 0;\n            }\n        }\n        for(int i = 0;i<m;i++){       // Flip all columns where number of zeroes is greater than number of ones\n            int count = 0;\n            for(int j = 0;j<n;j++){\n                if(grid[j][i] == 0)\n                    count++;\n            }\n            if(count*2 > n){\n                for(int j = 0;j<n;j++){\n                    if(grid[j][i] == 0)\n                        grid[j][i] = 1;\n                    else\n                        grid[j][i] = 0;\n                }\n            }\n        }\n        int sum=0;\n        for(int i = 0;i<n;i++){     // Calculate the sum\n            int p = 1;\n            for(int j = m-1;j>=0;j--){\n                sum += grid[i][j]*p;\n                p *= 2;\n            }\n        }\n        return sum;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"score-after-flipping-matrix","has_notes":false}