{"id":916782321,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1679045818,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/916782321/","is_pending":"Not Pending","title":"4Sum","memory":"42.7 MB","code":"class Solution {\n    public List<List<Integer>> fourSum(int[] nums, int target) {\n        List<List<Integer>> ans = new ArrayList<List<Integer>>();\n        Arrays.sort(nums);\n        for(int i = 0; i < nums.length - 3; i++) {\n            for(int j = i + 1; j < nums.length - 2; j++) {\n                long res = (nums[i] + nums[j]);\n                long remSum = target - res;\n                int front = j + 1, back = nums.length - 1;\n                while(front < back) {\n                    long twoSum = nums[front] + nums[back];\n                    if(twoSum < remSum) front++;\n                    else if(twoSum > remSum) back--;\n                    else {\n                        List<Integer> sum = new ArrayList<>();\n                        sum.add(nums[i]);\n                        sum.add(nums[j]);\n                        sum.add(nums[front]);\n                        sum.add(nums[back]);\n                        ans.add(sum);\n                        \n                        while(front < back && nums[front] == sum.get(2)) front++;\n                        while(front < back && nums[back] == sum.get(3)) back--;\n                    }\n                }\n                while(i < nums.length - 1 && nums[i + 1] == nums[i]) i++;\n                while(j < nums.length - 1 && nums[j + 1] == nums[j]) j++;\n            }\n        }\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum","has_notes":false}