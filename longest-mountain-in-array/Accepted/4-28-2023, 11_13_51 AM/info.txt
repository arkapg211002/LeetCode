{"id":940948070,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682660631,"status":10,"status_display":"Accepted","runtime":"225 ms","url":"/submissions/detail/940948070/","is_pending":"Not Pending","title":"Longest Mountain in Array","memory":"44.5 MB","code":"class Solution {\n    public int longestMountain(int[] arr) {\n        int n=arr.length;\n        int dp1[]=new int[n];\n        int dp2[]=new int[n];\n        Arrays.fill(dp1,1);\n        Arrays.fill(dp2,1);\n        for(int i=1;i<n;i++)\n        {\n            if(arr[i-1]<arr[i])\n                dp1[i]=dp1[i-1]+1;\n        }\n        for(int i=n-2;i>=0;i--)\n        {\n            if(arr[i+1]<arr[i])\n                dp2[i]=dp2[i+1]+1;\n        }\n        int max=0;\n        for(int i=0;i<n;i++)\n        {\n            System.out.println(dp1[i]+\" \"+dp2[i]);\n            if(dp1[i]>1 && dp2[i]>1)\n                max=(int)Math.max(max,dp1[i]+dp2[i]-1);\n        }\n        return max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-mountain-in-array","has_notes":false}