{"id":937676185,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1682128165,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/937676185/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"44 MB","code":"class Solution {\n    public int minInsertions(String a) {\n        StringBuilder s = new StringBuilder(a);\n        s.reverse();\n        String b = s.toString();\n        int n = a.length();\n        int t[][] = new int[n+1][n+1];\n        for(int i=1; i<=n; i++) \n            for(int j=1; j<=n; j++)\n                if(a.charAt(i-1)==b.charAt(j-1)) t[i][j] = 1 + t[i-1][j-1];\n                else t[i][j] = Math.max(t[i-1][j], t[i][j-1]);\n        return n-t[n][n];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false}