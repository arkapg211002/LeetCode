{"id":940704745,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682614935,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/940704745/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"42.7 MB","code":"class Solution {\n    public int minInsertions(String s) {\n        String sb=new StringBuilder(s).reverse().toString();\n        int k=lcs(s,sb);\n        return (s.length()-k);\n    }\n    public int lcs(String text1, String text2) {\n        int n=text1.length();\n        int m=text2.length();\n        int prev[]=new int[m+1];\n        int cur[]=new int[m+1];\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=m;j++)\n            {\n                if(text1.charAt(i-1)==text2.charAt(j-1))cur[j]=1+prev[j-1];\n                else cur[j]=0+(int)Math.max(prev[j],cur[j-1]);\n            }\n            prev=(int[])(cur.clone());\n        }\n        return prev[m];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false}