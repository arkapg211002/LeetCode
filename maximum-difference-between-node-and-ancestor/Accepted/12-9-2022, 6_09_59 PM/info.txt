{"id":857121695,"lang":"java","lang_name":"Java","time":"4 months, 4 weeks","timestamp":1670589599,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/857121695/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"42.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private int maxDiff;\n\t\n    public int maxAncestorDiff(TreeNode root) {\n    \tcalculateMaxDiff(root, root.val, root.val);\n    \t\n    \treturn maxDiff;\n    }\n    \n    private void calculateMaxDiff(TreeNode root, int maxAncestor, int minAncestor) {\n    \tif (root == null) {\n\t\t\treturn;\n\t\t}\n    \t// we only have positive values\n    \tmaxDiff = Math.max(maxDiff, Math.max(Math.abs(root.val - minAncestor), Math.abs(maxAncestor - root.val)));\n    \tmaxAncestor = root.val > maxAncestor ? root.val : maxAncestor;\n    \tminAncestor = root.val < minAncestor ? root.val : minAncestor;\n    \tcalculateMaxDiff(root.left, maxAncestor, minAncestor);\n    \tcalculateMaxDiff(root.right, maxAncestor, minAncestor);\n    \t\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor","has_notes":false}