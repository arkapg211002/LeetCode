{"id":924343725,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680109420,"status":10,"status_display":"Accepted","runtime":"358 ms","url":"/submissions/detail/924343725/","is_pending":"Not Pending","title":"Maximum Product After K Increments","memory":"52.6 MB","code":"class Solution {\n\tpublic static int maximumProduct(int[] arr, int k) {\n\t\tPriorityQueue<Integer> pq = new PriorityQueue<>();\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tpq.add(arr[i]);\n\t\t}\n\t\twhile (k-- > 0) {\n\t\t\tint min = pq.remove();\n\t\t\tmin = min + 1;\n\t\t\tpq.add(min);\n\t\t}\n\t    long res = 1;\n\t\twhile (!pq.isEmpty()) {\n\t\t\tres = res * pq.remove() % 1000000007;\n\t\t}\n\t\treturn (int) (res);\n\t}\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-after-k-increments","has_notes":false}