{"id":912743976,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678462319,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/912743976/","is_pending":"Not Pending","title":"House Robber III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    LinkedList<TreeNode>q=new LinkedList<>();\n    List<Integer>b=new ArrayList<>();\n    int e=0;\n    int o=0;\n    public int rob(TreeNode root) {\n        traverse(root);\n        return (int)Math.max(e,o);\n    }\n    public void traverse(TreeNode root)\n    {\n        TreeNode p=root;\n        if(p==null)return;\n        q.add(p);\n        int level=0;\n        \n        while(q.isEmpty()==false)\n        {\n            int n=q.size();\n            for(int i=0;i<n;i++)\n            {\n                p=q.removeFirst();\n                b.add(p.val);\n                if(p.left!=null)q.add(p.left);\n                if(p.right!=null)q.add(p.right);\n            }\n            int s=0;\n            for(int i=0;i<b.size();i++)s+=b.get(i);\n            if(level%2==0)e+=s;\n            else o+=s;\n            level+=1;\n            b=new ArrayList<>();\n        }\n    }\n}","compare_result":"1111111111101101110111101111111101110111111111011111110110111111111001010000000000000000000000000000000000000000000000000000","title_slug":"house-robber-iii","has_notes":false}