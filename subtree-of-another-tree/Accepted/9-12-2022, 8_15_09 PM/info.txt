{"id":797989763,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1662993909,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/797989763/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"46.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode root, TreeNode subRoot) {\n        if (root == null) return false;\n        if (root.val == subRoot.val) \n            if (compareTrees(root, subRoot)) return true;\n        return isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot);\n    }\n    \n    private boolean compareTrees(TreeNode t1, TreeNode t2) {\n        if (t1 == null && t2 == null) return true;\n        if (t1 == null || t2 == null) return false;\n        return t1.val == t2.val && compareTrees(t1.left, t2.left) && compareTrees(t1.right, t2.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false}