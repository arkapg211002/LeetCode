{"id":811912668,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1664522807,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/811912668/","is_pending":"Not Pending","title":"Slowest Key","memory":"44.8 MB","code":"class Solution {\n    public char slowestKey(int[] releaseTimes, String keysPressed) \n    {\n        int n=releaseTimes.length;\n        int[] prefix = new int[n];\n        \n        prefix[0] = releaseTimes[0];\n        for(int i=1;i<n;i++)\n        {\n            prefix[i] = releaseTimes[i] - releaseTimes[i-1];\n        }\n        \n        int ans = prefix[0];\n        char bestchar = keysPressed.charAt(0);\n        for(int i=0;i<n;i++)\n        {\n            if(ans<prefix[i])\n            {\n                ans = prefix[i];\n                bestchar = keysPressed.charAt(i);\n            }\n            else if((ans==prefix[i]) && (keysPressed.charAt(i) > bestchar))\n            {\n                bestchar = keysPressed.charAt(i);\n            }\n        }\n                    \n    return bestchar;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"slowest-key","has_notes":false}