{"id":933701310,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1681487194,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/933701310/","is_pending":"Not Pending","title":"Take Gifts From the Richest Pile","memory":"42.2 MB","code":"class Solution {\n    public long pickGifts(int[] gifts, int k) {\n        int l = gifts.length;\n        PriorityQueue<Integer> pq = new PriorityQueue<Integer>((a, b) -> b - a);\n        for(int i:gifts)                   // Adding the elements to pq\n            pq.add(i);\n        \n        for(int i=1; i<=k; i++)\n        {\n            int temp = pq.poll();         //Fetching the max element\n            int n = (int)Math.sqrt(temp);\n            pq.add(n);\n        }\n\n        long sum=0;\n        for(int i:pq)                     // Iterate over the elements\n        {                                 // of pq and add to sum\n            sum+=i;\n        }\n        return sum;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"take-gifts-from-the-richest-pile","has_notes":false}