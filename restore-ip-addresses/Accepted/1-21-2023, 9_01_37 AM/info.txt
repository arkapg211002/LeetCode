{"id":882156827,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1674271897,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/882156827/","is_pending":"Not Pending","title":"Restore IP Addresses","memory":"40.9 MB","code":"class Solution {\n    public List<String> restoreIpAddresses(String s) {\n        List<String> ls = new ArrayList<String>();\n        r(s.toCharArray(), ls, new Stack<String>(), 0, 4);\n        return ls;\n    }\n\n    public void r(char[] s, List<String> rs, Stack<String> ss, int i, int c) {\n        // cl - characters left\n        var cl = s.length -i;\n        if (c == 1) {\n            if (cl > 3 || cl == 0) return;\n            // 3 characters left, last group\n            if (cl == 3 && \n                (s[i] > '2' || \n                 (s[i] == '2' && \n                  (s[i+1] > '5' || \n                   (s[i+1] == '5' && s[i+2] > '5'))))) return;\n\n            // leading zero, only one character should be left.\n            if (s[i] == '0' && cl != 1) return;\n\n            // build and join the string\n            var sb = new StringBuilder();\n            for(; i < s.length; i++) sb.append(s[i]);\n\n            var fs = new StringBuilder();\n            for(var j: ss) {\n                fs.append(j);\n                fs.append('.');\n            }\n            fs.append(sb.toString());\n            rs.add(fs.toString());\n            return;\n        }\n\n        if (cl > c * 3 || (cl < c)) \n            return;\n        // assume this number is made of 1 digit\n        var sb = new StringBuilder();\n        sb.append(s[i]);\n        ss.push(sb.toString());\n        r(s, rs, ss, i+1, c-1);\n        ss.pop();\n        \n        // assume this number is made of 2 digits\n        if (s[i] == '0') return;\n        if (i + 1 > s.length) return;\n        sb.append(s[i + 1]);\n        ss.push(sb.toString());\n        r(s, rs, ss, i+2, c-1);\n        ss.pop();\n\n        // assume this number is made of 3 digits\n        if (i + 2 >= s.length) return;\n        if (s[i] > '2' || \n             (s[i] == '2' && \n              (s[i+1] > '5' || \n               (s[i+1] == '5' && s[i+2] > '5')))) return;\n                \n        sb.append(s[i + 2]);\n        ss.push(sb.toString());\n        r(s, rs, ss, i + 3, c - 1);\n        ss.pop();\n    }\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"restore-ip-addresses","has_notes":false}