{"id":940160534,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1682527224,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/940160534/","is_pending":"Not Pending","title":"Partition Array Into Two Arrays to Minimize Sum Difference","memory":"N/A","code":"class Solution {\n    public int minimumDifference(int[] nums) {\n        int sum=0;\n        \n        for(int i=0; i<nums.length; i++)\n            sum+=nums[i];\n        \n        List<Integer> list=new ArrayList<>();\n        f(nums, 0, 0, 0, list);\n        \n        int ans=Integer.MAX_VALUE;\n        for(int i=0; i<=list.size()/2; i++) \n            ans=Math.min(ans, Math.abs(sum-list.get(i)-list.get(i)));\n        \n        return ans;\n    }\n    void f(int[] nums, int i, int sum, int l, List<Integer> list) {\n        if(l == nums.length/2) {\n            list.add(sum);\n            return;\n        }\n        if(i == nums.length) \n            return;\n        \n        f(nums, i+1, sum+nums[i], l+1, list);\n        f(nums, i+1, sum, l, list);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-array-into-two-arrays-to-minimize-sum-difference","has_notes":false}