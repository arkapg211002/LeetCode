{"id":940161125,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1682527294,"status":10,"status_display":"Accepted","runtime":"437 ms","url":"/submissions/detail/940161125/","is_pending":"Not Pending","title":"Partition Array Into Two Arrays to Minimize Sum Difference","memory":"43.3 MB","code":"import java.util.Arrays;\n\npublic class Solution {\n    public int minimumDifference(int[] nums) {\n        int n = nums.length;\n        if (n == 2) return Math.abs(nums[1] - nums[0]);       \n        int[][] lists1 = generate(Arrays.copyOfRange(nums, 0, n / 2));\n        int[][] lists2 = generate(Arrays.copyOfRange(nums, n / 2, n));\n        int ans = Integer.MAX_VALUE;\n        for (int d = 0; d <= n / 2; d++) {\n            int[] arr1 = lists1[d], arr2 = lists2[d];\n            int k = arr1.length;\n            int i1 = 0, i2 = 0; \n            while (i1 < k && i2 < k) {\n                int diff = arr1[i1] - arr2[i2];\n                ans = Math.min(ans, Math.abs(diff));\n                if (diff <= 0) i1++;\n                if (diff >= 0) i2++;\n            }\n        }\n        return ans;\n    }\n\n    private static int[][] generate(int[] nums) {\n        int n = nums.length;\n        int total = 0;\n        for (int num : nums) total += num;\n        int[][] ans = new int[n + 1][];\n        int[] pos = new int[n + 1];\n        for (int i = 0, binomial = 1; i <= n; i++) {\n            ans[i] = new int[binomial]; \n            binomial = binomial * (n - i) / (i + 1);\n        }\n        int maxValue = 1 << n;\n        for (int key = 0; key < maxValue; key++) {\n            int sum1 = 0;\n            for (int i = 0; i < n; i++) {\n                if ((key >> i & 1) == 1) sum1 += nums[i];\n            }\n            int sum2 = total - sum1;\n            int bits = Integer.bitCount(key);\n            ans[bits][pos[bits]++] = sum1 - sum2;\n        }\n        for (int[] arr : ans) Arrays.sort(arr);\n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-array-into-two-arrays-to-minimize-sum-difference","has_notes":false}