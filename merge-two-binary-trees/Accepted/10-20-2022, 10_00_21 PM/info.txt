{"id":826721345,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666283421,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/826721345/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"50.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode mergeTrees(TreeNode root1, TreeNode root2) {\n        if(root1==null && root2==null)return null;\n        if(root1==null)return root2;\n        if(root2==null)return root1;\n        root1.val=root1.val+root2.val;\n        root1.left=mergeTrees(root1.left,root2.left);\n        root1.right=mergeTrees(root1.right,root2.right);\n        return root1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees","has_notes":false}