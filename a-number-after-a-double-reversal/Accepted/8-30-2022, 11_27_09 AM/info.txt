{"id":786918562,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1661839029,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/786918562/","is_pending":"Not Pending","title":"A Number After a Double Reversal","memory":"40.6 MB","code":"class Solution {\n    public boolean isSameAfterReversals(int num) {\n        int m=num;\n        StringBuilder sb=new StringBuilder(Integer.toString(num));\n        int n=sb.length();\n        if(n==1)return true;\n        sb=sb.reverse();\n        \n        StringBuilder s=new StringBuilder();\n        s=sb;\n        while(s.charAt(0)=='0')\n        {\n            s=s.delete(0,1);\n        }\n        \n        \n        \n        \n        StringBuilder sb1=new StringBuilder();\n        sb1=s;\n        sb1=sb1.reverse();\n        \n        \n        \n        if(Integer.toString(m).equals(sb1.toString())==true)return true;\n        else return false;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"a-number-after-a-double-reversal","has_notes":false}