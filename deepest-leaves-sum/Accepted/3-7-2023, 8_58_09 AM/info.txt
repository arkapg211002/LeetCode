{"id":910550720,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1678159689,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/910550720/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"45 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int s=0;\n    public int deepestLeavesSum(TreeNode root) {\n        int h=height(root);\n        leaves(root,h,1);\n        return s;\n    }\n    public int height(TreeNode root)\n    {\n        if(root==null)return 0;\n        return (int)Math.max(height(root.left),height(root.right))+1;\n    }\n    public void leaves(TreeNode root,int h,int d)\n    {\n        if(root!=null)\n        {\n            if(d==h)s+=root.val;\n            leaves(root.left,h,d+1);\n            leaves(root.right,h,d+1);\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"deepest-leaves-sum","has_notes":false}