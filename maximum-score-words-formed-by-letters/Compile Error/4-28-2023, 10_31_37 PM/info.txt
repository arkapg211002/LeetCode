{"id":941193711,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1682701297,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/941193711/","is_pending":"Not Pending","title":"Maximum Score Words Formed by Letters","memory":"N/A","code":"class Solution {\n    boolean check(HashMap<Character,Integer>letters,String word){\n        for (char c:word.toCharArray()){\n            boolean res=true;\n            if (letters.getOrDefault(c,0)<=0) {\n                boolean res=false;\n            }\n            else{\n                letters.put(c,letters.get(c)-1);\n            }\n            \n        }\n        return true;\n    }\n    public int earn(int a,String[] words,HashMap<Character,Integer>letters, int[] score,int []memo){\n        if (memo[a]!=-1){\n            return memo[a];\n        }\n        int ans=0;\n        for (int i=0;i<words.length;i++){\n            HashMap<Character,Integer>tempt=new HashMap();\n            for (char c : letters.keySet()){\n                        tempt.put(c,letters.get(c));\n                    }\n            if (((a>>i)&1)==1){\n                int temp=0;\n                if (check(tempt,words[i])) {\n                    for (char c : words[i].toCharArray()){\n                        temp+=score[c-'a'];\n                    }\n                    ans=Math.max(earn(a&~(1<<i),words,tempt,score,memo)+temp,ans);}\n            }\n        }\n        memo[a]=ans;\n        return ans;\n    }\n    public int maxScoreWords(String[] words, char[] letters, int[] score) {\n        HashMap<Character,Integer>letter=new HashMap();\n        int [] memo= new int [(int)Math.pow(2,words.length)];\n        Arrays.fill(memo,-1);\n        for(char item:letters){\n             letter.put(item,letter.getOrDefault(item,0)+1);\n        }\n        return earn((int)Math.pow(2,words.length)-1,words,letter,score,memo);\n    }\n}","compare_result":null,"title_slug":"maximum-score-words-formed-by-letters","has_notes":false}