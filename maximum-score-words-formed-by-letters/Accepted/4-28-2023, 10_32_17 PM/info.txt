{"id":941194016,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1682701337,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/941194016/","is_pending":"Not Pending","title":"Maximum Score Words Formed by Letters","memory":"42.1 MB","code":"class Solution {\n    public int maxScoreWords(String[] words, char[] letters, int[] score) {\n        int[] freq = new int[26];\n        for (char c : letters) {\n            freq[c - 'a']++;\n        }\n        return maxScoreWordsHelper(words, freq, score, 0);\n    }\n    \n    private int maxScoreWordsHelper(String[] words, int[] freq, int[] score, int index) {\n        if (index == words.length) {\n            return 0;\n        }\n        int maxScore = 0;\n        int[] newFreq = freq.clone();\n        int curScore = 0;\n        boolean isValid = true;\n        for (char c : words[index].toCharArray()) {\n            int i = c - 'a';\n            if (newFreq[i] == 0) {\n                isValid = false;\n                break;\n            }\n            newFreq[i]--;\n            curScore += score[i];\n        }\n        if (isValid) {\n            curScore += maxScoreWordsHelper(words, newFreq, score, index + 1);\n            maxScore = Math.max(maxScore, curScore);\n        }\n        maxScore = Math.max(maxScore, maxScoreWordsHelper(words, freq, score, index + 1));\n        return maxScore;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"maximum-score-words-formed-by-letters","has_notes":false}