{"id":891101649,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1675491137,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/891101649/","is_pending":"Not Pending","title":"Permutation in String","memory":"42.1 MB","code":"class Solution {\n    public boolean checkInclusion(String s1, String s2) {\n        int n = s1.length();\n        int m = s2.length();\n        if(n>m) return false;\n        int[] arr = new int[26];\n        for(int i=0;i<n;i++){\n            arr[s1.charAt(i)-'a']++;\n         }\n         for(int i = 0;i<m;i++){\n            arr[s2.charAt(i)-'a']--;\n            if(i-n >= 0){\n                arr[s2.charAt(i-n)-'a']++;\n            }\n            if(zero(arr)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public boolean zero(int[] arr){\n       for(int i =0 ;i<26;i++){\n           if(arr[i] != 0) {\n               return false;\n           }\n       }\n       return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-in-string","has_notes":false}