{"id":934616836,"lang":"java","lang_name":"Java","time":"3Â weeks","timestamp":1681634026,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/934616836/","is_pending":"Not Pending","title":"Rearrange Array to Maximize Prefix Score","memory":"58.6 MB","code":"class Solution {\n    public int maxScore(int[] nums) {\n        Arrays.sort(nums);\n        int a[]=new int[nums.length],k=0;\n        for(int i=nums.length-1;i>=0;i--)\n        {\n            a[k]=nums[i];\n            k+=1;\n        }\n        long pre[]=new long[nums.length];\n        pre[0]=(long)a[0];\n        int c=0;\n        if(pre[0]>0)c+=1;\n        for(int i=1;i<nums.length;i++)\n        {\n            pre[i]=(long)a[i]+pre[i-1];\n            if(pre[i]>0)c+=1;\n        }\n        return c;\n    }\n}","compare_resulttitle_slug":"rearrange-array-to-maximize-prefix-score","has_notes":false}