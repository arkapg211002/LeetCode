{"id":911288953,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1678255738,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/911288953/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"43.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode insertIntoBST(TreeNode root, int val) {\n        if(root==null)\n        {\n            root=new TreeNode(val);\n            root.left=null;\n            root.right=null;\n        }\n        else if(val<root.val)root.left=insertIntoBST(root.left,val);\n        else root.right=insertIntoBST(root.right,val);\n        return root;\n    }\n    \n}","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree","has_notes":false}