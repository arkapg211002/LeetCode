{"id":788446065,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1661998189,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/788446065/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"60.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int goodNode(TreeNode root, int max){\n        if(root==null)\n            return 0;\n        int c=0;\n        if(max<=root.val){\n            c+=1;\n            max= root.val;\n        }\n        if(root.left!=null)\n            c+=goodNode(root.left , max);\n        if(root.right!=null)\n            c+=goodNode(root.right , max);\n        return c;\n        \n    }\n    public int goodNodes(TreeNode root) {\n        return goodNode(root, -100000);        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false}