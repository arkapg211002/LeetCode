{"id":868562338,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1672492541,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/868562338/","is_pending":"Not Pending","title":"Unique Paths III","memory":"39.5 MB","code":"class Solution {\n    public int uniquePathsIII(int[][] grid) {\n        int zero = 0 , a = 0, b = 0 ;\n        for(int r = 0; r < grid.length ; r++){\n            for(int c = 0; c < grid[0].length; c++){\n                if(grid[r][c] == 0)   zero++;\n                   else if(grid[r][c] == 1){\n                    a = r;\n                    b = c;\n                }\n            }\n        }\n        return path(grid, a, b, zero);\n    }\n    private int path(int[][] grid, int x, int y, int zero){\n        if(x < 0 || y < 0 || x >= grid.length || y >= grid[0].length || grid[x][y] == -1)\n           return 0;\n        if(grid[x][y] == 2)\n           return zero == -1 ? 1 : 0;\n        grid[x][y] = -1;\n        zero--;\n        int totalCount = path(grid, x + 1, y, zero) + path(grid, x, y + 1, zero) +\n                         path(grid, x - 1, y, zero) + path(grid, x, y - 1, zero);\n        grid[x][y] = 0;\n        zero++;\n\n        return totalCount;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"unique-paths-iii","has_notes":false}