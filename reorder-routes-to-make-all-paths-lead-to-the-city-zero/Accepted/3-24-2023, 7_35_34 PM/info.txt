{"id":921321251,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1679666734,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/921321251/","is_pending":"Not Pending","title":"Reorder Routes to Make All Paths Lead to the City Zero","memory":"65 MB","code":"class Solution {\n    public int minReorder(int n, int[][] connections) {\n        List<List<Integer>> adj=new ArrayList<>();\n        for(int i=0;i<n;i++){\n            adj.add(new ArrayList<>());\n        }\n        for(int i=0;i<connections.length;i++){\n            adj.get(connections[i][0]).add(connections[i][1]);\n            adj.get(connections[i][1]).add(-connections[i][0]);\n        }\n        boolean vis[]=new boolean[n];\n        int cnt=0;\n        Queue<Integer> qu=new LinkedList<>();\n        qu.add(0);\n        vis[0]=true;\n        while(!qu.isEmpty()){\n            int curr=qu.poll();\n            for(int it:adj.get(Math.abs(curr))){\n                if(!vis[Math.abs(it)]){\n                    qu.add(it);\n                    vis[Math.abs(it)]=true;\n                    if(it>0)\n                        cnt++;\n                }\n            }\n        }\n        return cnt;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reorder-routes-to-make-all-paths-lead-to-the-city-zero","has_notes":false}