{"id":827015095,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666320743,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/827015095/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"42.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer>l=new ArrayList<>();\n    public List<Integer> postorderTraversal(TreeNode root) {\n        postorder(root);\n        return l;\n    }\n    public void postorder(TreeNode root)\n    {\n        if(root==null)\n        {\n            //l.add(null);\n            return;\n        }\n        postorder(root.left);\n        postorder(root.right);\n        l.add(root.val);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false}