{"id":934611111,"lang":"java","lang_name":"Java","time":"3Â weeks","timestamp":1681633093,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/934611111/","is_pending":"Not Pending","title":"Maximize the Topmost Element After K Moves","memory":"57.9 MB","code":"class Solution {\n    public int maximumTop(int[] nums, int k) {\n        if(k % 2 == 1 && nums.length == 1) return -1;\n        int ans = -1;\n        if(k > nums.length){\n            for(int num : nums) ans = Math.max(ans, num);\n        }\n        else{\n            for(int i = 0; i < k - 1; i++){\n                ans = Math.max(ans, nums[i]);\n            }\n            if(k < nums.length) ans = Math.max(ans, nums[k]);\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximize-the-topmost-element-after-k-moves","has_notes":false}