{"id":827076257,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666327742,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/827076257/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"41.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int findSecondMinimumValue(TreeNode root) {   \n       if(root == null) return -1;\n       if(root.left == null && root.right == null) return -1;\n    \n       int left = root.left.val;\n       int right = root.right.val;\n        \n       if(root.left.val == root.val) {\n           left = findSecondMinimumValue(root.left);\n       }\n       \n       if(root.right.val == root.val) {\n           right = findSecondMinimumValue(root.right);\n       }\n        \n       if(left != -1 && right != -1) {\n           return Math.min(left, right);\n       } else if(left != -1) {\n           return left;\n       } else {\n           return right;\n       }\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false}