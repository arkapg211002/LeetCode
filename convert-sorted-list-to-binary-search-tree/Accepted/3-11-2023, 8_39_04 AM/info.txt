{"id":912991754,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678504144,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/912991754/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"43.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedListToBST(ListNode head) {\n        List<Integer> li = new ArrayList<>();\n        while(head != null)\n        {\n            li.add(head.val);\n            head = head.next;\n        }\n        return CreateTree(li, 0, li.size()-1);\n    }\n    TreeNode CreateTree(List<Integer> li, int l, int r)\n    {\n        if(l>r)\n        return null;\n\n        int mid = (l + r)/2;\n\n        TreeNode head = new TreeNode(li.get(mid));\n        head.left = CreateTree(li, l, mid-1);\n        head.right = CreateTree(li, mid + 1, r);\n        return head;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false}