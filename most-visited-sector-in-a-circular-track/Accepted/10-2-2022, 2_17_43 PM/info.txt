{"id":813376182,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1664700463,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/813376182/","is_pending":"Not Pending","title":"Most Visited Sector in  a Circular Track","memory":"42.6 MB","code":"class Solution {\n    public List<Integer> mostVisited(int n, int[] rounds) {\n        var start = rounds[0];\n        var end = rounds[rounds.length - 1];   \n        var res = new ArrayList<Integer>();\n        if (start <= end) {\n            for (int i = start; i <= end; i++) res.add(i);\n        } else {\n            for (int i = 1; i <= end; i++) res.add(i);\n            for (int i = start; i <= n; i++) res.add(i);\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"most-visited-sector-in-a-circular-track","has_notes":false}