{"id":827075215,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666327630,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/827075215/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"42.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Pair{\n    TreeNode parent;\n    int level;\n    public Pair(int level, TreeNode parent){\n        this.level = level;\n        this.parent = parent;\n    }\n}\nclass Solution {\n    public boolean isCousins(TreeNode root, int x, int y) {\n        Pair no_x = findVal(root,x,0,null);\n        Pair no_y = findVal(root,y,0,null);\n        \n        if(no_x.level == no_y.level && no_x.parent != no_y.parent) return true;\n        \n        return false;\n    }\n    Pair findVal(TreeNode root,int val, int level, TreeNode parent){\n        if(root == null) return null;\n        if(root.val == val) return new Pair(level, parent);\n        \n        Pair leftpair = findVal(root.left, val, level+1, root);\n        Pair rightpair = findVal(root.right, val, level+1, root);\n        \n        return leftpair == null? rightpair: leftpair;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"cousins-in-binary-tree","has_notes":false}