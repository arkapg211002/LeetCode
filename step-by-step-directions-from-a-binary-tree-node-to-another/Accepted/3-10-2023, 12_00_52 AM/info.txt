{"id":912252373,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678386652,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/912252373/","is_pending":"Not Pending","title":"Step-By-Step Directions From a Binary Tree Node to Another","memory":"83.6 MB","code":"class Solution { \n\n    List<String> paths;    \n    public String getDirections(TreeNode root, int startValue, int destValue) {\n        if(root == null)\n            return \"\";\n        paths = new ArrayList();\n        TreeNode lca = lca(root, startValue, destValue);\n        find(lca, startValue, new StringBuilder());\n        find(lca, destValue, new StringBuilder());\n        StringBuilder result = new StringBuilder();\n        \n        for(int i = 0 ; i < paths.get(0).length(); i++)\n            result.append(\"U\");\n        result.append(paths.get(1));\n        return result.toString();\n    }\n    \n    public TreeNode lca(TreeNode node, int startValue, int destValue){\n        \n        if(node == null)\n            return null;\n        \n        if(node.val == startValue || node.val == destValue)\n            return node;\n        \n        TreeNode left = lca(node.left, startValue, destValue);\n        TreeNode right = lca(node.right, startValue, destValue);\n        \n        if(left != null && right != null)\n            return node;\n        \n        return left != null ? left : right;\n    }\n    \n    public void find(TreeNode node, int val, StringBuilder path){\n        if(node == null)\n            return;\n        \n        if(node.val == val){\n            paths.add(path.toString());\n            return;\n        }\n        \n        if(node.left != null)\n            find(node.left, val, path.append(\"L\"));\n        if(node.right != null)\n            find(node.right, val, path.append(\"R\"));\n        \n        path.deleteCharAt(path.length()-1);\n        return;\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"step-by-step-directions-from-a-binary-tree-node-to-another","has_notes":false}