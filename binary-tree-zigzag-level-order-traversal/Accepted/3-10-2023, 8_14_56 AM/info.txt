{"id":912421110,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678416296,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/912421110/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"41.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {\n        TreeNode p=null;\n        List<List<Integer>>ans=new ArrayList<>();\n        if(root==null)return ans;\n        Deque<TreeNode>q=new LinkedList<>();\n        int level=0;\n        q.push(root);\n        List<Integer>b=new ArrayList<>();\n        while(q.isEmpty()==false)\n        {\n            int n=q.size();\n            if(level%2==0)\n            {\n                for(int i=0;i<n;i++)\n                {\n                    p=q.getFirst();\n                    b.add(p.val);\n                    q.removeFirst();\n                    if(p.left!=null)q.addLast(p.left);\n                    if(p.right!=null)q.addLast(p.right);\n                }\n            }\n            else\n            {\n                for(int i=0;i<n;i++)\n                {\n                    p=q.getLast();\n                    b.add(p.val);\n                    q.removeLast();\n                    if(p.right!=null)q.addFirst(p.right);\n                    if(p.left!=null)q.addFirst(p.left);\n                }\n            }\n            ans.add(b);\n            b=new ArrayList<>();\n            level+=1;\n        }\n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false}