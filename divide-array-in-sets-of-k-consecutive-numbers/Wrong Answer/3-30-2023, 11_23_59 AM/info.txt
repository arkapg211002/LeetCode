{"id":924633854,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680155639,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/924633854/","is_pending":"Not Pending","title":"Divide Array in Sets of K Consecutive Numbers","memory":"N/A","code":"class Solution {\n    public boolean isPossibleDivide(int[] nums, int k) {\n        if(nums.length%k!=0)return false;\n        int maxfreq=nums.length/k;\n        HashMap<Integer,Integer>h=new HashMap<>();\n        for(int i=0;i<nums.length;i++)\n        {\n            if(h.containsKey(nums[i])==false)h.put(nums[i],1);\n            else h.put(nums[i],h.get(nums[i])+1);\n        }\n        for(Map.Entry<Integer,Integer>e:h.entrySet())\n        {\n            if(e.getValue()>maxfreq)\n                return false;\n        }\n        Arrays.sort(nums);\n        int c=0;\n        for(int i=0;i<nums.length-1;i++)\n        {\n            if(nums[i+1]-nums[i]>1)c+=1;\n        }\n        c+=1;\n        if(c>maxfreq)return false;\n        return true;        \n    }\n}","compare_result":"111111111111111111100011110010111101111001111111110111010010","title_slug":"divide-array-in-sets-of-k-consecutive-numbers","has_notes":false}