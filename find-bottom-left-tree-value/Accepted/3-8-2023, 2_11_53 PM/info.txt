{"id":911357872,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1678264913,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/911357872/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"42.7 MB","code":"class Solution {\n    int maxHeight = Integer.MIN_VALUE;\n    int ans = 0;\n    public int findBottomLeftValue(TreeNode root) {\n        dfs(root , 0);\n        return ans;\n    }\n\n    public void dfs(TreeNode node , int height){\n        if (node == null) return;\n        if (height > maxHeight){\n            maxHeight = height;\n            ans = node.val;\n        }\n\n        dfs(node.left , height+1);\n        dfs(node.right , height+1);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value","has_notes":false}