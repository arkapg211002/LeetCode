{"id":927041149,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1680503811,"status":10,"status_display":"Accepted","runtime":"1034 ms","url":"/submissions/detail/927041149/","is_pending":"Not Pending","title":"Partition String Into Substrings With Values at Most K","memory":"43.3 MB","code":"class Solution {\n    public int minimumPartition(String s, int k) {\n        int c=0;\n        for(int i=0;i<s.length();)\n        {\n            System.out.println(i+\" \"+i);\n            StringBuilder nm=new StringBuilder();\n            nm.append(s.charAt(i));\n            if(nm.length()==1)\n            {\n                if(nm.charAt(0)-'0'>k)\n                {\n                    return -1;\n                }\n                else\n                {\n                    c++;\n                    i++;\n                    if(i>=s.length())\n                    {\n                        break;\n                    }\n                    nm.append(s.charAt(i));\n                    while(Long.parseLong(nm.toString())<=k)\n                    {\n                        i++;\n                        if(i>=s.length())\n                        {\n                            break;\n                        }\n                        nm.append(s.charAt(i));\n                        System.out.println(nm);\n                    }\n                    if(i>=s.length())\n                    {\n                        break;\n                    }\n                }\n            }\n        }\n        return c;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"partition-string-into-substrings-with-values-at-most-k","has_notes":false}