{"id":912248243,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678386220,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/912248243/","is_pending":"Not Pending","title":"Number of Good Leaf Nodes Pairs","memory":"N/A","code":"\tpublic int countPairs(TreeNode root, int distance) {\n        solve(root, distance);\n        return ans;\n    }\n    int ans = 0;\n    //from each node return list of distances to the leaves\n    List<Integer> solve(TreeNode root, int distance) {\n        if(root == null) return new ArrayList();\n        if(root.left == null && root.right == null){\n            List<Integer> leaf = new ArrayList();\n            leaf.add(1);\n            return leaf;\n        }\n            \n        List<Integer> left = solve(root.left, distance);\n        List<Integer> right = solve(root.right, distance);\n        \n        for(int l : left) {\n            for(int r : right) {\n                if(l + r <= distance) {\n                    ans++;\n                }\n            }\n        }\n        List<Integer> ret = new ArrayList();\n        for(int l : left) {\n            if(l + 1 < distance) {\n                ret.add(l+1);\n            }\n        }\n        for(int r : right) {\n            if(r + 1 < distance) {\n                ret.add(r+1);\n            }\n        }\n        return ret;\n    }","compare_result":null,"title_slug":"number-of-good-leaf-nodes-pairs","has_notes":false}