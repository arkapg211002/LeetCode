{"id":827012509,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666320428,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/827012509/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"39.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    HashSet<Integer>h=new HashSet<>();\n    public boolean isUnivalTree(TreeNode root) {\n        traversal(root);\n        if(h.size()==1)return true;\n        else return false;\n    }\n    public void traversal(TreeNode root)\n    {\n        if(root==null)return;\n        h.add(root.val);\n        traversal(root.left);\n        traversal(root.right);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree","has_notes":false}