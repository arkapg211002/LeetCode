{"id":815089673,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1664898351,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/815089673/","is_pending":"Not Pending","title":"Second Largest Digit in a String","memory":"42.5 MB","code":"class Solution {\n    public int secondHighest(String s) {\n        // Integer map for storing digits\n        int map = 0;\n        // For keeping count of digits processed\n        int bCount = 0;\n        for(char c : s.toCharArray()){\n            // If current character is a digit and is not stored\n            // in the map\n            if(Character.isDigit(c) && (map&(1<<(c-'0'))) == 0){\n                // Turn the bit on at respective digit position in map\n                map|=(1<<(c-'0'));\n                bCount++;\n                // Since we need second largest, after 2 unique digits\n                // we need to discard smallest digit in the map\n                if(bCount > 2) map&=(map-1);\n            }\n        }\n        if(bCount < 2) return -1;\n        for(int i = 0; i < 32; i++,map>>=1) if((map&1) == 1) return i;\n        \n        return -1;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"second-largest-digit-in-a-string","has_notes":false}