{"id":896066758,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1676138697,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/896066758/","is_pending":"Not Pending","title":"Shortest Path with Alternating Colors","memory":"42.9 MB","code":"class Pair{\n    int node;\n    char color;\n    int dist;\n    Pair(int node,char color,int dist){\n        this.node=node;\n        this.color=color;\n        this.dist=dist;\n    }\n}\nclass Solution {\n    public int[] shortestAlternatingPaths(int n, int[][] redEdges, int[][] blueEdges) {\n        int[] res=new int[n];\n        boolean vis[][]=new boolean[2][n];\n        vis[0][0]=true;\n        vis[1][0]=true;\n        List<List<Pair>> adj=new ArrayList<>();\n        for(int i=0;i<n;i++){\n            adj.add(new ArrayList<>());\n        }\n        for(int i=0;i<redEdges.length;i++){\n            adj.get(redEdges[i][0]).add(new Pair(redEdges[i][1],'R',1));\n        }\n        for(int i=0;i<blueEdges.length;i++){\n            adj.get(blueEdges[i][0]).add(new Pair(blueEdges[i][1],'B',1));\n        }\n        Arrays.fill(res,Integer.MAX_VALUE);\n        Queue<Pair> qu=new LinkedList<>();\n        res[0]=0;\n        for(Pair it:adj.get(0)){\n            qu.add(new Pair(it.node,it.color,1));\n            if(it.color=='R'){\n                vis[0][it.node]=true;\n            }\n            else{\n                vis[1][it.node]=true;\n            }\n        }\n        while(!qu.isEmpty()){\n            Pair p=qu.poll();\n            int node=p.node;\n            char color=p.color;\n            int dist=p.dist;\n            res[node]=Math.min(dist,res[node]);\n            for(Pair it:adj.get(node)){\n                int currnode=it.node;\n                char currcolor=it.color;\n                int currdist=it.dist;\n                if(color=='R' && currcolor=='B' && !vis[1][currnode]){\n                    vis[1][currnode]=true;\n                    qu.add(new Pair(currnode,currcolor,dist+currdist));\n                }\n                else if(color=='B' && currcolor=='R' && !vis[0][currnode]){\n                    vis[0][currnode]=true;\n                    qu.add(new Pair(currnode,currcolor,dist+currdist));                   \n                }\n            }\n        }\n        for(int i=0;i<res.length;i++){\n            if(res[i]==Integer.MAX_VALUE)\n                res[i]=-1;\n        }\n       return res; \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-with-alternating-colors","has_notes":false}