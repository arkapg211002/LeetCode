{"id":915653047,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1678886259,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/915653047/","is_pending":"Not Pending","title":"Sort an Array","memory":"53.5 MB","code":"class Solution {\n    public int[] sortArray(int[] nums) {\n        mergeSort(nums,0,nums.length-1);\n        return nums;\n    }\n    public  void mergeSort(int[] nums,int start,int end){\n        if(start<end){\n            int mid=start+(end-start)/2;\n            mergeSort(nums,start,mid);\n            mergeSort(nums,mid+1,end);\n            merge(nums,start,mid,end);\n        }\n    }\n    public void merge(int[] nums,int start,int mid,int end){\n        int[] arr1=Arrays.copyOfRange(nums,start,mid+1);\n        int[] arr2=Arrays.copyOfRange(nums,mid+1,end+1);\n        int i=0,j=0;\n        int index=start;\n        while(i<arr1.length && j<arr2.length){\n            if(arr1[i]<=arr2[j]){\n                nums[index]=arr1[i];\n                i++;\n            }else{\n                nums[index]=arr2[j];\n                j++;\n            }\n            index++;    \n        }\n        while(i<arr1.length){\n            nums[index]=arr1[i];\n            i++;index++;\n        }\n        while(j<arr2.length){\n            nums[index]=arr2[j];\n            j++;index++;\n        }\n    }\n}","compare_result":"11111111111111111111","title_slug":"sort-an-array","has_notes":false}