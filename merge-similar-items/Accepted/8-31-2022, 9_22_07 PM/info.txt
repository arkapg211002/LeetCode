{"id":788097351,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1661961127,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/788097351/","is_pending":"Not Pending","title":"Merge Similar Items","memory":"43.1 MB","code":"class Solution {\n    public List<List<Integer>> mergeSimilarItems(int[][] items1, int[][] items2) {\n        Map<Integer,Integer>m=new HashMap<>();\n        for(int i=0;i<items1.length;i++)\n        {\n            m.put(items1[i][0],items1[i][1]);\n        }\n        for(int i=0;i<items2.length;i++)\n        {\n            if(m.containsKey(items2[i][0]))\n            {\n                m.put(items2[i][0],m.get(items2[i][0])+items2[i][1]);\n            }\n            else\n            {\n                m.put(items2[i][0],items2[i][1]);\n            }\n        }\n        List<List<Integer>>l=new ArrayList<>();\n        List<Integer>lm;\n        for(Map.Entry<Integer,Integer>e:m.entrySet())\n        {\n            lm=new ArrayList<>();\n            lm.add(e.getKey());\n            lm.add(e.getValue());\n            l.add(lm);\n        }\n        l.sort((a,b)->a.get(0)-b.get(0));\n        return l;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"merge-similar-items","has_notes":false}