{"id":925453133,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680279488,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/925453133/","is_pending":"Not Pending","title":"Maximum Score From Removing Substrings","memory":"43.5 MB","code":"class Solution {\n    public int maximumGain(String s, int x, int y) {\n    if(x<y)\n    {\n      StringBuilder sb=new StringBuilder(s);\n      s=sb.reverse().toString();\n      int temp=x;// making \"ab\" with the greater gain \n      x=y;\n      y=temp;\n    }\n    // x is always greater than y so trying to make as much possible \"ab\", then make \"ba\" from remaining a's and b's\n    int ans=0,a=0,b=0;\n    for(char ch:s.toCharArray())\n    {\n        if(ch=='a')\n        {\n            a++;\n        }\n        else if(ch=='b')\n        {\n            if(a!=0)// trying to make \"ab\" as it has greater value\n            {\n                ans+=x;\n                a--;\n            }\n            else\n                b++;\n        }\n        else // if character other than a and b comes\n        {\n            ans+=Math.min(a,b)*y; // add ocurrences of \"ba\"\n            a=0;b=0;\n        }\n    }\n    return ans+Math.min(a,b)*y;// add ocurrences of \"ba\"\n}\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-score-from-removing-substrings","has_notes":false}