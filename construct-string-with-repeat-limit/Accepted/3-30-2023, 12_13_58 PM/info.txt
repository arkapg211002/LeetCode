{"id":924656977,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680158638,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/924656977/","is_pending":"Not Pending","title":"Construct String With Repeat Limit","memory":"43.6 MB","code":"class Solution {\n    public String repeatLimitedString(String s, int k) {\n\n        byte[] res;\n        int resP = 0;\n        int[] freqs = new int[26];\n        for (byte aChar : (res = s.getBytes(java.nio.charset.StandardCharsets.US_ASCII))) ++freqs[aChar - 97];\n        \n        for (int i = 25, j; i >= 0; i = j) {\n            j = i - 1;\n            while (freqs[i] > k) {\n                for (int _j = 0; _j < k; ++_j) res[resP++] = (byte) (97 + i);\n                freqs[i] -= k;\n\n                for (; j >= 0 && freqs[j] == 0; --j) ;\n                if (j < 0) return new String(res, 0, resP);\n        \n                res[resP++] = (byte) (97 + j);\n                --freqs[j];\n            }\n            for (int _j = freqs[i]; _j > 0; --_j) res[resP++] = (byte) (97 + i);\n        }\n        \n        return new String(res);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-string-with-repeat-limit","has_notes":false}