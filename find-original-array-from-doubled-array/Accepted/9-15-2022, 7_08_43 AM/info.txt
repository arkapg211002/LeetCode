{"id":800067704,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1663205923,"status":10,"status_display":"Accepted","runtime":"565 ms","url":"/submissions/detail/800067704/","is_pending":"Not Pending","title":"Find Original Array From Doubled Array","memory":"136.6 MB","code":"class Solution {\n    public int[] findOriginalArray(int[] changed) {\n\t\t// a valid array should be of even length\n        if (changed.length % 2 != 0) return new int[0]; \n\t\t// initialize and fill the treemap\n        TreeMap<Integer, Integer> container = new TreeMap<>();\n        for (int num : changed) container.put(num, container.getOrDefault(num, 0) + 1);\n        \n        int index = 0;\n        int[] ans = new int[changed.length / 2];\n\t\t// iterate the treemap and fill the original ans array\n        for (int key : container.keySet()) {\n            if (container.get(key) > 0) {\n                if (container.getOrDefault((key << 1), 0) >= container.get(key)) {\n                    container.put((key << 1), (container.get((key << 1)) - container.get(key)));\n                    for (int i = 0; i < container.get(key); i++) ans[index++] = key;\n                } else {\n                    return new int[0];\n                }\n            }\n        }\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-original-array-from-doubled-array","has_notes":false}