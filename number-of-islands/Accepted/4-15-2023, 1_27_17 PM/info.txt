{"id":934011667,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1681545437,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/934011667/","is_pending":"Not Pending","title":"Number of Islands","memory":"50.4 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        int n=grid.length;\n        int m=grid[0].length;\n        int v[][]=new int[n][m];\n        int count=0;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n                if(grid[i][j]=='1' && v[i][j]==0)\n                {\n                    count+=1;\n                    dfs(i,j,grid,v,n,m);\n                }\n            }\n        }\n        return count;\n    }\n    public void dfs(int r,int c,char g[][],int v[][],int n,int m)\n    {\n        v[r][c]=1;\n        int dr[]={-1,0,1,0};\n        int dc[]={0,1,0,-1};\n        for(int i=0;i<4;i++)\n        {\n            int nr=r+dr[i];\n            int nc=c+dc[i];\n            if(nr>=0 && nr<n && nc>=0 && nc<m && g[nr][nc]=='1' && v[nr][nc]==0)\n            {\n                dfs(nr,nc,g,v,n,m);\n            }\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false}