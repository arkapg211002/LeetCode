{"id":810770800,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1664388256,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/810770800/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"47.8 MB","code":"class Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        ListNode dummy = new ListNode(),\n\t\t\t\t\t\tresult = dummy;\n        \n        int sum = 0, carry = 0;\n        \n        while (l1 != null || l2 != null) {\n            sum = carry;  // Carry needs to be added always. If it's 0, result won't be affected\n            \n\t\t\t// One of the numbers could have lesser digits than the other.\n\t\t\t// Thus, we check for the presence of the digits first and then add them to the sum.\n            if (l1 != null) { \n                sum += l1.val;\n                l1 = l1.next;\n            }\n            \n            if (l2 != null) {\n                sum += l2.val;\n                l2 = l2.next;\n            }\n\t\t\t\n\t\t\t// After this the sum would be like: sum = carry + l1.val + l2.val, if both l1 and l2 are not null.\n\t\t\t// Now, if sum >= 10, we will have the case of a carry.\n\t\t\t// These are base 10 numbers.\n\t\t\t// Thus, a digit that needs to be added would be: digit = sum % 10 and carry would be carry = carry/10;\n\t\t\t// Consider that sum = 9. In that case, digit is 9 and carry is 0.\n\t\t\t// Consider that sum is 21. In that case, digit is 1 and carry is 2.\n\t\t\t// Thus, our result would be accurate for all cases - whether sum is greater than 10 or not.\n            \n\t\t\tdummy.next = new ListNode(sum%10); // Adding digit directly\n            carry = sum/10;\n            dummy = dummy.next;\n        }\n        \n\t\t// If carry is remaining when digits of both numbers have exhausted, it is added in front of the number.\n        if (carry > 0) {\n            dummy.next = new ListNode(carry);\n        }\n        \n        return result.next;\n    }\n}","compare_resulttitle_slug":"add-two-numbers","has_notes":false}