{"id":945818950,"lang":"java","lang_name":"Java","time":"1 day, 4 hours","timestamp":1683429854,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/945818950/","is_pending":"Not Pending","title":"Find the Longest Valid Obstacle Course at Each Position","memory":"55 MB","code":"class Solution {\n    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {\n        int i=-1;\n        int current = 0;\n        int len = -1;\n        int lis[] = new int[obstacles.length];\n        int ans[] = new int[obstacles.length];\n        for (int j=0;j<obstacles.length;j++) \n        {\n            if (i==-1 || lis[i] <= obstacles[j]) \n            {\n                lis[++i]=obstacles[j];\n                len = i;\n            } \n            else \n            {\n                len=search(lis, 0, i, obstacles[j]);\n                lis[len]=obstacles[j];\n            }\n            ans[current++]=len+1;\n        }\n        return ans;      \n    }\n    public int search(int[] nums, int start, int end, int target) {\n        int l=start, r=end;\n        int boundary = 0;\n        while (l <= r) \n        {\n            int mid = l+(r-l)/2;\n            if (nums[mid]>target) \n            {\n                boundary = mid;\n                r = mid - 1;\n            } \n            else \n                l = mid + 1;\n        }\n        return boundary;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-longest-valid-obstacle-course-at-each-position","has_notes":false}