{"id":926060328,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1680366673,"status":10,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/926060328/","is_pending":"Not Pending","title":"Array With Elements Not Equal to Average of Neighbors","memory":"66.5 MB","code":"class Solution {\n    public int[] rearrangeArray(int[] nums) {\n        Arrays.sort(nums);\n        boolean ch=false;\n        while(ch==false)\n        {\n            r(nums);\n            ch=check(nums);\n        }\n        return nums;\n    }\n    public void r(int[] nums)\n    {\n        for(int i=1;i<nums.length-1;i++)\n        {\n            if((double)((nums[i-1]+nums[i+1])*1.0/2)==nums[i]*1.0)\n            {\n                int t=nums[i];\n                nums[i]=nums[i-1];\n                nums[i-1]=t;\n            }\n        }\n        //return nums;\n    }\n    public boolean check(int[] nums)\n    {\n        for(int i=1;i<nums.length-1;i++)\n        {\n            if((double)((nums[i-1]+nums[i+1])*1.0/2)==nums[i]*1.0)\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"array-with-elements-not-equal-to-average-of-neighbors","has_notes":false}