{"id":940766571,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682622400,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/940766571/","is_pending":"Not Pending","title":"N-Queens","memory":"42.9 MB","code":"public class Solution {\npublic List<List<String>> solveNQueens(int n) {\n    List<List<String>> list=new ArrayList<List<String>>();\n    dfs(new int[n],0,n,list);\n    return list;\n}\npublic void dfs(int[] pos,int step,int n,List<List<String>> list) {\n    if(step==n) {\n        ArrayList<String> ls=printboard(pos,n);\n        list.add(new ArrayList<String>(ls));\n        return;\n    }\n    for(int i=0;i<n;i++) {\n        pos[step]=i;\n        if(isvalid(pos,step)) {\n            dfs(pos,step+1,n,list);\n        }\n    }\n}\npublic boolean isvalid(int[] pos, int step) {\n    for(int i=0;i<step;i++) {\n        if(pos[i]==pos[step]||(Math.abs(pos[i]-pos[step]))==(step-i)) return false;\n        \n    }\n    return true;\n}\npublic ArrayList<String> printboard(int[] pos,int n) {\n    ArrayList<String> ls=new ArrayList<String>();\n    for(int i=0;i<n;i++) {\n        StringBuilder sb=new StringBuilder();\n        for(int j=0;j<n-1;j++) sb.append('.');\n        sb.insert(pos[i],'Q');\n        ls.add(sb.toString());\n        \n    }\n    return ls;\n}\n}","compare_result":"111111111","title_slug":"n-queens","has_notes":false}