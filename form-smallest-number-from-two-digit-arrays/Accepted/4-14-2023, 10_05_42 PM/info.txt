{"id":933722172,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1681490142,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/933722172/","is_pending":"Not Pending","title":"Form Smallest Number From Two Digit Arrays","memory":"40.3 MB","code":"class Solution {\n    public int minNumber(int[] nums1, int[] nums2) {\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n        HashMap<Integer,Integer>h=new HashMap<>();\n        for(int i=0;i<nums1.length;i++)\n        {\n            if(h.containsKey(nums1[i])==false)h.put(nums1[i],1);\n            else h.put(nums1[i],h.get(nums1[i])+1);\n        }\n        for(int i=0;i<nums2.length;i++)\n        {\n            if(h.containsKey(nums2[i])==false)h.put(nums2[i],1);\n            else h.put(nums2[i],h.get(nums2[i])+1);\n        }\n        for(Map.Entry<Integer,Integer>e:h.entrySet())\n        {\n            if(e.getValue()>1)return e.getKey();\n        }\n        if(nums1[0]<nums2[0])return nums1[0]*10+nums2[0];\n        else return nums2[0]*10+nums1[0];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"form-smallest-number-from-two-digit-arrays","has_notes":false}