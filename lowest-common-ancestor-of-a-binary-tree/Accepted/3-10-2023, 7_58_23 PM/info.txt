{"id":912714368,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678458503,"status":10,"status_display":"Accepted","runtime":"2232 ms","url":"/submissions/detail/912714368/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"44.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root==null)return null;\n        TreeNode lh=lowestCommonAncestor(root.left,p,q);\n        TreeNode rh=lowestCommonAncestor(root.right,p,q);\n        boolean fp=find(root,p);\n        boolean fq=find(root,q);\n        if(fp==true && fq==true && lh!=null)return lh;\n        else if(fp==true && fq==true && rh!=null)return rh;\n        else if(fp==true && fq==true && lh==null && rh==null)return root;\n        else return null;\n    }\n    public boolean find(TreeNode p,TreeNode q)\n    {\n        if(p==null)return false;\n        if(p==q)return true;\n        boolean lh=find(p.left,q);\n        if(lh==true)return true;\n        boolean rh=find(p.right,q);\n        if(rh==true)return true;\n        return false;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false}