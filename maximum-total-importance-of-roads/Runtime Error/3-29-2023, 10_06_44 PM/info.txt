{"id":924327977,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680107804,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/924327977/","is_pending":"Not Pending","title":"Maximum Total Importance of Roads","memory":"N/A","code":"class Solution {\n    public long maximumImportance(int n, int[][] roads) {\n        HashMap<Integer,Integer>h=new HashMap<>();\n        for(int i=0;i<roads.length;i++)\n        {\n            if(h.containsKey(roads[i][0])==false)h.put(roads[i][0],1);\n            else h.put(roads[i][0],h.get(roads[i][0])+1);\n            if(h.containsKey(roads[i][1])==false)h.put(roads[i][1],1);\n            else h.put(roads[i][1],h.get(roads[i][1])+1);\n        }\n        int a[][]=new int[h.size()][2];\n        int k=0;\n        for(Map.Entry<Integer,Integer>e:h.entrySet())\n        {\n            a[k][0]=e.getKey();\n            a[k][1]=e.getValue();\n            k+=1;\n        }        \n        Arrays.sort(a,(x,y)->\n        {\n            if(x[1]>y[1])return -1;\n            else if(x[1]<y[1])return 1;\n            else return 0;\n        });\n        for(int i=0;i<a.length;i++)\n        {\n            a[i][1]=n;\n            n-=1;\n        }\n        Arrays.sort(a,(x,y)->\n        {\n            if(x[0]<y[0])return -1;\n            else if(x[0]>y[0])return 1;\n            else return 0;\n        });\n        int s=0;\n        for(int i=0;i<roads.length;i++)\n        {\n            int c=a[roads[i][0]][1];\n            int d=a[roads[i][1]][1];\n            s+=(c+d);\n        }\n        return s;\n    }\n}","compare_result":"1111111111111000000000000000000000000000000000000000000000","title_slug":"maximum-total-importance-of-roads","has_notes":false}