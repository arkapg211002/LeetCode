{"id":797596508,"lang":"java","lang_name":"Java","time":"7 months, 4 weeks","timestamp":1662951732,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/797596508/","is_pending":"Not Pending","title":"Bag of Tokens","memory":"43.1 MB","code":"class Solution {\n   public int bagOfTokensScore(int[] tokens, int power) {\n       // Edge cases\n        if (tokens.length == 0) return 0;\n        if (tokens.length == 1) {\n            if (power >= tokens[0]) {\n                return 1;\n            }else return 0;\n        }\n        int score = 0;\n        Arrays.sort(tokens); // Sorting the array will help a lot\n        int left = 0, right = tokens.length-1;\n\n        while (left <= right) {\n            if (tokens[left] <= power) { // If true play face-up\n                power -= tokens[left];\n                score++;\n                left++;\n            }else if (score >= 1 && tokens[right] >= power) {\n                if (left == right) {\n                    return score; // Now we can't play anymore\n                }\n                power += tokens[right]; // If we can play face-down\n                score--;\n                right--;\n            }else return score; // If no upper conditions are true that means we don't have sufficient power or score to play\n        }\n        return score;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"bag-of-tokens","has_notes":false}