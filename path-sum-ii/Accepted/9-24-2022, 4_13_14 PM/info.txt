{"id":807436224,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1664016194,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/807436224/","is_pending":"Not Pending","title":"Path Sum II","memory":"42.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {\n        List<List<Integer>> ans = new ArrayList<>();\n        vpathSum(root, targetSum,ans , new ArrayList<>());\n        return ans;\n    }\n    \n    public void vpathSum(TreeNode root, int targetSum, List<List<Integer>> ans, List<Integer> sAns) {\n        if(root == null) return ;\n        if(root.left == null && root.right == null){\n            if(targetSum - root.val == 0){\n                sAns.add(root.val);\n                List<Integer> base = new ArrayList<>(sAns);\n                sAns.remove(sAns.size()-1);\n                ans.add(base);\n            }\n            return ;\n        }\n        sAns.add(root.val);\n        vpathSum(root.left, targetSum-root.val, ans, sAns);\n        vpathSum(root.right, targetSum-root.val, ans, sAns);\n        sAns.remove(sAns.size()-1);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false}