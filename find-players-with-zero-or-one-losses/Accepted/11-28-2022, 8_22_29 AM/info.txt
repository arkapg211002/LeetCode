{"id":850952251,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1669603949,"status":10,"status_display":"Accepted","runtime":"187 ms","url":"/submissions/detail/850952251/","is_pending":"Not Pending","title":"Find Players With Zero or One Losses","memory":"97 MB","code":"class Solution {\n    public List<List<Integer>> findWinners(int[][] matches) {\n        List<List<Integer>> resultList = new ArrayList();\n\t\t\n\t\t// TreeSet will keep items in order and avoid duplications \n        TreeSet<Integer> lostZeroMatchTreeSet = new TreeSet();\n        TreeSet<Integer> lostOneMatchTreeSet =  new TreeSet();\n        HashMap<Integer,Integer> losersHashMap = new HashMap();\n        \n        for(int [] match : matches){\n            losersHashMap.put(match[0],losersHashMap.getOrDefault(match[0],0));\n            losersHashMap.put(match[1],losersHashMap.getOrDefault(match[1],0)+1);\n        }\n        \n        for(int [] match: matches){\n            if(losersHashMap.get(match[0]) == 0)\n              lostZeroMatchTreeSet.add(match[0]);\n        \n            if(losersHashMap.get(match[1]) == 1)\n              lostOneMatchTreeSet.add(match[1]);\n        }\n        \n        resultList.add(new ArrayList(lostZeroMatchTreeSet));\n        resultList.add( new ArrayList(lostOneMatchTreeSet));\n        \n        return resultList;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-players-with-zero-or-one-losses","has_notes":false}