{"id":920790175,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1679585829,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/920790175/","is_pending":"Not Pending","title":"Number of Operations to Make Network Connected","memory":"69.7 MB","code":"class Solution {\n    public int makeConnected(int n, int[][] connections) {\n        if(connections.length<n-1)\n            return -1;\n        List<List<Integer>> adj=new ArrayList<>();\n        for(int i=0;i<n;i++){\n            adj.add(new ArrayList<>());\n        }\n        for(int i=0;i<connections.length;i++){\n            adj.get(connections[i][0]).add(connections[i][1]);\n            adj.get(connections[i][1]).add(connections[i][0]);\n        }\n        boolean vis[]=new boolean[n];\n        Queue<Integer> qu=new LinkedList<>();\n        qu.add(0);\n        int comp=0;\n        for(int i=0;i<n;i++){\n            if(!vis[i]){\n                bfs(i,vis,adj);\n                comp++;\n            }\n        }\n        return comp-1;\n    }\n    public void bfs(int node,boolean[] vis,List<List<Integer>> adj){\n        Queue<Integer> qu=new LinkedList<>();\n        qu.add(node);\n        while(!qu.isEmpty()){\n            int curr=qu.poll();\n            for(int adjnode:adj.get(curr)){\n                if(!vis[adjnode]){\n                    qu.add(adjnode);\n                    vis[adjnode]=true;\n                }\n            }\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"number-of-operations-to-make-network-connected","has_notes":false}