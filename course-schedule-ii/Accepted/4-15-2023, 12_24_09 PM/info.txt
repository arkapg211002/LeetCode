{"id":933987678,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1681541649,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/933987678/","is_pending":"Not Pending","title":"Course Schedule II","memory":"44 MB","code":"class Solution {\n    public int[] findOrder(int n, int[][] p) {\n        List<List<Integer>> nm=new ArrayList<>();\n        for(int i=0;i<n;i++)\n        {\n            nm.add(new ArrayList<>());\n        }\n        for(int i=0;i<p.length;i++)\n        {\n            nm.get(p[i][1]).add(p[i][0]);\n        }\n        Queue<Integer> kk=new LinkedList<>();\n        int a[]=new int[n];\n        for(int i=0;i<n;i++)\n        {\n            for(int k:nm.get(i))\n            {\n                a[k]++;\n            }\n        }\n        for(int i=0;i<a.length;i++)\n        {\n            if(a[i]==0)\n            {\n                kk.offer(i);\n            }\n        }\n        int k[]=new int[n];\n        int i=0;\n        while(!kk.isEmpty())\n        {\n            int x=kk.poll();\n            k[i++]=x;\n            for(int j:nm.get(x))\n            {\n                a[j]--;\n                if(a[j]==0)\n                {\n                    kk.offer(j);\n                }\n            }\n        }\n        return i==n ? k : new int[0];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false}