{"id":933960783,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1681537442,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/933960783/","is_pending":"Not Pending","title":"Course Schedule II","memory":"N/A","code":"class Solution {\n    public int[] findOrder(int numCourses, int[][] pre) {\n        int n=numCourses;\n        if(pre.length==0)\n        {\n            int res[]=new int[n];\n            for(int i=0;i<n;i++)res[i]=i;\n            return res;\n        }\n        ArrayList<ArrayList<Integer>>l=new ArrayList<>();\n        List<Integer>d=new ArrayList<>();\n        for(int i=0;i<n;i++)l.add(new ArrayList<>());\n        for(int r[]:pre)\n            l.get(r[1]).add(r[0]);\n        for(int i=0;i<n;i++)\n        {\n            d=new ArrayList<>();\n            int v[]=new int[n];\n            bfs(i,l,v,d);\n            System.out.println(d);\n            if(d.size()==n)break;\n        }\n        if(d.size()!=n)return new int[1];\n        else\n        {\n            int ans[]=new int[n];\n            for(int i=0;i<n;i++)\n                ans[i]=d.get(i);\n            return ans;\n        }\n    }\n    public void bfs(int node,ArrayList<ArrayList<Integer>>l,int v[],List<Integer>d)\n    {\n        Queue<Integer>q=new LinkedList<>();\n        q.add(node);\n        v[node]=1;\n        while(!q.isEmpty())\n        {\n            int nd=q.poll();\n            d.add(nd);\n            for(Integer it:l.get(nd))\n            {\n                if(v[it]==0)\n                {\n                    q.add(it);\n                    v[it]=1;\n                }\n            }\n        }\n    }\n}","compare_result":"111110010110100000000000000000000000000000100","title_slug":"course-schedule-ii","has_notes":false}