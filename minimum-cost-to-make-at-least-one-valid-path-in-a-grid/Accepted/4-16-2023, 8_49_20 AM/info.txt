{"id":934482771,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1681615160,"status":10,"status_display":"Accepted","runtime":"54 ms","url":"/submissions/detail/934482771/","is_pending":"Not Pending","title":"Minimum Cost to Make at Least One Valid Path in a Grid","memory":"42.8 MB","code":"class Node implements Comparator<Node>\n{\n    int row,col,cost;\n    public Node(int row,int col,int cost)\n    {\n        this.row=row;\n        this.col=col;\n        this.cost=cost;\n    }\n    public Node(){}\n    int getrow(){return row;}\n    int getcol(){return col;}\n    int getcost(){return cost;}\n    @Override\n    public int compare(Node a, Node b)\n    {\n        if(a.getcost()<b.getcost())return -1;\n        else if(a.getcost()>b.getcost())return 1;\n        else return 0;\n    }\n}\nclass Solution {\n    public int minCost(int[][] g) {\n        int n=g.length;\n        int m=g[0].length;\n        int v[][]=new int[n][m];\n        int tr=n-1,tc=m-1;\n        PriorityQueue<Node>p=new PriorityQueue<>(new Node());\n        p.add(new Node(0,0,0));\n        while(p.size()>0)\n        {\n            Node nd=p.poll();\n            v[nd.getrow()][nd.getcol()]=1;\n            if(nd.getrow()==tr && nd.getcol()==tc)return nd.getcost();\n            int r=nd.getrow();\n            int c=nd.getcol();\n            if(c+1<m && v[r][c+1]==0)\n            {\n                if(g[r][c]==1)p.add(new Node(r,c+1,nd.getcost()));\n                else p.add(new Node(r,c+1,nd.getcost()+1));\n            }\n            if(c-1>=0 && v[r][c-1]==0)\n            {\n                if(g[r][c]==2)p.add(new Node(r,c-1,nd.getcost()));\n                else p.add(new Node(r,c-1,nd.getcost()+1));\n            }\n            if(r+1<n && v[r+1][c]==0)\n            {\n                if(g[r][c]==3)p.add(new Node(r+1,c,nd.getcost()));\n                else p.add(new Node(r+1,c,nd.getcost()+1));\n            }\n            if(r-1>=0 && v[r-1][c]==0)\n            {\n                if(g[r][c]==4)p.add(new Node(r-1,c,nd.getcost()));\n                else p.add(new Node(r-1,c,nd.getcost()+1));\n            }\n        }\n        return 0;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-make-at-least-one-valid-path-in-a-grid","has_notes":false}