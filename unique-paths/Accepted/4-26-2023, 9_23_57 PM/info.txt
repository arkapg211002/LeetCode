{"id":940137505,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1682524437,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/940137505/","is_pending":"Not Pending","title":"Unique Paths","memory":"38.9 MB","code":"class Solution {\n    public int uniquePaths(int m, int n) {\n        int prev[]=new int[n];\n        for(int i=0;i<m;i++)\n        {\n            int cur[]=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                if(i==0 && j==0)\n                {\n                    cur[j]=1;\n                    continue;\n                }\n                int up=0;\n                if(i>0)up=prev[j];\n                int left=0;\n                if(j>0)left=cur[j-1];\n                cur[j]=up + left;\n            }\n            prev=cur;\n        }\n        return prev[n-1];\n    }\n\n}\n\n\n/*class Solution {\n    public int uniquePaths(int m, int n) {\n        int dp[][]=new int[n][m];\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n                if(i==0 && j==0)\n                {\n                    dp[i][j]=1;\n                    continue;\n                }\n                int up=0;\n                if(i>0)up=dp[i-1][j];\n                int left=0;\n                if(j>0)left=dp[i][j-1];\n                dp[i][j]=up + left;\n            }\n        }\n        return dp[n-1][m-1];\n    }\n\n}\n*/","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-paths","has_notes":false}