{"id":913705614,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1678609640,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/913705614/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"44.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n         ArrayList<Integer> arrayList = new ArrayList<Integer>();\n\n        for (int i = 0; i < lists.length; i++) {\n            while (lists[i] != null) {\n                arrayList.add(lists[i].val);\n                lists[i] = lists[i].next;\n            }\n\n        }\n        Collections.sort(arrayList);\n\n        ListNode head = new ListNode();\n        ListNode answer = head;\n        for (int i = 0; i < arrayList.size(); i++) {\n            head.next = new ListNode(arrayList.get(i));\n            head = head.next;\n\n        }\n\n        return answer.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false}