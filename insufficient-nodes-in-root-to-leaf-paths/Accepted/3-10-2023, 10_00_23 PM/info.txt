{"id":912773936,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678465823,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/912773936/","is_pending":"Not Pending","title":"Insufficient Nodes in Root to Leaf Paths","memory":"42.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sufficientSubset(TreeNode root, int limit) {\n        return find(root , limit , 0);\n    }\n    public TreeNode find(TreeNode root , int limit , int sum) {\n        if(root == null) {\n            return null;\n        }\n        sum+=root.val;\n        if(root.left == null && root.right == null) { // if left and right are null that means the node is a leaf node \n            if( sum < limit ) { // if sum from root to leaf is less than limit we dont need the node so return null\n                return null;\n            }\n            return root; // sum is greater than limit so we can take in the node\n        }\n        TreeNode left  = find(root.left,limit,sum);\n        TreeNode right = find(root.right,limit,sum);\n        if(left == null && right == null) { // if the node is not leaf but both left and right are null means the sum till node is not valid so we dont need the node \n            return null;\n        } \n\t\t//if left or right or both are not null that means a path till node is valid so populate node with left and right and return node\n        root.left = left;\n        root.right = right;\n        return root;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insufficient-nodes-in-root-to-leaf-paths","has_notes":false}