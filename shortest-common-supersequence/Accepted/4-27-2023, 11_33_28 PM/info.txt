{"id":940736251,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682618608,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/940736251/","is_pending":"Not Pending","title":"Shortest Common Supersequence ","memory":"46.5 MB","code":"class Solution {\n    public String shortestCommonSupersequence(String text1, String text2) {\n        int n=text1.length();\n        int m=text2.length();\n        int dp[][]=new int[n+1][m+1];\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=m;j++)\n            {\n                if(text1.charAt(i-1)==text2.charAt(j-1))dp[i][j]=1+dp[i-1][j-1];\n                else dp[i][j]=(int)Math.max(dp[i-1][j],dp[i][j-1]);\n            }\n        }\n        int len=dp[n][m];\n        int index=len-1;\n        int i=n,j=m;\n        String s=\"\";\n        while(i>0 && j>0)\n        {\n            if(text1.charAt(i-1)==text2.charAt(j-1))\n            {\n                s+=text1.charAt(i-1);\n                i-=1;\n                j-=1;\n                index-=1;\n            }\n            else if(dp[i-1][j]>dp[i][j-1])\n            {\n                s+=text1.charAt(i-1);\n                i-=1;\n            }\n            else\n            {\n                s+=text2.charAt(j-1);\n                j-=1;\n            }\n        }\n        while(i>0)\n        {\n            s += text1.charAt(i-1);\n            i--;\n        }\n        while(j>0)\n        {\n            s += text2.charAt(j-1);\n            j--;\n        }\n        return new StringBuilder(s).reverse().toString();\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"shortest-common-supersequence","has_notes":false}