{"id":905928578,"lang":"java","lang_name":"Java","time":"2 months, 1 week","timestamp":1677508695,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/905928578/","is_pending":"Not Pending","title":"Construct Quad Tree","memory":"42.5 MB","code":"/*\n// Definition for a QuadTree node.\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n\n    \n    public Node() {\n        this.val = false;\n        this.isLeaf = false;\n        this.topLeft = null;\n        this.topRight = null;\n        this.bottomLeft = null;\n        this.bottomRight = null;\n    }\n    \n    public Node(boolean val, boolean isLeaf) {\n        this.val = val;\n        this.isLeaf = isLeaf;\n        this.topLeft = null;\n        this.topRight = null;\n        this.bottomLeft = null;\n        this.bottomRight = null;\n    }\n    \n    public Node(boolean val, boolean isLeaf, Node topLeft, Node topRight, Node bottomLeft, Node bottomRight) {\n        this.val = val;\n        this.isLeaf = isLeaf;\n        this.topLeft = topLeft;\n        this.topRight = topRight;\n        this.bottomLeft = bottomLeft;\n        this.bottomRight = bottomRight;\n    }\n};\n*/\n\nclass Solution {\n     public Node construct(int[][] grid) {\n        return make(grid, 0, 0, grid.length);\n    }\n    private Node make(int grid[][], int r, int c, int length) {\n        if(length == 1)\n            return new Node(grid[r][c] == 1? true : false, true);\n        Node topLeft = make(grid, r, c, length/2);\n        Node topRight = make(grid, r, c + length/2, length/2);\n        Node bottomLeft = make(grid, r + length/2, c, length/2);\n        Node bottomRight = make(grid, r + length/2, c + length/2, length/2);\n        if(topLeft.val == topRight.val && bottomLeft.val == bottomRight.val && topLeft.val == bottomLeft.val && topLeft.isLeaf && topRight.isLeaf && bottomLeft.isLeaf && bottomRight.isLeaf)\n            return new Node(topLeft.val, true);\n        else\n            return new Node(true, false, topLeft, topRight, bottomLeft, bottomRight);\n    }\n}\n","compare_result":"1111111111111111111111","title_slug":"construct-quad-tree","has_notes":false}