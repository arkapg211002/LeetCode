{"id":940694994,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682613787,"status":10,"status_display":"Accepted","runtime":"238 ms","url":"/submissions/detail/940694994/","is_pending":"Not Pending","title":"Number of Ways to Earn Points","memory":"42.8 MB","code":"class Solution {\n    int mod=(int)Math.pow(10,9)+7;\n    public int waysToReachTarget(int target, int[][] types) {\n        int n=types.length;\n        int dp[][]=new int[n][target+1];\n        for(int r[]:dp)Arrays.fill(r,-1);\n        return f(n-1,target,types,dp);\n    }\n    public int f(int ind,int target,int types[][],int dp[][])\n    {\n        if(target==0)return 1;\n        if(ind<0)return 0;\n        if(dp[ind][target]!=-1)return dp[ind][target]%mod;\n        int ans=0;\n        for(int i=0;i<=types[ind][0];i++)\n        {\n            if(i*types[ind][1]<=target)\n                ans=((ans%mod)+f(ind-1,target-(i*types[ind][1]),types,dp)%mod)%mod;\n        }\n        return dp[ind][target]=ans%mod;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-to-earn-points","has_notes":false}