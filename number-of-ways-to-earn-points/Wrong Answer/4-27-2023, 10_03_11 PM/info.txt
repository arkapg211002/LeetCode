{"id":940690128,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682613191,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/940690128/","is_pending":"Not Pending","title":"Number of Ways to Earn Points","memory":"N/A","code":"class Solution {\n    int mod=(int)Math.pow(10,9)+7;\n    public int waysToReachTarget(int target, int[][] types) {\n        int n=types.length;\n        int dp[][]=new int[n][target+1];\n        for(int r[]:dp)Arrays.fill(r,-1);\n        return f(n-1,target,types,dp);\n    }\n    public int f(int ind,int target,int types[][],int dp[][])\n    {\n        if(target==0)return 1;\n        if(ind==0)\n        {\n            if(target==0)return 1;\n            else if(types[0][0]>0 && types[0][0]*types[0][1]>=target && target%types[0][1]==0)\n            {\n                return 1;\n            }\n            else return 0;\n        }\n        if(dp[ind][target]!=-1)return dp[ind][target]%mod;\n        int nt=f(ind-1,target,types,dp);\n        int t=0;\n        if(types[ind][0]>0 && types[ind][1]<=target)\n        {\n            types[ind][0]-=1;\n            t=f(ind,target-types[ind][1],types,dp);\n            //types[ind][0]+=1;\n        }\n        return dp[ind][target]=(nt+t)%mod;\n    }\n}","compare_result":"010111111000000000000000000000000000000000000000000000111111011","title_slug":"number-of-ways-to-earn-points","has_notes":false}