{"id":913096139,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1678520331,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/913096139/","is_pending":"Not Pending","title":"Merge BSTs to Create Single BST","memory":"N/A","code":"    int numberOfNode = 0;\n    for (int i=0; i<trees.size(); i++) {\n        root.put(trees.get(i).val, trees.get(i));\n        numberOfNode++;\n        \n        if (trees.get(i).left != null) {\n            child.put(trees.get(i).left.val, trees.get(i).left);\n            numberOfNode++;\n        }\n        \n        if (trees.get(i).right != null) {\n            child.put(trees.get(i).right.val, trees.get(i).right);\n            numberOfNode++;\n        }\n    }\n    \n    TreeNode node = null;\n    for (int i=0; i<trees.size(); i++) {\n        if (child.containsKey(trees.get(i).val)) {\n            numberOfNode--;\n            TreeNode first = child.get(trees.get(i).val);\n            first.left = trees.get(i).left;\n            first.right = trees.get(i).right;\n        }\n        else {\n            if (node == null) {\n                node = trees.get(i);\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    \n    return (isValid(node, Integer.MIN_VALUE, Integer.MAX_VALUE) && numberOfNode == outputNumberOfNodes) ? node : null;\n}\n\npublic boolean isValid(TreeNode root, int min, int max) {\n    if (root == null) {\n        return true;\n    }\n    \n    outputNumberOfNodes++;\n    if ((root.val <= min || root.val >= max)) {\n        return false;\n    }\n    \n    return (isValid(root.left, min, root.val) && isValid(root.right, root.val, max));\n}","compare_result":null,"title_slug":"merge-bsts-to-create-single-bst","has_notes":false}