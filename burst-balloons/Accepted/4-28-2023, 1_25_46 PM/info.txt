{"id":940995880,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1682668546,"status":10,"status_display":"Accepted","runtime":"305 ms","url":"/submissions/detail/940995880/","is_pending":"Not Pending","title":"Burst Balloons","memory":"42.8 MB","code":"class Solution {\n    public int maxCoins(int[] nums) {\n        int n = nums.length;\n        List<Integer>a=new ArrayList<>();\n        for(int i=0;i<n;i++)a.add(nums[i]);\n        a.add(1);\n        a.add(0, 1);\n        int dp[][]=new int[n+1][n+1];\n        for(int r[]:dp)Arrays.fill(r,-1);\n        return f(1, n, a, dp);\n    }\n    public int f(int i, int j, List<Integer>a, int dp[][]) \n    {\n        if (i > j) return 0;\n        if (dp[i][j] != -1) return dp[i][j];\n        int maxi = Integer.MIN_VALUE;\n        for (int ind = i; ind <= j; ind++) \n        {\n            int cost = a.get(i - 1) * a.get(ind) * a.get(j + 1) + f(i, ind - 1, a, dp) + f(ind + 1, j, a, dp);\n            maxi = (int)Math.max(maxi, cost);\n        }\n        return dp[i][j] = maxi;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"burst-balloons","has_notes":false}