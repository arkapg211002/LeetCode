{"id":815087969,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1664898191,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/815087969/","is_pending":"Not Pending","title":"Check Array Formation Through Concatenation","memory":"42.6 MB","code":"class Solution {\n    public boolean canFormArray(int[] arr, int[][] pieces) {\n         Map<Integer, Integer> positionMap = new HashMap<>();\n\t\t//Store positions of all the elements of arr\n        for(int i = 0; i < arr.length; i++)\n            positionMap.put(arr[i], i);\n\n        for(int[] piece: pieces){\n\t\t\t//First element does not have any position in original arr\n            if(!positionMap.containsKey(piece[0])) return false;\n            for(int i = 1; i < piece.length; i++) {\n\t\t\t\t//Whether element exists in original arr and appears next to the previous element\n                if(!positionMap.containsKey(piece[i])) return false;\n                if(positionMap.get(piece[i]) - positionMap.get(piece[i-1]) != 1) return false;\n            }\n        }\n\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-array-formation-through-concatenation","has_notes":false}