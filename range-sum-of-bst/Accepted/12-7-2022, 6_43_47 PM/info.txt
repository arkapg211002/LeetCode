{"id":856110914,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1670418827,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/856110914/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"67.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    public int rangeSumBST(TreeNode root, int low, int high) {\n        int s=0;\n        if(root==null)return 0;\n        if(root.val>=low && root.val<=high)s=root.val;\n        int l=rangeSumBST(root.left,low,high);\n        int r=rangeSumBST(root.right,low,high);\n        //s+=(l+r);\n        return (l+r+s);\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false}