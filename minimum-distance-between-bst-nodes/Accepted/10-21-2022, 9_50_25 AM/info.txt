{"id":827060776,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666326025,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/827060776/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"42.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer>l=new ArrayList<>();\n    public int minDiffInBST(TreeNode root) {\n        traverse(root);\n        //System.out.println(l);\n        //Collections.sort(l);\n        int min=Integer.MAX_VALUE;\n        for(int i=1;i<l.size();i++)\n        {\n            min=(int)Math.min(min,(int)Math.abs(l.get(i)-l.get(i-1)));\n        }\n        return min;\n        \n    }\n    public void traverse(TreeNode root)\n    {\n        if(root==null)return;\n        traverse(root.left);\n        l.add(root.val);\n        traverse(root.right);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false}