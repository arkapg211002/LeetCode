{"id":933501068,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1681457479,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/933501068/","is_pending":"Not Pending","title":"Maximal Network Rank","memory":"43.5 MB","code":"class Solution {\n    public int maximalNetworkRank(int n, int[][] roads) {\n        int d[]=new int[n];\n        int a[][]=new int[n][n],ans=0;\n        for(int i=0;i<roads.length;i++)\n        {\n            d[roads[i][0]]+=1;\n            d[roads[i][1]]+=1;\n            a[roads[i][0]][roads[i][1]]=1;\n            a[roads[i][1]][roads[i][0]]=1;\n        }     \n        for(int i=0;i<n;i++)\n        {\n            for(int j=i+1;j<n;j++)\n            {\n                if(a[i][j]==1)\n                {\n                    int rk=d[i]+d[j]-1;\n                    ans=(int)Math.max(ans,rk);\n                }\n                else\n                {\n                    int rk=d[i]+d[j];\n                    ans=(int)Math.max(ans,rk);\n                }\n            }\n        }   \n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-network-rank","has_notes":false}