{"id":806886266,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1663945227,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/806886266/","is_pending":"Not Pending","title":"Minimum Cost to Move Chips to The Same Position","memory":"N/A","code":"class Solution {\n    public int minCostToMoveChips(int[] position) {\n        int c=0,cm=0;\n        HashMap<Integer,Integer>hm=new HashMap<>();\n        for(int i=0;i<position.length;i++)\n        {\n            if(hm.containsKey(position[i])==false)\n            {\n                hm.put(position[i],1);\n            }\n            else\n            {\n                hm.put(position[i],hm.get(position[i])+1);\n            }\n        }\n        System.out.println(hm);\n        int max=Integer.MIN_VALUE,id=0,ide=0,maxi=Integer.MAX_VALUE;\n        int min=Integer.MAX_VALUE,idm=0,idme=0,mini=Integer.MIN_VALUE;\n        for(Map.Entry<Integer,Integer>e:hm.entrySet())\n        {\n            //System.out.println(e.getKey()+\" \"+e.getValue());\n            if(e.getValue()>max)\n            {\n                id=e.getKey();\n                max=e.getValue();\n            }\n            if(e.getValue()>=maxi)\n            {\n                ide=e.getKey();\n                maxi=e.getValue();\n            }\n            if(e.getValue()<min)\n            {\n                idm=e.getKey();\n                min=e.getValue();\n            }\n            if(e.getValue()<=mini)\n            {\n                idme=e.getKey();\n                mini=e.getValue();\n            }\n        }\n        //System.out.println(max+\" \"+id+\" \"+min+\" \"+idm);\n        int d=0,dm=0,de=0,dme=0,ce=0,cme=0;\n        for(Map.Entry<Integer,Integer>e:hm.entrySet())\n        {\n            int a=e.getKey();\n            d=(int)Math.abs(a-id);\n            de=(int)Math.abs(a-ide);\n            dme=(int)Math.abs(a-idme);\n            dm=(int)Math.abs(a-idm);\n            if(d%2!=0)c+=e.getValue();\n            if(dm%2!=0)cm+=e.getValue();\n            if(de%2!=0)ce+=e.getValue();\n            if(dme%2!=0)cme+=e.getValue();\n        }\n        List<Integer>l=new ArrayList<>();\n        l.add(c);l.add(cm);l.add(cme);l.add(ce);\n        Collections.sort(l);\n        return l.get(0);\n    }\n}","compare_result":"111111111111111111111111011111111011111111111111011","title_slug":"minimum-cost-to-move-chips-to-the-same-position","has_notes":false}