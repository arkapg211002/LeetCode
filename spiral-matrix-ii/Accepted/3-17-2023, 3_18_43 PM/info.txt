{"id":916787760,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1679046523,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/916787760/","is_pending":"Not Pending","title":"Spiral Matrix II","memory":"41 MB","code":"class Solution {\n\n    int[][] directions = new int[][] {\n            {0, 1},\n            {1, 0},\n            {0, -1},\n            {-1, 0}\n    };\n\n    public int[][] generateMatrix(int n) {\n        int[][] m = new int[n][n];\n        int row = 0, col = 0;\n        int centerRow = n / 2, centerCol = n % 2 == 0 ? n / 2 - 1 : n / 2;\n        int counter = 1;\n        m[row][col] = counter++;\n        int dirCount = 0;\n        int[] direction = directions[dirCount];\n        while (!(row == centerRow && col == centerCol)) {\n            if (cellExists(row + direction[0], col + direction[1], m)) {\n                row += direction[0];\n                col += direction[1];\n                m[row][col] = counter++;\n            } else {\n                dirCount++;\n                direction = directions[dirCount % 4];\n            }\n        }\n        return m;\n    }\n\n    private boolean cellExists(int row, int col, int[][] m) {\n        return row >= 0 && row < m.length && col >= 0 && col < m[0].length && m[row][col] == 0;\n    }\n}","compare_result":"11111111111111111111","title_slug":"spiral-matrix-ii","has_notes":false}