{"id":912137537,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678374502,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/912137537/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"42.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    LinkedList<TreeNode>q=new LinkedList<>();\n    List<Integer>l=new ArrayList<>();\n    List<List<Integer>>ans=new ArrayList<>();\n    public List<List<Integer>> levelOrder(TreeNode root) {\n        if(root==null)return new ArrayList<>();\n        level(root);\n        return ans;\n    }\n    public void level(TreeNode root)\n    {\n        TreeNode p=root;\n        if(p==null)return;\n        q.addLast(p);\n        while(q.isEmpty()==false)\n        {\n            int n=q.size();\n            for(int i=0;i<n;i++)\n            {\n                p=q.removeFirst();\n                l.add(p.val);\n                if(p.left!=null)q.addLast(p.left);\n                if(p.right!=null)q.addLast(p.right);\n            }\n            ans.add(l);\n            l=new ArrayList<>();\n        }\n\n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false}