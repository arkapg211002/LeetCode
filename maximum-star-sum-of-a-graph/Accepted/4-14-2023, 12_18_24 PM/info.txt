{"id":933481846,"lang":"java","lang_name":"Java","time":"3 weeks, 3 days","timestamp":1681454904,"status":10,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/933481846/","is_pending":"Not Pending","title":"Maximum Star Sum of a Graph","memory":"88.3 MB","code":"class Solution {\n    public int maxStarSum(int[] vals, int[][] edges, int k) {\n        int n = vals.length;\n        List<Integer>[] graph = new List[n];\n        \n        for (int i = 0; i < n; i++) {\n            graph[i] = new ArrayList<Integer>();\n        }\n        \n        for (int[] edge : edges) {\n            int a = edge[0], b = edge[1];\n            graph[a].add(b);\n            graph[b].add(a);\n        }\n        \n        long res = Long.MIN_VALUE;\n        \n        for (int i = 0; i < n; i++) {\n            List<Integer> curr = graph[i];\n            \n            curr.sort((a, b) -> vals[b]-vals[a]);\n            \n            long max = vals[i], sum = vals[i];\n            \n            for (int j = 0; j < k && j < curr.size(); j++) {\n                sum += vals[curr.get(j)];\n                max = Math.max(max, sum);\n            }\n            \n            res = Math.max(res, max);\n        }\n        \n        return (int) res;\n    }\n}","compare_result":"1111111111111111111111111","title_slug":"maximum-star-sum-of-a-graph","has_notes":false}