{"id":934429150,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1681611732,"status":10,"status_display":"Accepted","runtime":"118 ms","url":"/submissions/detail/934429150/","is_pending":"Not Pending","title":"Number of Ways to Form a Target String Given a Dictionary","memory":"59.2 MB","code":"class Solution {\n    public int numWays(String[] words, String target) {\n        int N = words.length;\n        int W = words[0].length(); \n        int T = target.length();\n        int[][] freq = new int[W][26];\n        for (int i = 0; i < W; i++) {\n            for (int j = 0; j < N; j++) {\n                int let = words[j].charAt(i) - 'a';\n                freq[i][let]++;\n            }\n        }\n        long[][] dp = new long[T + 1][W + 1];\n        for (int i = 0; i <= W; i++) {\n            dp[0][i] = 1;\n        }\n        // for (int i = 0; i <= T; i++) {\n        //     dp[i][0] = 1;\n        // }\n        for (int i = 0; i < T; i++) {\n            char tar = target.charAt(i);\n            for (int j = 0; j < W; j++) {\n                int num = freq[j][tar - 'a'];\n                dp[i + 1][j + 1] = (dp[i + 1][j] + (dp[i][j] * num) % 1000000007) % 1000000007;\n            }\n        }\n        return (int)dp[T][W];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-to-form-a-target-string-given-a-dictionary","has_notes":false}