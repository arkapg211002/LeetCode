{"id":802010353,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1663422742,"status":10,"status_display":"Accepted","runtime":"225 ms","url":"/submissions/detail/802010353/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"124.9 MB","code":"class Solution {\n    public List<List<Integer>> palindromePairs(String[] words) {\n        HashMap<String,Integer> wordMap = new HashMap<>();\n        Set<Integer> set = new TreeSet<>();\n        int n = words.length;\n        \n        for(int i=0;i<n;i++){\n            wordMap.put(words[i],i);\n            set.add(words[i].length());\n        }\n        \n        List<List<Integer>> ans = new ArrayList<>();\n        \n        for(int i=0;i<n;i++){\n            int length = words[i].length();\n            \n            if(length ==1){\n                if(wordMap.containsKey(\"\")){\n                    ans.add(Arrays.asList(i, wordMap.get(\"\")));\n                    ans.add(Arrays.asList(wordMap.get(\"\"), i));\n                }\n                continue;\n            }\n            String reverse= new StringBuilder(words[i]).reverse().toString();\n            if(wordMap.containsKey(reverse) && wordMap.get(reverse) != i)\n                ans.add(Arrays.asList(i,wordMap.get(reverse)));\n            \n            for(Integer k:set){\n                if(k==length)\n                    break;\n                if(isPalindrome(reverse,0,length-1-k)){\n                    String s1 = reverse.substring(length-k);\n                    if(wordMap.containsKey(s1))\n                        ans.add(Arrays.asList(i,wordMap.get(s1)));\n                }\n                \n                if(isPalindrome(reverse,k,length-1)){\n                    String s2 = reverse.substring(0,k);\n                    if(wordMap.containsKey(s2))\n                        ans.add(Arrays.asList(wordMap.get(s2),i));\n                }\n            }\n        }\n        return ans;\n    }\n    \n    private boolean isPalindrome(String s, int left, int right){\n        while(left<right)\n            if(s.charAt(left++)!=s.charAt(right--))\n                return false;\n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-pairs","has_notes":false}