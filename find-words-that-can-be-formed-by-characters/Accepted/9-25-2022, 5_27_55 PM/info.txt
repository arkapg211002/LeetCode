{"id":808246117,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1664107075,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/808246117/","is_pending":"Not Pending","title":"Find Words That Can Be Formed by Characters","memory":"54.1 MB","code":"class Solution {\n    public boolean check(String word, Map<Character, Integer> chars){\n        Map<Character, Integer> map = new HashMap<>();\n        \n        for(int i=0;i<word.length();i++){\n            char curr = word.charAt(i);\n            if(!map.containsKey(curr)){\n                map.put(curr, 0);\n            }\n            map.replace(curr, map.get(curr)+1);\n            \n            if(!chars.containsKey(curr) || chars.get(curr)<map.get(curr)){\n                return false;\n            }\n        }\n        \n        return true;\n    }\n    \n    public int countCharacters(String[] words, String chars) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(int i=0;i<chars.length();i++){\n            char curr = chars.charAt(i);\n            if(!map.containsKey(curr)){\n                map.put(curr, 0);\n            }\n            map.replace(curr, map.get(curr)+1);\n        }\n        \n        int count = 0;\n        for(int i=0;i<words.length;i++){\n            if(check(words[i], map)){\n                count += words[i].length();\n            }\n        }\n        \n        return count;\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"find-words-that-can-be-formed-by-characters","has_notes":false}