{"id":797966991,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1662992014,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/797966991/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"43 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        //previous node of head i.e null\n        ListNode prev=null;        \n        while(head!=null){\n         ListNode next_node=head.next;\n            //setting head.next to prev\n            head.next=prev;\n            prev=head;\n            head=next_node;\n        }\n        return prev;\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false}