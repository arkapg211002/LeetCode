{"id":941189827,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1682700789,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/941189827/","is_pending":"Not Pending","title":"Minimum Number of Operations to Make Arrays Similar","memory":"59.8 MB","code":"class Solution {\n    public long makeSimilar(int[] nums, int[] target) {\n        List<Integer>e1=new ArrayList<>();\n        List<Integer>e2=new ArrayList<>();\n        List<Integer>o1=new ArrayList<>();\n        List<Integer>o2=new ArrayList<>();\n        Arrays.sort(nums);\n        Arrays.sort(target);\n        long minop=0;\n        for(int i=0;i<nums.length;i++)\n        {\n            if(nums[i]%2==0)e1.add(nums[i]);\n            else o1.add(nums[i]);\n            if(target[i]%2==0)e2.add(target[i]);\n            else o2.add(target[i]);\n        }\n        for(int i=0;i<e1.size();i++)\n        {\n            if(e1.get(i)>e2.get(i)) minop+=(e1.get(i)-e2.get(i));\n        }\n        for(int i=0;i<o1.size();i++)\n        {\n            if(o1.get(i)>o2.get(i)) minop+=(o1.get(i)-o2.get(i));\n        }\n        return minop/2;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"minimum-number-of-operations-to-make-arrays-similar","has_notes":false}