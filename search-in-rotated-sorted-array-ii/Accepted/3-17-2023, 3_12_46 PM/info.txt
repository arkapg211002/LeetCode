{"id":916784937,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1679046166,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/916784937/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"41.9 MB","code":"class Solution {\n    public boolean search(int[] nums, int target) {\n      int start = 0, end = nums.length - 1;\n      while(start <= end) {\n          int mid = start + (end - start) / 2;\n          if(nums[mid] == target) return true;\n          \n          //if there are duplicates\n          if(nums[start] == nums[mid] && nums[mid] == nums[end]) {\n                start ++;\n                end --;\n            }\n          \n          //left half is sorted\n          else if(nums[start] <= nums[mid]) {\n              if(target >= nums[start] && target <= nums[mid])\n              end = mid - 1;\n\n              else\n              start = mid + 1;\n          }\n\n          //right half is sorted\n          else {\n              if(target <= nums[end] && target >= nums[mid])\n              start = mid + 1;\n\n              else\n              end = mid - 1; \n          }\n      }\n      return false;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array-ii","has_notes":false}