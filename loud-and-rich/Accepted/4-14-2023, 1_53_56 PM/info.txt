{"id":933522097,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1681460636,"status":10,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/933522097/","is_pending":"Not Pending","title":"Loud and Rich","memory":"52.7 MB","code":"class Solution {\n    public int[] loudAndRich(int[][] richer, int[] quiet) {\n        ArrayList<ArrayList<Integer>>l=new ArrayList<>();\n        for(int i=0;i<quiet.length;i++)\n        {\n            l.add(new ArrayList<>());\n        }\n        for(int i=0;i<richer.length;i++)\n        {\n            l.get(richer[i][1]).add(richer[i][0]);\n        }\n        ArrayList<Integer>a=new ArrayList<>();\n        int ans[]=new int[quiet.length];\n        for(int i=0;i<quiet.length;i++)\n        {\n            a=new ArrayList<>();\n            int v[]=new int[quiet.length];\n            dfs(i,l,v,a);\n            int min=i;\n            //System.out.println(i+\" \"+a);\n            \n            if(a.isEmpty()==true)\n            {\n                ans[i]=i;\n                continue;\n            }\n            for(int j=0;j<a.size();j++)\n            {\n                if(quiet[a.get(j)]<quiet[min])min=a.get(j);\n            }\n            ans[i]=min;\n\n        }\n        return ans;\n\n    }\n    public void dfs(int node,ArrayList<ArrayList<Integer>>l,int v[],ArrayList<Integer>a)\n    {\n        v[node]=1;\n        for(Integer it:l.get(node))\n        {\n            if(v[it]==0)\n            {\n                a.add(it);\n                dfs(it,l,v,a);\n            }\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"loud-and-rich","has_notes":false}