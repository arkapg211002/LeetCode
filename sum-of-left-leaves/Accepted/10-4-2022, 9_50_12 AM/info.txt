{"id":814722727,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1664857212,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/814722727/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"42.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n        \n        return sum(root, 0, false);\n    }\n    \n    private int sum(TreeNode root, int sum, boolean check){\n        \n        if(root==null){\n            return 0;\n        }\n        \n        if(root.left==null && root.right==null && check){\n            sum += root.val;\n        }\n        \n        return sum + sum(root.left, sum, true) + sum(root.right, sum, false);\n    }\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false}