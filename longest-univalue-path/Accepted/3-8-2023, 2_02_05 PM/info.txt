{"id":911353944,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1678264325,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/911353944/","is_pending":"Not Pending","title":"Longest Univalue Path","memory":"46.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n        int len = 0;\n        public int longestUnivaluePath(TreeNode root) {\n                len = 0;\n                helper(root,-1);\n                \n                if(len > 0){\n                        len = len - 1;\n                }\n                return len;\n        }\n        public int helper(TreeNode node,int val){\n                if(node == null){\n                        return 0;\n                }\n                \n                int left = helper(node.left,node.val);\n                int right = helper(node.right,node.val);\n                \n                if(left + right + 1 > len){\n                        len = left+right+1;\n                }\n                \n                if(val == node.val){\n                        return Math.max(left,right) + 1;\n                }else{\n                        return 0;\n                }\n        }\n        \n}\n\n\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-univalue-path","has_notes":false}