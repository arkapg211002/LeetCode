{"id":827020938,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666321447,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/827020938/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"40.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer>l=new ArrayList<>();\n    public boolean leafSimilar(TreeNode root1, TreeNode root2) {\n        addleaf(root1);\n        List<Integer>l1=l;\n        l=new ArrayList<>();\n        addleaf(root2);\n        if(l1.equals(l)==true)return true;\n        else return false;\n    }\n    public void addleaf(TreeNode root)\n    {\n        if(root==null)return;\n        if(root.left==null && root.right==null)l.add(root.val);\n        addleaf(root.left);\n        addleaf(root.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false}