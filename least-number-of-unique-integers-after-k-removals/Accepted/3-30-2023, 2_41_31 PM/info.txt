{"id":924718180,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680167491,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/924718180/","is_pending":"Not Pending","title":"Least Number of Unique Integers after K Removals","memory":"63.5 MB","code":"class Solution {\r\n    public int findLeastNumOfUniqueInts(int[] arr, int k) {\r\n        Arrays.sort(arr);\r\n        int a =0;\r\n        int max = arr[arr.length-1];\r\n        for(int i =arr.length-1 ; i>=0 ; i--){\r\n            if(arr[i]==max) a++;\r\n            else break;\r\n        }\r\n        ArrayList <Integer> ls = new ArrayList<>();\r\n        HashSet <Integer> hs = new HashSet<>();\r\n        int c =0;\r\n        for (int i = 0; i <arr.length ; i++) {\r\n            int len = hs.size();\r\n            hs.add(arr[i]);\r\n            if(hs.size()==len) {\r\n                c++;\r\n            }\r\n            else{\r\n                ls.add(c+1);\r\n                c=0;\r\n            }\r\n        }\r\n        ls.add(a);\r\n        ls.remove(0);\r\n        Collections.sort(ls);\r\n        int count =k , ans=0;\r\n        for (int i = 0; i <ls.size() ; i++) {\r\n            if(ls.get(i)-count<=0){\r\n                count -= ls.get(i);\r\n                ans++;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n        return ls.size()-ans;\r\n    }\r\n}","compare_result":"1111111111111111111111111111111111111111111","title_slug":"least-number-of-unique-integers-after-k-removals","has_notes":false}