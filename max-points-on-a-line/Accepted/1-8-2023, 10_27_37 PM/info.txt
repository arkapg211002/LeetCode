{"id":874185586,"lang":"java","lang_name":"Java","time":"3 months, 4 weeks","timestamp":1673197057,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/874185586/","is_pending":"Not Pending","title":"Max Points on a Line","memory":"39.8 MB","code":"class Solution {\n    // This method returns the maximum number of points that lie on the same line\n    // given a set of points represented by the 2D array points\n    public int maxPoints(int[][] points) {\n        // n is the number of points in the array\n        int n = points.length;\n        \n        // If there are 0 or 1 points, there is at most one line that can be formed\n        // (i.e., the line formed by the single point, or no line if there are no points)\n        if(n <= 2) return n;\n        \n        // Initialize the maximum number of points on a line to 2, since there must be at least 2 points to form a line\n        int ans = 2;\n        \n        // Iterate through all pairs of points\n        for(int i = 0 ;i < n; i++){\n            for(int j = i+1; j < n ; j++){\n                // temp is the number of points on the line formed by point i and point j\n                int temp = 2;\n                // Check if any other points are on the same line as point i and point j\n                for(int k = j+1 ; k<n ; k++ ){                   \n                    // Check if point k is on the same line as point i and point j\n                    // This is done by checking if the slope between point i and point k is equal to the slope between point i and point j\n                    int x = (points[j][1] - points[i][1]) * (points[k][0] - points[i][0]);\n                    int y = (points[k][1] - points[i][1]) * (points[j][0] - points[i][0]);\n                    if(x == y){\n                        // If the slopes are equal, point k is on the same line as point i and point j\n                        temp++;\n                    }\n                }\n                // Update the maximum number of points on a line if necessary\n                if(temp > ans){\n                    ans = temp;\n                }\n            }\n        }   \n        // Return the maximum number of points on a line\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"max-points-on-a-line","has_notes":false}