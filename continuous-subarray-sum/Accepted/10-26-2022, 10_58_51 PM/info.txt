{"id":830861151,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1666805331,"status":10,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/830861151/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"106.1 MB","code":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n        Set<Integer> modSet=new HashSet();\n        int currSum = 0, prevSum=0; \n\t\t//when we add prevSum=0 in set it will actually check if currSum is divided by k \n        for(int n : nums) {\n            currSum += n;\n            if(modSet.contains(currSum%k)) {\n                return true;\n            }\n            currSum %=k;\n            modSet.add(prevSum);\n            prevSum = currSum;\n        }\n        return false;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}