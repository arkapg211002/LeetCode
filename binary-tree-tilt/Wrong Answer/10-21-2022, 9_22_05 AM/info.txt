{"id":827045799,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666324325,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/827045799/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int s=0;\n    public int findTilt(TreeNode root) {\n        transform(root);\n        return s;\n        \n    }\n    public void transform(TreeNode root)\n    {\n        if(root==null)return;\n        if(root.left==null && root.right==null)s+=0;\n        else if(root.left==null && root.right!=null)s+=root.right.val;\n        else if(root.left!=null && root.right==null)s+=root.left.val;\n        else s+=(int)Math.abs(root.left.val-root.right.val);\n        transform(root.left);\n        transform(root.right);\n    }\n}","compare_result":"10010001111111000001000000000001000000000000001000000000000000000000000000000","title_slug":"binary-tree-tilt","has_notes":false}