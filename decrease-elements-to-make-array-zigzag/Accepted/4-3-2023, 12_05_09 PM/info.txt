{"id":927040270,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1680503709,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/927040270/","is_pending":"Not Pending","title":"Decrease Elements To Make Array Zigzag","memory":"40 MB","code":"class Solution {\n    //Basic idea is to minimize each index with respect to its neighbours\npublic int movesToMakeZigzag(int[] nums) {\n    int n = nums.length, \n\t\toddCost = 0,  //cost to make odd indices lower than their neighbours cost to make even indices lower than their neighbours\n\t\tevenCost = 0; //cost to make odd indices lower than their neighbours cost to make even indices lower than their neighbours\n   \n   for(int i = 0; i < nums.length; i++){\n        \n        if((i - 1 >= 0 && nums[i - 1] <= nums[i]) || (i + 1 < n && nums[i + 1] <= nums[i])){ //if any of the neighbour is less than the curr index then reduce it \n            int min = Integer.MAX_VALUE; //find neigbour with minimum value\n            \n            if(i - 1 >= 0)\n                min = Math.min(min, nums[i - 1]);\n            if(i + 1 < n)\n                min = Math.min(min, nums[i + 1]);\n            \n            int cost = nums[i] - min + 1; //caluclate cost to make the value of current index lower than its neighbours\n            \n\t\t\t//add cost to corresponding index cost variable\n            if(i % 2 == 0)\n                evenCost += cost;\n            else\n                oddCost += cost;\n            \n        }\n    }\n    \n    return Math.min(oddCost, evenCost);\n}\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"decrease-elements-to-make-array-zigzag","has_notes":false}