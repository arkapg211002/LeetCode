{"id":940152256,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1682526248,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/940152256/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution {\n    public boolean canPartition(int[] nums) {\n        int s=Arrays.stream(nums).sum();\n        if(s%2!=0)return false;\n        int n=nums.length;\n        s=s/2;\n        int dp[][]=new int[n][s+1];\n        for(int i=0;i<n;i++)dp[i][0]=1;\n        if(nums[0]<=s)dp[0][nums[0]]=1;\n        for(int i=1;i<n;i++)\n        {\n            for(int j=1;j<=s;j++)\n            {\n                int nt=dp[i-1][j];\n                int t=0;\n                if(nums[i]<=s)\n                    t=dp[i-1][s-nums[i]];\n                dp[i][j]=nt | t;\n            }\n        }\n        return (dp[n-1][s]==1)?true:false;\n    }\n}","compare_result":"111111111110111111010101011111111101110010111001111110011001100110010011000000100100010100000000000111011111101001100100000000000011001001001","title_slug":"partition-equal-subset-sum","has_notes":false}