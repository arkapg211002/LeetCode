{"id":795726753,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1662746101,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/795726753/","is_pending":"Not Pending","title":"Find Subsequence of Length K With the Largest Sum","memory":"46.1 MB","code":"class Solution {\n    public int[] maxSubsequence(int[] nums, int k) {\n        List<Integer>l=new ArrayList<>();\n        //List<Integer>r=new ArrayList<>();\n        List<Integer>a=new ArrayList<>();\n        int b[]=new int[k];\n        for(int i=0;i<nums.length;i++)\n        {\n            l.add(nums[i]);\n            //r.add(nums[i]);\n        }\n        Collections.sort(l);\n        Collections.reverse(l);\n        System.out.println(l);\n       int j=0;int c=k;\n        while(k>0)\n        {\n            a.add(l.get(j));\n            j+=1;\n            k-=1;\n        }\n        j=0;\n        System.out.println(a);\n        for(int i=0;i<nums.length;i++)\n        {\n            if(a.contains(nums[i])==true && j<c)\n            {\n                b[j]=nums[i];\n                a.remove(a.indexOf(nums[i]));\n                j+=1;\n            }\n        }\n        return b;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"find-subsequence-of-length-k-with-the-largest-sum","has_notes":false}