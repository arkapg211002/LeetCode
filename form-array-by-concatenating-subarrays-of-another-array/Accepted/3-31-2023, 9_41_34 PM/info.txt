{"id":925450166,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680279094,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/925450166/","is_pending":"Not Pending","title":"Form Array by Concatenating Subarrays of Another Array","memory":"43.2 MB","code":"class Solution {\n     public boolean canChoose(int[][] groups, int[] nums) {\n        int totalCount=0;\n        for (int[] arr:groups){\n            totalCount+=arr.length;\n        }\n        return checkTwoMatricestoChoose(groups,nums,0,0,totalCount);\n    }\n    private boolean checkTwoMatricestoChoose(int[][] groups, int[] nums, int groupRowInd, int numsIndex,int totalCount) {\n        if(groupRowInd==groups.length){\n            return true;\n        }\n        if(totalCount>nums.length-numsIndex){\n            return false;\n        }\n        for (int i=numsIndex,j=0;i<nums.length;){\n            if(groups[groupRowInd][j]==nums[i]){\n                j++;\n                i++;\n            }else {\n                i=i-j+1;\n                j=0;\n            }\n            if(j==groups[groupRowInd].length){\n                if(checkTwoMatricestoChoose(groups,nums,groupRowInd+1,i,totalCount-groups[groupRowInd].length)){\n                    return true;\n                }\n                i=i-j+1;\n                j=0;\n\n            }\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"form-array-by-concatenating-subarrays-of-another-array","has_notes":false}