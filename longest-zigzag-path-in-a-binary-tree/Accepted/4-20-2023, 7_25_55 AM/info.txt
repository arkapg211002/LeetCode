{"id":936656270,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1681955755,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/936656270/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"53.7 MB","code":"class Solution {\n    int maxStep = 0;//to keep track of max no. of steps\n    public int longestZigZag(TreeNode root) {\n        if(root.left != null){\n            helper(root.left,1,false,true);\n        }\n        if(root.right != null){\n            helper(root.right,1,true,false);\n        }\n        return maxStep;\n    }\n    public void helper(TreeNode node,int step,boolean canGoLeft,boolean canGoRight){\n        maxStep = Math.max(step,maxStep);//calculate the max at that step\n        //it means previous step we took was right\n        if(canGoLeft){\n            if(node.left != null){\n                helper(node.left,step+1,false,true);\n            }\n            //calculating new zigzag from here onwards\n            if(node.right != null){\n                helper(node.right,1,true,false);\n            }\n        }\n        //it means previous step we took was left\n        if(canGoRight){\n            if(node.right != null){\n                helper(node.right,step+1,true,false);\n            }\n            //calculating new zigzag from here onwards\n            if(node.left != null){\n                helper(node.left,1,false,true);\n            }\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false}