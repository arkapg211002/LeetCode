{"id":921689306,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1679726346,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/921689306/","is_pending":"Not Pending","title":"Count Unreachable Pairs of Nodes in an Undirected Graph","memory":"120 MB","code":"class Solution {\n    public long countPairs(int n, int[][] edges) {\n        List<List<Integer>> adj=new ArrayList<>();\n        for(int i=0;i<n;i++){\n            adj.add(new ArrayList<>());\n        }\n        for(int i=0;i<edges.length;i++){\n            adj.get(edges[i][0]).add(edges[i][1]);\n            adj.get(edges[i][1]).add(edges[i][0]);\n        }\n        long sum=n;\n        long res=0;\n        boolean vis[]=new boolean[n];\n        for(int i=0;i<n;i++){\n            if(!vis[i]){\n                vis[i]=true;\n                int count=bfs(i,vis,adj,0);\n                sum-=count;\n                res+=(sum*count);\n            }\n        }\n        return res;\n    }\n    public int bfs(int i,boolean[] vis,List<List<Integer>> adj,int count){\n        Queue<Integer> qu=new LinkedList<>();\n        qu.add(i);\n        count++;\n        while(!qu.isEmpty()){\n            int curr=qu.poll();\n            for(int adjnode:adj.get(curr)){\n                if(!vis[adjnode]){\n                    qu.add(adjnode);\n                    count++;\n                    vis[adjnode]=true;\n                }\n            }\n        }\n        return count;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-unreachable-pairs-of-nodes-in-an-undirected-graph","has_notes":false}