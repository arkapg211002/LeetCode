{"id":848413554,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1669180903,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/848413554/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"45.7 MB","code":"class Solution {\n    public boolean isValidSudoku(char[][] board) {\n        for (int row = 0; row < 9; row++) {\n            for (int column = 0; column < 9; column++) {\n                if (board[row][column] != '.' && !isValidPlacement(board, board[row][column], row, column))\n                    return false;\n            }\n        }\n        return true;\n    }\n\n    private boolean isNumberInRow(char[][] board, char number, int row, int column) {\n        for (int i = 0; i < 9; i++) {\n            if (column != i && board[row][i] == number) return true;\n        }\n        return false;\n    }\n\n    private boolean isNumberInColumn(char[][] board, char number, int row, int column) {\n        for (int i = 0; i < 9; i++) {\n            if (row != i && board[i][column] == number) return true;\n        }\n        return false;\n    }\n\n    private boolean isNumberInBox(char[][] board, char number, int row, int column) {\n        int boxRow = row - row % 3;\n        int boxColumn = column - column % 3;\n        for (int i = boxRow; i < boxRow + 3; i++) {\n            for (int j = boxColumn; j < boxColumn + 3; j++) {\n                if (row != i && column != j && board[i][j] == number) return true;\n            }\n        }\n        return false;\n    }\n\n    private boolean isValidPlacement(char[][] board, char number, int row, int column) {\n        return !isNumberInRow(board, number, row, column) &&\n                !isNumberInColumn(board, number, row, column) &&\n                !isNumberInBox(board, number, row, column);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku","has_notes":false}