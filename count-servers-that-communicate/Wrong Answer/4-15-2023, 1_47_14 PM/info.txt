{"id":934018681,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1681546634,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/934018681/","is_pending":"Not Pending","title":"Count Servers that Communicate","memory":"N/A","code":"class Solution {\n    int area=0;\n    public int countServers(int[][] grid) {\n        int n=grid.length;\n        int m=grid[0].length;\n        int s=0;\n        int vis[][]=new int[n][m];\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n                if(grid[i][j]==1 && vis[i][j]==0)\n                {\n                    area=0;\n                    dfs(i,j,n,m,grid,vis);\n                    if(area>1)s+=area;\n                }\n            }\n        }\n        return s;\n        \n    }\n    \n    \n    public void dfs(int row,int col,int n,int m,int grid[][],int vis[][])\n    {\n        vis[row][col]=1;\n        area+=1;\n        int delrow[]={-1,0,1,0};\n        int delcol[]={0,1,0,-1};\n        for(int i=0;i<4;i++)\n        {\n            int nrow=delrow[i]+row;\n            int ncol=delcol[i]+col;\n            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && vis[nrow][ncol]==0 && grid[nrow][ncol]==1)\n            {\n                dfs(nrow,ncol,n,m,grid,vis);\n            }\n        }\n    }\n}","compare_result":"1110100000000000000000000000000000000000000000000000000","title_slug":"count-servers-that-communicate","has_notes":false}