{"id":808118694,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1664090676,"status":10,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/808118694/","is_pending":"Not Pending","title":"Matrix Cells in Distance Order","memory":"72 MB","code":"class Solution {\n    public int[][] allCellsDistOrder(int rows, int cols, int rCenter, int cCenter) {\n        int a[][]=new int[rows*cols][2];\n        int k=0;\n        for(int i=0;i<rows;i++)\n        {\n            for(int j=0;j<cols;j++)\n            {\n                a[k][0]=i;\n                a[k][1]=j;\n                k+=1;\n            }\n        }\n        Arrays.sort(a,new Comparator<int[]>()\n                    {\n                        @Override\n                        public int compare(int a[],int b[])\n                        {\n                            int d1=(int)Math.abs(a[0]-rCenter)+(int)Math.abs(a[1]-cCenter);\n                            int d2=(int)Math.abs(b[0]-rCenter)+(int)Math.abs(b[1]-cCenter);\n                            if(d1>d2)return 1;\n                            else if(d1<d2)return -1;\n                            else return 0;\n                        }\n                    });\n        return a;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"matrix-cells-in-distance-order","has_notes":false}