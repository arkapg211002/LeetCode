{"id":799255344,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1663121096,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/799255344/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"107.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int path=0;\n    public int pseudoPalindromicPaths (TreeNode root) {\n        int[] freq=new int[10];\n        traverse(root,freq);\n        return path;\n    }\n    public void traverse(TreeNode root,int[] freq)\n    {\n        if(root==null)\n            return;\n        freq[root.val]++;\n        if(root.left==null && root.right==null)\n        {\n            int odd=0;\n            for(int i=0;i<freq.length;i++)\n            {\n                if(freq[i]%2!=0)\n                    odd++;\n                if(odd>1)\n                    break;\n            }\n            if(odd<=1)\n                path++;\n            freq[root.val]--;\n            return;\n        }\n        else\n        {\n        traverse(root.left,freq);\n        traverse(root.right,freq);\n        }\n        freq[root.val]--;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree","has_notes":false}