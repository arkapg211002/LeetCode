{"id":925452110,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680279358,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/925452110/","is_pending":"Not Pending","title":"Reconstruct a 2-Row Binary Matrix","memory":"59 MB","code":"class Solution {\n    public List<List<Integer>> reconstructMatrix(int upper, int lower, int[] colsum)\n    {\n        List<List<Integer>> ans=new ArrayList<>();\n        ans.add(new ArrayList<>());\n        ans.add(new ArrayList<>());\n        \n        for(int i:colsum)\n        {\n            if(i==2)\n            {\n                ans.get(0).add(1);\n                ans.get(1).add(1);\n                upper--;\n                lower--;\n            }\n            \n            else if(i==0)\n            {\n                ans.get(0).add(0);\n                ans.get(1).add(0);\n            }\n            \n            else if(i==1)\n            {\n                if(upper>=lower)\n                {\n                    ans.get(0).add(1);\n                    ans.get(1).add(0);\n                    upper--;\n                }\n                else\n                {\n                    ans.get(0).add(0);\n                    ans.get(1).add(1);\n                    lower--;\n                }\n            }\n        }\n        \n        if(upper!=0 || lower!=0)\n        {\n            return new ArrayList<>();\n        }\n        \n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-a-2-row-binary-matrix","has_notes":false}