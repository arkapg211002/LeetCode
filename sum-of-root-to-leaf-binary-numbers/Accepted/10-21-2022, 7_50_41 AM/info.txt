{"id":826999859,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666318841,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/826999859/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"43 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int sum=0;\n    public int sumRootToLeaf(TreeNode root) {\n        pathroottoleaf(root,0);\n        return sum;\n        \n    }\n    public void pathroottoleaf(TreeNode root,int a)\n    {\n        if(root==null)return;\n        if(root.left==null && root.right==null)\n        {\n            sum+=(root.val==0)?(a*2):(a*2+1);\n            return;\n        }\n        \n        pathroottoleaf(root.left,root.val==0?a*2:a*2+1);\n        pathroottoleaf(root.right,root.val==0?a*2:a*2+1);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers","has_notes":false}