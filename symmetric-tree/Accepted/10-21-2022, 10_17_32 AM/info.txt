{"id":827075411,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666327652,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/827075411/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"40.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n       return root == null || isMirror(root.left, root.right);\n    }\n    boolean isMirror(TreeNode node1, TreeNode node2) {\n        if (node1 == null && node2 == null) return true;\n        \n        if (node1 == null || node2 == null) return false;\n        \n        if (node1.val != node2.val) return false;\n        return isMirror(node1.left, node2.right) && isMirror(node1.right, node2.left);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false}