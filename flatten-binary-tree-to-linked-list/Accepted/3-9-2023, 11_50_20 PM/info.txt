{"id":912246262,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678386020,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/912246262/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"42.5 MB","code":"class Solution {\n    TreeNode prev=null;\n    public void flatten(TreeNode root) {\n         if(root==null)\n            return;\n        flatten(root.right);//traverse till right most.\n        flatten(root.left);//got to left of right most\n       root.left=null;//set left as null\n        root.right=prev;//set right to previously traversed node\n        prev=root;  //set prev to current node.\n    }\n    \n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false}