{"id":940699865,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682614374,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/940699865/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"43.2 MB","code":"class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        int n=text1.length();\n        int m=text2.length();\n        int prev[]=new int[m+1];\n        int cur[]=new int[m+1];\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=m;j++)\n            {\n                if(text1.charAt(i-1)==text2.charAt(j-1))cur[j]=1+prev[j-1];\n                else cur[j]=0+(int)Math.max(prev[j],cur[j-1]);\n            }\n            prev=(int[])(cur.clone());\n        }\n        return prev[m];\n    }\n}\n\n\n\n\n/*class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        int n=text1.length();\n        int m=text2.length();\n        int dp[][]=new int[n+1][m+1];\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=m;j++)\n            {\n                if(text1.charAt(i-1)==text2.charAt(j-1))dp[i][j]=1+dp[i-1][j-1];\n                else dp[i][j]=(int)Math.max(dp[i-1][j],dp[i][j-1]);\n            }\n        }\n        return dp[n][m];\n    }\n}*/","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false}