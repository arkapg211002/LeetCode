{"id":877799659,"lang":"java","lang_name":"Java","time":"3 months, 3 weeks","timestamp":1673670194,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/877799659/","is_pending":"Not Pending","title":"Lexicographically Smallest Equivalent String","memory":"40.6 MB","code":"class Solution {\n    public String smallestEquivalentString(String A, String B, String S) {\n        int[] graph = new int[26];\n        for(int i = 0; i < 26; i++) {\n            graph[i] = i;\n        }\n        for(int i = 0; i < A.length(); i++) {\n            int a = A.charAt(i) - 'a';\n            int b = B.charAt(i) - 'a';\n            int end1 = find(graph, b);\n            int end2 = find(graph, a);\n            if(end1 < end2) {\n                graph[end2] = end1;\n            } else {\n                graph[end1] = end2;\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < S.length(); i++) {\n            char c = S.charAt(i);\n            sb.append((char)('a' + find(graph, c - 'a')));\n        }\n        return sb.toString();\n    }\n    \n    private int find(int[] graph, int index) {\n        while(graph[index] != index) {\n            index = graph[index];\n        }\n        return index;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lexicographically-smallest-equivalent-string","has_notes":false}