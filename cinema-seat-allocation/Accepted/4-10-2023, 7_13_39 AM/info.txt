{"id":931008643,"lang":"java","lang_name":"Java","time":"4Â weeks","timestamp":1681091019,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/931008643/","is_pending":"Not Pending","title":"Cinema Seat Allocation","memory":"49.7 MB","code":"class Solution {\n    public int maxNumberOfFamilies(int n, int[][] reservedSeats) {\n        Map<Integer, Boolean[]> map = new HashMap<>();\n        Boolean[] arr;\n\n        for (int i = 0; i < reservedSeats.length; i++) {\n            int r = reservedSeats[i][0];\n            int c = reservedSeats[i][1];\n\n            if (c == 1 || c == 10)\n                continue;\n\n            if (!map.containsKey(r)) {\n                arr = new Boolean[3];\n                arr[0] = true;\n                arr[1] = true;\n                arr[2] = true;\n                map.put(r, arr);\n            }\n\n            arr = map.get(r);\n\n            if (c == 2 || c == 3)\n                arr[0] = false;\n            else if (c == 8 || c == 9)\n                arr[2] = false;\n            else if (c == 4 || c == 5) {\n                arr[0] = false;\n                arr[1] = false;\n            } else {\n                arr[1] = false;\n                arr[2] = false;\n            }\n\n            map.put(r, arr);\n        }\n\n        int count = (n - map.size()) * 2;\n\n        for (int i : map.keySet()) {\n            arr = map.get(i);\n\n            if (arr[0] && arr[1] && arr[2]) {\n                count = count + 2;\n            } else if (arr[0] || arr[1] || arr[2]) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"cinema-seat-allocation","has_notes":false}