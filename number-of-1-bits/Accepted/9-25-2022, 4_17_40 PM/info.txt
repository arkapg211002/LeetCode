{"id":808213926,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1664102860,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/808213926/","is_pending":"Not Pending","title":"Number of 1 Bits","memory":"39.5 MB","code":"public class Solution {\n    // you need to treat n as an unsigned value\n    public int hammingWeight(int n) {\n        String s=Integer.toString(n);\n        int num=Integer.parseInt(s);\n        int re;\n        if(num<0)re=cn(num);\n        else re=cp(num);\n        return re;\n    }\n    public int cp(int n)\n    {\n        int c=0;\n        while(n>0)\n        {\n            n&=(n-1);\n            c+=1;\n        }\n        return c;\n    }\n    public int cn(int n)\n    {\n        int c=0;\n        while(n<0)\n        {\n            n&=(n-1);\n            c+=1;\n        }\n        return c;\n    }\n}","compare_resulttitle_slug":"number-of-1-bits","has_notes":false}