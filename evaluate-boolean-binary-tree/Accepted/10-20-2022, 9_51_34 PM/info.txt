{"id":826715872,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666282894,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/826715872/","is_pending":"Not Pending","title":"Evaluate Boolean Binary Tree","memory":"45.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean evaluateTree(TreeNode root) {\n        if(root.val==0)return false;\n        if(root.val==1)return true;\n        boolean l=evaluateTree(root.left);\n        boolean r=evaluateTree(root.right);\n        boolean result=true;;\n        if(root.val==2)result=l|r;\n        else if(root.val==3)result=l&r;\n        return result;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"evaluate-boolean-binary-tree","has_notes":false}