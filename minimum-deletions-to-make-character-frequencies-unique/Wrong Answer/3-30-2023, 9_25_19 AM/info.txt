{"id":924585594,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680148519,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/924585594/","is_pending":"Not Pending","title":"Minimum Deletions to Make Character Frequencies Unique","memory":"N/A","code":"class Solution {\n    public int minDeletions(String s) {\n        HashMap<Character,Integer>h=new HashMap<>();\n        for(int i=0;i<s.length();i++)\n        {\n            if(h.containsKey(s.charAt(i))==false)h.put(s.charAt(i),1);\n            else h.put(s.charAt(i),h.get(s.charAt(i))+1);\n        }\n        int a[]=new int[h.size()];\n        int k=0;\n        for(Map.Entry<Character,Integer>e:h.entrySet())\n        {\n            a[k]=e.getValue();\n            k+=1;\n        }\n        Arrays.sort(a);\n        int s1=Arrays.stream(a).sum();\n        for(int i=1;i<a.length-1;i++)\n            while(a[i]==a[i-1] || a[i]==a[i+1])a[i]-=1;\n        int s2=Arrays.stream(a).sum();\n        return (s1-s2);\n    }\n}","compare_result":"1111010011000010010011001110000000000010000000000010000011101111111110011110001011101011111111111000110","title_slug":"minimum-deletions-to-make-character-frequencies-unique","has_notes":false}