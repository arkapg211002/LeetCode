{"id":940145153,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1682525376,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/940145153/","is_pending":"Not Pending","title":"Triangle","memory":"42.4 MB","code":"class Solution {\n    public int minimumTotal(List<List<Integer>>l) {\n        int n=l.size();\n        int dp[][]=new int[n][n];\n        for(int r[]:dp)Arrays.fill(r,-1);\n        return f(0,0,l,n,dp);\n    }\n    public int f(int i,int j,List<List<Integer>>l,int n,int dp[][])\n    {\n        if(i==n-1)return l.get(i).get(j);\n        if(dp[i][j]!=-1)return dp[i][j];\n        int down=l.get(i).get(j)+f(i+1,j,l,n,dp);\n        int diagonal=l.get(i).get(j)+f(i+1,j+1,l,n,dp);\n        return dp[i][j]=(int)Math.min(down,diagonal);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false}