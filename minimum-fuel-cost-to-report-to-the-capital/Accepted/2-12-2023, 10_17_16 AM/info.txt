{"id":896338593,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1676177236,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/896338593/","is_pending":"Not Pending","title":"Minimum Fuel Cost to Report to the Capital","memory":"108.6 MB","code":"class Solution {\n    private static long TotalCost = 0;\n    private static int Seats;\n\n    public static long minimumFuelCost(int[][] roads, int seats) {\n\n        if (roads.length == 1) {\n            return 0;\n        }\n        Helper[] roadsMap = new Helper[roads.length + 1];\n\n        for (int i = 0; i < roads.length + 1; i++) {\n            roadsMap[i] = new Helper(i);\n        }\n\n        for (int i = 0; i < roads.length; i++) {\n            int c1 = roads[i][0];\n            int c2 = roads[i][1];\n            roadsMap[c1].size++;\n            roadsMap[c2].size++;\n        }\n        for (int i = 0; i < roads.length + 1; i++) {\n            roadsMap[i].configurations();\n        }\n\n        for (int i = 0; i < roads.length; i++) {\n            int c1 = roads[i][0];\n            int c2 = roads[i][1];\n            roadsMap[c1].add(c2);\n            roadsMap[c2].add(c1);\n        }\n\n        //System.out.println(roadsMap);\n\n        TotalCost = 0;\n        Seats = seats;\n        int c = calculate(roadsMap, 0, 0);\n        removeCost(c, seats);\n        TotalCost = Math.max(0, TotalCost);\n        return TotalCost;\n    }\n\n    private static int calculate(Helper[] roads, int parent, int current) {\n\n        int[] nexts = roads[current].nexts;\n        if (nexts.length == 1 && current != 0) {\n            addCost(1, Seats);\n            return 1;\n        } else {\n            int value = 1;\n            for (int i = 0; i < nexts.length; i++) {\n                if (nexts[i] != parent) {\n                    value += calculate(roads, current, nexts[i]);\n                }\n            }\n            addCost(value, Seats);\n            return value;\n        }\n    }\n\n    private static void addCost(int travellers, int maxSeats) {\n        int n = (travellers + maxSeats - 1) / maxSeats;\n        TotalCost += n;\n    }\n\n    private static void removeCost(int travellers, int maxSeats) {\n        int n = (travellers + maxSeats - 1) / maxSeats;\n        TotalCost -= n;\n    }\n\n    private static class Helper {\n\n        private int value;\n        private int[] nexts;\n        private int size;\n        private int current;\n\n        public Helper(int value) {\n            this.value = value;\n        }\n\n        public void configurations() {\n            nexts = new int[size];\n        }\n\n        public void add(int v) {\n            nexts[current] = v;\n            current++;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-fuel-cost-to-report-to-the-capital","has_notes":false}