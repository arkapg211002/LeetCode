{"id":911237316,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1678249034,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/911237316/","is_pending":"Not Pending","title":"Reverse Odd Levels of Binary Tree","memory":"49.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode reverseOddLevels(TreeNode root) {\n        reverse(root.left,root.right,1);\n        return root;\n    }\n    public void reverse(TreeNode n1,TreeNode n2,int l)\n    {\n        if(n1==null || n2==null)return;\n        if(l%2!=0)\n        {\n            int t=n1.val;\n            n1.val=n2.val;\n            n2.val=t;\n        }\n        reverse(n1.left,n2.right,l+1);\n        reverse(n1.right,n2.left,l+1);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-odd-levels-of-binary-tree","has_notes":false}