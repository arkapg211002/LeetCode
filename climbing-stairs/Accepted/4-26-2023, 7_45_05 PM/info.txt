{"id":940090999,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1682518505,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/940090999/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"39.3 MB","code":"/*Recursion\n\nclass Solution {\n    public int climbStairs(int n) {\n        if(n==0)return 1;\n        if(n==1)return 1;\n        return climbStairs(n-1)+climbStairs(n-2);\n    }\n}*/\n\nclass Solution\n{\n    public int climbStairs(int n)\n    {\n        int dp[]=new int[n+1];\n        Arrays.fill(dp,-1);\n        dp[0]=1;\n        dp[1]=1;\n        return f(n,dp);\n    }\n    public int f(int ind,int dp[])\n    {\n        if(ind==0 || ind==1)return 1;\n        if(dp[ind]!=-1)return dp[ind];\n        return dp[ind]=f(ind-1,dp)+f(ind-2,dp);\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111","title_slug":"climbing-stairs","has_notes":false}