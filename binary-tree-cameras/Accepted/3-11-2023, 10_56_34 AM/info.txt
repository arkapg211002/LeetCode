{"id":913038423,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678512394,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/913038423/","is_pending":"Not Pending","title":"Binary Tree Cameras","memory":"42.3 MB","code":"class Solution {\n    \n    int camera = 0;\n    public int minCameraCover(TreeNode root) {\n        if(getCamera(root)==-1)  //if camera is required at root\n            camera++;\n        return camera;\n    }\n    \n    \n    // return value of -1 means i need a camera.\n    // return value of 1 means i am a camera.\n    // return value of 0 means i am been looked by a camera.\n    public int getCamera(TreeNode root)  \n    {\n        if(root == null)\n            return 0;\n        int left = getCamera(root.left);\n        int right = getCamera(root.right);\n        if(left==0 && right == 0) \n            return -1;\n        if(left == -1 || right == -1)\n        {\n            camera++;\n            return 1;\n        }\n        return 0;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-cameras","has_notes":false}