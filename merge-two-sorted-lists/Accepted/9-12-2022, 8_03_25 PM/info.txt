{"id":797981445,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1662993205,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/797981445/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"43.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n        ListNode list = new ListNode(-1);\n        ListNode head = list;\n        while (l1 != null || l2 != null) {\n            if (l1 != null && l2 != null) {\n                if (l1.val <= l2.val) {\n                    list.next = new ListNode(l1.val);\n                    l1 = l1.next;\n                } else {\n                    list.next = new ListNode(l2.val);\n                    l2 = l2.next;\n                }\n            } else if (l1 != null) {\n                list.next = new ListNode(l1.val);\n                l1 = l1.next;\n            } else {\n                list.next = new ListNode(l2.val);\n                l2 = l2.next;\n            }\n            list = list.next;\n        }\n        return head.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}