{"id":815090729,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1664898458,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/815090729/","is_pending":"Not Pending","title":"Determine Whether Matrix Can Be Obtained By Rotation","memory":"42.9 MB","code":"class Solution {\n    public boolean findRotation(int[][] mat, int[][] target) {\n        int count = 0;\n        while(count < 4){\n            Rotate90(mat);\n            boolean ans = false;\n            int i=0,j=0;\n            while(i < mat.length && j < mat[i].length){\n                if(mat[i][j] != target[i][j]){\n                    ans = false;\n                    break;\n                }else{\n                    ans  = true;\n                }\n                j++;\n                if(j == mat[i].length){\n                    j = 0;\n                    i++;\n                }\n            }\n            if(ans){\n                return ans;\n            }\n            count++;\n        }\n        return false;\n    }\n    void Rotate90(int[][] mat){\n        Transpose(mat);\n        int left = 0,right = mat.length-1;\n        int i = 0;\n        while(left < right){\n            int tmp = mat[i][left];\n            mat[i][left] = mat[i][right];\n            mat[i][right] = tmp;\n            i++;\n            if(i == mat.length){\n                i = 0;\n                left++;\n                right--;\n            }\n        }\n    }\n    void Transpose(int[][] mat){\n        for(int i=0;i<mat.length;i++){\n            for(int j=i+1;j<mat[i].length;j++){\n                swap(mat,i,j);\n            }\n        }\n    }\n    void swap(int[][] mat,int i,int j){\n        int tmp = mat[i][j];\n        mat[i][j] = mat[j][i];\n        mat[j][i] = tmp;\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"determine-whether-matrix-can-be-obtained-by-rotation","has_notes":false}