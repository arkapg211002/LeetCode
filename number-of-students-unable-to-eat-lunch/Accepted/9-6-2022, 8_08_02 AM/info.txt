{"id":792636378,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1662431882,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/792636378/","is_pending":"Not Pending","title":"Number of Students Unable to Eat Lunch","memory":"42.5 MB","code":"class Solution {\n    public int countStudents(int[] students, int[] sandwiches) {\n         Stack<Integer> st= new Stack<>();\n    Queue<Integer> q = new ArrayDeque<>();\n    for(int val : students){\n        q.add(val);\n    }\n    \n    for(int i = sandwiches.length-1;i>=0;i--){\n        st.push(sandwiches[i]);\n    }\n    \n    while(q.size()>0){\n        if(q.peek()==st.peek()){\n            q.remove();\n            st.pop();\n        }else{\n            int cnt =0;\n            int cs = q.size();\n            while(q.peek()!=st.peek()){\n                cnt++;\n                int v = q.remove();\n                q.add(v);\n                if(cnt==cs){\n                    return cs;\n                }\n            }\n            \n        }\n    }\n    return q.size();\n}    \n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"number-of-students-unable-to-eat-lunch","has_notes":false}