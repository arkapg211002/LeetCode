{"id":933710864,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1681488555,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/933710864/","is_pending":"Not Pending","title":"Number of Even and Odd Bits","memory":"42.6 MB","code":"class Solution {\n    public int[] evenOddBit(int n) {\n        int evenCount = 0;\n        int oddCount = 0;\n        \n        for (int evenBitPosition = 0, oddBitPosition = 1; oddBitPosition < 32; evenBitPosition += 2, oddBitPosition += 2) {\n            evenCount += 0x1 & (n >> evenBitPosition);\n            oddCount += 0x1 & (n >> oddBitPosition);\n        }\n\n        return new int[] {evenCount, oddCount};\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-even-and-odd-bits","has_notes":false}