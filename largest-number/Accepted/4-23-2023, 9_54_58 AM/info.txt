{"id":938239564,"lang":"java","lang_name":"Java","time":"2 weeks, 1 day","timestamp":1682223898,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/938239564/","is_pending":"Not Pending","title":"Largest Number","memory":"43 MB","code":"class Solution {\n    public class Comparable implements Comparator<Integer> {\n       @Override\n        public int compare(Integer a,Integer b) {\n           int c = a.intValue();\n           int d = b.intValue();\n           String e = c+\"\"+d;\n           String f = d+\"\"+c;\n           return f.compareTo(e);\n        }\n    }\n    \n    public String largestNumber(int[] nums) {\n        Integer[] a = new Integer[nums.length];\n        for(int i = 0;i<nums.length;i++) a[i] = nums[i];\n        Arrays.sort(a,new Comparable());\n        StringBuilder sb = new StringBuilder();\n        for(int x : a) {\n           sb.append(x);\n        }\n        String ans = sb.toString();\n        int ind = 0;\n        for(ind = 0;ind<nums.length;ind++) {\n            if(ans.charAt(ind) == '0') continue;\n            else break;\n        }\n        return ans.substring(ind,ans.length()) == \"\" ? \"0\" : ans.substring(ind,ans.length());\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-number","has_notes":false}