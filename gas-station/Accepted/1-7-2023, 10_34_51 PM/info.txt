{"id":873464537,"lang":"java","lang_name":"Java","time":"4Â months","timestamp":1673111091,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/873464537/","is_pending":"Not Pending","title":"Gas Station","memory":"62.2 MB","code":"class Solution {\n    public int canCompleteCircuit(int[] gas, int[] cost) {\n        // Initialize totalGas and totalCost to 0\n        int totalGas = 0, totalCost = 0;\n        // Iterate through all the gas stations\n        for(int i = 0 ; i<gas.length; i++){\n            // Add the gas and cost at each station to the total\n            totalGas += gas[i];\n            totalCost += cost[i];\n        }\n        // If totalCost is greater than totalGas, it is not possible to complete the circuit\n        if(totalGas < totalCost) return -1;\n        \n        // Initialize remainsGas and start to 0\n        int remainsGas = 0, start = 0;\n        // Iterate through all the gas stations\n        for(int i = 0 ; i < gas.length; i++){\n            // Add the difference between gas and cost at each station to remainsGas\n            remainsGas = remainsGas +(gas[i] - cost[i]);\n            // If remainsGas becomes negative, set start to the next station and reset remainsGas to 0\n            if(remainsGas < 0 ){\n                start = i+1;\n                remainsGas = 0;\n            }\n        }\n        // Return the starting station\n        return start;\n    }\n}\n","compare_result":"1111111111111111111111111111111111111","title_slug":"gas-station","has_notes":false}