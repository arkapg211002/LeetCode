{"id":932549828,"lang":"java","lang_name":"Java","time":"3 weeks, 4 days","timestamp":1681311877,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/932549828/","is_pending":"Not Pending","title":"Simplify Path","memory":"43 MB","code":"class Solution {\n     public String simplifyPath(String path) {\n        String[] paths = path.split(\"/\");\n        int left = -1, right = 0;\n        while (right < paths.length) {\n        \tif (paths[right].equals(\"..\"))\n        \t\tleft = left == -1 ? -1 : left - 1;\n        \telse if (!paths[right].equals(\".\") && !paths[right].equals(\"\"))\n        \t\tpaths[++left] = paths[right];\n        \tright++;\n        }\n        if (left == -1)\n        \treturn \"/\";\n        StringBuilder buf = new StringBuilder();\n        for (int i = 0; i <= left; i++)\n        \tbuf.append('/').append(paths[i]);\n        return buf.toString();\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"simplify-path","has_notes":false}