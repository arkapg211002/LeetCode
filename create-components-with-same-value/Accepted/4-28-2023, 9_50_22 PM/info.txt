{"id":941175037,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1682698822,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/941175037/","is_pending":"Not Pending","title":"Create Components With Same Value","memory":"57.7 MB","code":"class Solution {\n    int nums[];\n    public int componentValue(int[] nums, int[][] edges) {\n        int n = nums.length;\n        this.nums = nums;\n        List<Integer>[] graph = new ArrayList[n];\n        for(int i=0; i<n; i++) {\n            graph[i] = new ArrayList<>();\n        }\n        for(int[] e : edges) {\n            graph[e[0]].add(e[1]);\n            graph[e[1]].add(e[0]);\n        }\n        \n        int sum = 0;\n        for(int i : nums) {\n            sum += i;\n        }\n        \n        for(int k=n; k>0; k--) {\n            if(sum % k != 0) continue;\n            int ans = helper(graph, 0, -1, sum / k);\n            if(ans == 0) return k-1;\n        }\n        return 0;\n    }\n    \n    public int helper(List<Integer>[] graph, int i, int prev, int target) {\n        if(graph[i].size() == 1 && graph[i].get(0) == prev) {\n            if(nums[i] > target) return -1;\n            if(nums[i] == target) return 0;\n            return nums[i];\n        }\n        \n        int sum = nums[i];\n        for(int k : graph[i]) {\n            if(k == prev) continue;\n            int ans = helper(graph, k, i, target);\n            if(ans == -1) return -1;\n            sum += ans;\n        }\n        \n        if(sum > target) return -1;\n        if(sum == target) return 0;\n        return sum;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111","title_slug":"create-components-with-same-value","has_notes":false}