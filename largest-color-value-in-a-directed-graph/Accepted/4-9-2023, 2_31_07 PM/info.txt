{"id":930636135,"lang":"java","lang_name":"Java","time":"4Â weeks","timestamp":1681030867,"status":10,"status_display":"Accepted","runtime":"123 ms","url":"/submissions/detail/930636135/","is_pending":"Not Pending","title":"Largest Color Value in a Directed Graph","memory":"164.8 MB","code":"class Solution {\r\nboolean cycle=false;\r\n\r\npublic int largestPathValue(String colors , int[][] edges) {\r\n        \r\n        if(edges.length==0){\r\n                return 1;\r\n        }\r\n        \r\n    List<List<Integer>> graph=new ArrayList<>();\r\n        int n=colors.length();\r\n        \r\n        for(int i=0;i<=n;i++){\r\n                graph.add(new ArrayList<>());\r\n        }\r\n        \r\n      for(int i=0;i<edges.length;i++){\r\n              int u=edges[i][0];\r\n              int v=edges[i][1];\r\n             \r\n              \r\n              graph.get(u).add(v);\r\n      }  \r\n        \r\n         int max=0;\r\n        HashMap<Integer,int[]> map=new HashMap<>();\r\n        boolean[] visited=new boolean[n+1];\r\n        \r\n        int[] visited2=new int[n+1];\r\n    \r\n     \r\n        \r\n        for(int i=0;i<n;i++){\r\n            if(!map.containsKey(i)){\r\n                     int[] arr= dfs(i,graph,visited,map,colors,visited2);\r\n                    \r\n                    if(cycle)return -1;\r\n              \r\n                for(int j=0;j<26;j++){\r\n                        max=Math.max(arr[j],max);\r\n                }\r\n            }\r\n              \r\n        }\r\n        return max;\r\n        \r\n        \r\n}\r\n    public int[] dfs(int src,List<List<Integer>> graph,boolean[] visited,HashMap<Integer,int[] > map,String colors,int[] visited2){\r\n            \r\n          \r\n            if(map.containsKey(src))return map.get(src);\r\n            \r\n            visited[src]=true;\r\n           visited2[src]=-1;\r\n         int[] arr=new int[26];\r\n            for(int child:graph.get(src)){\r\n                    if(visited2[child]==-1){\r\n                            cycle=true;\r\n                    }\r\n                    if(visited[child]!=true){\r\n                        int[] a=    dfs(child,graph,visited,map,colors,visited2);\r\n                            for(int i=0;i<26;i++){\r\n                                  arr[i]=  Math.max(arr[i],a[i]);\r\n                            }\r\n                    }\r\n            }\r\n            visited[src]=false;\r\n            visited2[src]=2;\r\n             arr[colors.charAt(src)-'a']++;\r\n            map.put(src,arr);\r\n            return  arr;\r\n            \r\n            \r\n            \r\n    }\r\n    \r\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-color-value-in-a-directed-graph","has_notes":false}