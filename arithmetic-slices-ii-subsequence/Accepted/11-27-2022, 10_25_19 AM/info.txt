{"id":850477549,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1669524919,"status":10,"status_display":"Accepted","runtime":"318 ms","url":"/submissions/detail/850477549/","is_pending":"Not Pending","title":"Arithmetic Slices II - Subsequence","memory":"135.5 MB","code":"class Solution {\n    public int numberOfArithmeticSlices(int[] nums) {\n        int ans=0;\n        HashMap<Integer,Integer>[] hmap=new HashMap[nums.length];\n        for(int i=0;i<hmap.length;i++)\n        {\n            hmap[i]=new HashMap<>();\n        }\n        for(int i=1;i<hmap.length;i++)\n        {\n            for(int j=0;j<i;j++)\n            {\n                long cd=(long)nums[i]-(long)nums[j];\n                if(cd<=Integer.MIN_VALUE || cd>=Integer.MAX_VALUE)\n                {\n                    continue;\n                }\n                int apEndingAti=hmap[i].getOrDefault((int)cd,0);\n                int apEndingAtj=hmap[j].getOrDefault((int)cd,0);\n                \n                ans+=apEndingAtj;\n                hmap[i].put((int)cd,apEndingAti+apEndingAtj+1);\n            }\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-slices-ii-subsequence","has_notes":false}