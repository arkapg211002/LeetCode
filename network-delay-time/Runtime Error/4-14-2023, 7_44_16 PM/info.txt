{"id":933661066,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1681481656,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/933661066/","is_pending":"Not Pending","title":"Network Delay Time","memory":"N/A","code":"class Solution {\n    public int networkDelayTime(int[][] times, int n, int k) {\n        int g[][]=new int[n][n];\n        for(int i=0;i<times.length;i++)\n        {\n            g[times[i][0]-1][times[i][1]-1]=times[i][2];\n        }\n        int min=dj(g,k-1,n);\n        if(min>=Integer.MAX_VALUE)return -1;\n        else return min;\n    }\n    public int min(int dist[],int spt[])\n    {\n        int minindex=-1,min=Integer.MAX_VALUE;\n        for(int i=0;i<dist.length;i++)\n        {\n            if(spt[i]==-1 && dist[i]<min)\n            {\n                min=dist[i];\n                minindex=i;\n            }\n        }\n        return minindex;\n    }\n    public int dj(int g[][],int src,int n)\n    {\n        int dist[]=new int[n];\n        int spt[]=new int[n];\n        Arrays.fill(dist,Integer.MAX_VALUE);\n        Arrays.fill(spt,-1);\n        dist[src]=0;\n        for(int count=0;count<n-1;count++)\n        {\n            int u=min(dist,spt);\n            spt[u]=1;\n            for(int v=0;v<n;v++)\n            {\n                if(spt[v]==-1 && g[u][v]!=0 && dist[u]!=Integer.MAX_VALUE && dist[u]+g[u][v]<dist[v]){\n                dist[v]=dist[u]+g[u][v];\n                //spt[v]=1;\n                }\n            }\n        }\n        /*for(int i=0;i<n;i++)\n            System.out.println(i+\" \"+dist[i]+\" \"+spt[i]);\n\n        if(Arrays.stream(spt).sum()!=n || Arrays.stream(spt).sum()!=n-2)return -1;\n        else\n        {\n            Arrays.sort(dist);\n            return dist[dist.length-1];\n        }*/\n        Arrays.sort(dist);\n        return dist[dist.length-1];\n    }\n}","compare_result":"11111111100000000000000000000000000000000000000000000","title_slug":"network-delay-time","has_notes":false}