{"id":802020022,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1663423760,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/802020022/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"44.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        if(nums.length==0)return null;\n        return BST(nums,0,nums.length-1);\n    }\n    public TreeNode BST(int n[],int s,int e)\n    {\n        if(e<s)return null;\n        int m=s+(e-s)/2;\n        TreeNode root=new TreeNode(n[m]);\n        root.left=BST(n,s,m-1);\n        root.right=BST(n,m+1,e);\n        return root;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false}