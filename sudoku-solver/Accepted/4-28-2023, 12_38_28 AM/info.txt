{"id":940767348,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1682622508,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/940767348/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"40.5 MB","code":"class Solution {\n    public void solveSudoku(char[][] board) {\n        sodoku(board);\n    }\n    boolean sodoku(char board[][])\n    {\n        for(int i=0;i<9;i++)\n        {\n            for(int j=0;j<9;j++)\n            {\n                if(board[i][j] == '.')\n                {\n                    for(char c='1';c<='9';c++) //  Try 1 through 9.\n                    {\n                        if(isValid(board, i, j, c)) // checks the validity of that number.\n                        {\n                            board[i][j] = c; // //Put c for current cell.\n                        \n                            if(sodoku(board)) // //If it's the solution return true.\n                            return true;\n                            else\n                            board[i][j] = '.';\n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n     boolean isValid(char[][] board, int row, int col, char c){\n        for(int i = 0; i < 9; i++) {\n            if(board[i][col] != '.' && board[i][col] == c)\n            return false; \n            if(board[row][i] != '.' && board[row][i] == c)\n             return false; \n            if(board[3 * (row / 3) + i / 3][ 3 * (col / 3) + i % 3] != '.' && \nboard[3 * (row / 3) + i / 3][3 * (col / 3) + i % 3] == c) \n            return false; \n        }\n        return true;\n    }\n}","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false}