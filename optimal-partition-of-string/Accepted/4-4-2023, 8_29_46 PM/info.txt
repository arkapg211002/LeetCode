{"id":927916033,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1680620386,"status":10,"status_display":"Accepted","runtime":"122 ms","url":"/submissions/detail/927916033/","is_pending":"Not Pending","title":"Optimal Partition of String","memory":"44.6 MB","code":"class Solution {\n    public int partitionString(String s) {\n        int count=0;\n        HashSet<Character> hs1=new HashSet<>();\n        String str=\"\";\n        for(int i=0;i<s.length();i++){\n            if(!hs1.contains(s.charAt(i))){\n                str=str+s.charAt(i);\n                hs1.add(s.charAt(i));\n            }\n            else{\n                count++;\n                str=\"\";\n                hs1.clear();\n                i--;\n            }\n        }\n        return count+1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"optimal-partition-of-string","has_notes":false}