{"id":812545090,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1664611380,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/812545090/","is_pending":"Not Pending","title":"Decode Ways","memory":"42.7 MB","code":"class Solution {\n    public int numDecodings(String s) {\n        return countNumber(0, s, new Integer[s.length()]);\n    }\n    \n    public int countNumber(int idx, String s, Integer[] cache){\n        if(idx == s.length()){\n            return 1;\n        }\n        if(cache[idx] != null){\n            return cache[idx];\n        }\n        int count = 0;\n        for(int i = idx + 1; i < Math.min(idx + 3, s.length() + 1); i++){\n            String sub = s.substring(idx, i);\n            int num = Integer.parseInt(sub);\n            String nums = String.valueOf(num);\n            if(!nums.equals(sub) || num > 26 || num == 0){\n                continue;\n            }\n            count += countNumber(i, s, cache);\n        }\n        cache[idx] = count;\n        return count;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"decode-ways","has_notes":false}