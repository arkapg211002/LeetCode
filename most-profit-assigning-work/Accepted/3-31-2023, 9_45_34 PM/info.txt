{"id":925451923,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1680279334,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/925451923/","is_pending":"Not Pending","title":"Most Profit Assigning Work","memory":"44.4 MB","code":"class Solution {\n    public int maxProfitAssignment(int[] diff, int[] profit, int[] worker) {\n\n\tint pair[][] = new int[diff.length][2];\n\tfor(int i = 0; i < diff.length; i++){\n\t\tpair[i][0] = diff[i];\n\t\tpair[i][1] = profit[i];\n\t}\n\t// sorting 2d array on basis of difficulty colmn\n\tArrays.sort(pair, new Comparator<int[]>() {\n\t\t@Override\n\t\tpublic int compare(int o1[], int o2[]){\n\t\t\treturn Integer.valueOf(o1[0]).compareTo(o2[0]);\n\t\t}\n\t});\n\n\tint totalProfit = 0;\n\n\t//MAGIC begins HERE\n\tArrays.sort(worker);\n\tint bestPaySoFar = 0;\n\tint i = 0;      // declaring globally creates MAGIC!!\n\n\tfor(int k = 0; k < worker.length; k++){\n\t\tint ability = worker[k];\n\n\t\twhile(i < pair.length && ability >= pair[i][0]){\n\t\t\tif(bestPaySoFar < pair[i][1])\n\t\t\t\tbestPaySoFar = pair[i][1];\n\t\t\ti++;\n\t\t}\n\n\t\ttotalProfit += bestPaySoFar;\n\t}\n\n\treturn totalProfit;\n}\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"most-profit-assigning-work","has_notes":false}