{"id":941171139,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1682698292,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/941171139/","is_pending":"Not Pending","title":"Cracking the Safe","memory":"52.6 MB","code":"class Solution {\n    public String crackSafe(int n, int k) {\n        HashSet<String>v=new HashSet<>();\n        String ans=\"\";\n        for(int i=0;i<n;i++) ans+='0';\n        int len = n + (int)Math.pow(k,n) - 1;\n        ans=dfs(ans,n,k,v,len);\n        return ans;\n    }\n    public String dfs(String s,int n,int k,HashSet<String>v,int len)\n    {\n        int l=s.length();\n        v.add(s.substring(l-n,l));\n        for(int i=0;i<k;i++)\n        {\n            if(v.contains(s.substring(l-n+1,l)+Integer.toString(i))==false)\n            {\n                String temp = dfs(s+Integer.toString(i),n,k,v,len);\n                if(temp.length()==len)\n                {\n                    s=temp;\n                    break;\n                }\n                v.remove(s.substring(l-n+1, l)+Integer.toString(i));\n            }\n        }\n        return s;\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"cracking-the-safe","has_notes":false}