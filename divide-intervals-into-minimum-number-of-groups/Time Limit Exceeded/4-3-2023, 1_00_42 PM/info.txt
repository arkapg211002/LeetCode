{"id":927065715,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1680507042,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/927065715/","is_pending":"Not Pending","title":"Divide Intervals Into Minimum Number of Groups","memory":"N/A","code":"class Solution {\n    public int minGroups(int[][] intervals) {\n        Arrays.sort(intervals,(m,n)->\n        {\n            if(m[1]<n[1])return -1;\n            else if(m[1]>n[1])return 1;\n            else return 0;\n        });\n        int a[]=new int[intervals.length];\n        Arrays.fill(a,0);\n        int end=0,c=0,d=0;\n        for(int i=0;i<a.length;i++)\n        {\n            if(a[i]==0)\n            {\n                a[i]=1;\n                end=intervals[i][1];\n                for(int j=i+1;j<intervals.length;j++)\n                {\n                    if(a[j]==1)continue;\n                    if(intervals[j][0]>end)\n                    {\n                        end=intervals[j][1];\n                        a[j]=1;\n                    }\n                }\n                c+=1;\n            }\n        }\n\n        Arrays.sort(intervals,(x,y)->\n        {\n            if(x[0]<y[0])return -1;\n            else if(x[0]>y[0])return 1;\n            else return 0;\n        });\n        \n        int b[]=new int[intervals.length];\n        Arrays.fill(b,0);\n        end=0;\n        for(int i=0;i<b.length;i++)\n        {\n            if(b[i]==0)\n            {\n                b[i]=1;\n                end=intervals[i][1];\n                for(int j=i+1;j<intervals.length;j++)\n                {\n                    if(b[j]==1)continue;\n                    if(intervals[j][0]>end)\n                    {\n                        end=intervals[j][1];\n                        b[j]=1;\n                    }\n                }\n                d+=1;\n            }\n        }\n        return (int)Math.min(c,d);\n    }\n    \n}","compare_result":"11111111111111111111111111111000000","title_slug":"divide-intervals-into-minimum-number-of-groups","has_notes":false}