{"id":926026146,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1680363854,"status":10,"status_display":"Accepted","runtime":"158 ms","url":"/submissions/detail/926026146/","is_pending":"Not Pending","title":"Find the Most Competitive Subsequence","memory":"54.7 MB","code":"class Solution {\n    public int[] mostCompetitive(int[] nums, int k) {\n        Stack<Integer> s=new Stack<>();\n        int n=nums.length;\n        for(int i=0;i<n;i++)\n        {\n            while(!s.isEmpty()  && nums[i] < s.peek() && (n-i)>(k-s.size()))\n                s.pop();\n            if(s.size()<k)\n            s.push(nums[i]);\n        }\n        int a[]=new int[k];\n        for(int i=k-1;i>=0;i--)\n            a[i]=s.pop();\n         return a;\n    }\n   \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-most-competitive-subsequence","has_notes":false}