{"id":912730936,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678460652,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/912730936/","is_pending":"Not Pending","title":"Even Odd Tree","memory":"60.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    boolean res=true;\n    LinkedList<TreeNode>q=new LinkedList<>();\n    List<Integer>b=new ArrayList<>();\n    HashSet<Integer>h=new HashSet<>();\n    public boolean isEvenOddTree(TreeNode root) {\n        traversal(root);\n        return res;\n    }\n    public void traversal(TreeNode root)\n    {\n        TreeNode p=root;\n        if(p==null)return;\n        q.add(p);\n        int level=0;\n        outer:\n        while(q.isEmpty()==false)\n        {\n            int n=q.size();\n            for(int i=0;i<n;i++)\n            {\n                p=q.removeFirst();\n                b.add(p.val);\n                h.add(p.val);\n                if(level%2!=0 && p.val%2!=0)\n                {\n                    res=false;\n                    break outer;\n                }\n                if(level%2==0 && p.val%2==0)\n                {\n                    res=false;\n                    break outer;\n                }\n                if(p.left!=null)q.add(p.left);\n                if(p.right!=null)q.add(p.right);\n            }\n            if(h.size()<b.size())\n            {\n                res=false;\n                h=new HashSet<>();\n                break;\n            }\n            List<Integer>l=new ArrayList<>();\n            l.addAll(b);\n            if(level%2==0)Collections.sort(b);\n            else Collections.sort(b,Collections.reverseOrder());\n            for(int i=0;i<l.size();i++)\n            {\n                if(l.get(i)!=b.get(i))\n                {\n                    res=false;\n                    break;\n                }\n            }\n            b=new ArrayList<>();\n            h=new HashSet<>();\n            level+=1;\n        }\n        \n        \n        \n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"even-odd-tree","has_notes":false}