{"id":912752278,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678463361,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/912752278/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node II","memory":"42.4 MB","code":"class Solution {\n    public Node connect(Node root) {\n        Map<Integer, List<Node>> map = new HashMap<>();\n        goDFS(root, 0, map);\n        for (List<Node> list : map.values()) \n            for (int i = 1; i < list.size(); i++) \n                list.get(i - 1).next = list.get(i);\n        return root;\n    }\n    \n    private void goDFS(Node node, int lvl, Map<Integer, List<Node>> map) {\n        if (node == null) return;\n\n        List<Node> list = map.computeIfAbsent(lvl, ArrayList::new);\n        list.add(node);\n        lvl++;\n        goDFS(node.left, lvl, map);\n        goDFS(node.right, lvl, map);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node-ii","has_notes":false}