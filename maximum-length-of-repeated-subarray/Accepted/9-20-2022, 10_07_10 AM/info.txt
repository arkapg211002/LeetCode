{"id":804197909,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1663648630,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/804197909/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"50.8 MB","code":"class Solution {\n    public int findLength(int[] nums1, int[] nums2) {\n        \n        int n = nums1.length;\n        int m = nums2.length;\n        // this dp will store the max suffix sum till i and j\n        int[][] dp = new int[n+1][m+1];\n        int max = 0;\n        for(int i=1; i<=n; i++){\n            for(int j=1; j<=m; j++){\n                if(nums1[i-1]==nums2[j-1]){\n                    dp[i][j] = dp[i-1][j-1] + 1;\n                    max = Math.max(max, dp[i][j]);\n                } else {\n                    dp[i][j] = 0;\n                }\n            }\n        }\n        return max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false}