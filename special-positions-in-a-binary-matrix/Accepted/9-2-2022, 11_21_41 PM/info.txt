{"id":789816833,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1662141101,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/789816833/","is_pending":"Not Pending","title":"Special Positions in a Binary Matrix","memory":"51.5 MB","code":"class Solution {\n    public int isSpecial(int[][] mat, int col){\n        // check vertically\n        int seenBefore = 0;\n        for(int i=0; i<mat.length; i++){\n             if(seenBefore==1  && mat[i][col] ==1){\n                    seenBefore = 0;\n                    break;\n                }else if(mat[i][col] ==1) {\n                    seenBefore= 1;\n                }\n        }\n        return seenBefore;\n    }\n    public int numSpecial(int[][] mat) {\n         int counter = 0;\n        \n        for(int i=0; i<mat.length; i++){\n            int lastFoundAt = -1;\n            \n            // check horizontally\n            for(int j=0; j<mat[i].length; j++){\n                \n                if(lastFoundAt>=0 && mat[i][j] ==1){\n                    lastFoundAt = -1;\n                    break;\n                }else if(mat[i][j] ==1) {\n                    lastFoundAt= j;\n                }\n                \n            }\n            if(lastFoundAt == -1) continue;\n            \n             counter += isSpecial(mat, lastFoundAt);\n            \n        }\n       \n         \n        return counter;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"special-positions-in-a-binary-matrix","has_notes":false}