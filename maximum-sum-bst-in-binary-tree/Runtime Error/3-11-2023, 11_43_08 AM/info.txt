{"id":913058538,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678515188,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/913058538/","is_pending":"Not Pending","title":"Maximum Sum BST in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int max=Integer.MIN_VALUE;\n    public int maxSumBST(TreeNode root) {\n        if(root==null)return 0;\n        boolean b=bst(root);\n        int m=0;\n        if(b==true)\n        {\n            m=sum(root);\n            max=(int)Math.max(max,m);\n            //return max;\n        }\n        \n        int lh=maxSumBST(root.left);\n        int rh=maxSumBST(root.right);\n        max=(int)Math.max(lh,max);\n        max=(int)Math.max(rh,max);\n        return max;\n    }\n    public boolean bst(TreeNode root)\n    {\n        if(root==null)return true;\n        boolean lh=bst(root.left);\n        boolean rh=bst(root.right);\n        if(lh==true && rh==true && root.left==null && root.right==null)return true;\n        else if(lh==true && rh==true && root.left.val<root.val && root.right==null)return true;\n        else if(lh==true && rh==true && root.right.val>root.val && root.left==null)return true;\n        else if(lh==true && rh==true && root.left.val<root.val && root.right.val>root.val)\n            return true;        \n        else return false;\n    }\n    public int sum(TreeNode root)\n    {\n        if(root==null)return 0;\n        int lh=sum(root.left);\n        int rh=sum(root.right);\n        return (lh+rh+root.val);\n    }\n}","compare_result":"1111100000000000000000000000000000000000000000000000000000","title_slug":"maximum-sum-bst-in-binary-tree","has_notes":false}