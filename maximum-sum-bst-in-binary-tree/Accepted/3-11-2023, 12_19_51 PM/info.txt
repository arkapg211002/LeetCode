{"id":913075037,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1678517391,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/913075037/","is_pending":"Not Pending","title":"Maximum Sum BST in Binary Tree","memory":"54.1 MB","code":"class Solution {\n    \n    int maxSum = 0;\n    \n    public int maxSumBST(TreeNode root) {\n        findMaxSum(root);\n        return maxSum;\n    }\n    \n    private NodeWrapper findMaxSum(TreeNode root) {\n        if (root == null) {\n            return null;\n        }\n        \n        NodeWrapper leftTree = findMaxSum(root.left);\n        NodeWrapper rightTree = findMaxSum(root.right);\n        \n        NodeWrapper curNode = new NodeWrapper(root);\n        if (leftTree != null) {\n            curNode.sum += leftTree.sum;\n            curNode.max = Math.max(root.val, leftTree.max);\n            curNode.min = Math.min(root.val, leftTree.min);\n            curNode.validBST = leftTree.validBST && leftTree.max < root.val;\n        }\n        if (rightTree != null) {\n            curNode.sum += rightTree.sum;\n            curNode.max = Math.max(curNode.max, rightTree.max);\n            curNode.min = Math.min(curNode.min, rightTree.min);\n            curNode.validBST &= rightTree.validBST && rightTree.min > root.val;\n        }\n\n        if (curNode.validBST) {\n            maxSum = Math.max(maxSum, curNode.sum);   \n        }\n        return curNode;\n    }\n        \n    static class NodeWrapper {\n        final TreeNode node;\n        int sum;\n        int max;\n        int min;\n        boolean validBST = true;\n        public NodeWrapper(TreeNode node) {\n            this.node = node;\n            this.sum = node.val;\n            this.max = node.val;\n            this.min = node.val;\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-bst-in-binary-tree","has_notes":false}