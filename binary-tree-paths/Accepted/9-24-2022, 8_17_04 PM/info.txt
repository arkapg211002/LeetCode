{"id":807554919,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1664030824,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/807554919/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"44.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<String> binaryTreePaths(TreeNode root) {\n        return getPaths(root, \"\");\n    }\n    \n    private List<String> getPaths(TreeNode root, String s) {\n        List<String> res = new ArrayList<>();\n        if(root==null)\n            return res;\n        if(root.right==null && root.left ==null) {\n            res.add(s+ root.val);\n            return res;\n        }\n        res.addAll(getPaths(root.left,s+root.val + \"->\"));\n        res.addAll(getPaths(root.right,s+root.val + \"->\"));\n        return res;\n    }\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false}