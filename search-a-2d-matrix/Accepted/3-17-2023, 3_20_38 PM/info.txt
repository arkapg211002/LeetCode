{"id":916788712,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1679046638,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/916788712/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"41.9 MB","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        int m=matrix.length,n=matrix[0].length,i=0,j=n-1,l=0,r=n-1;\n        while(i<m && j<n){\n            if(matrix[i][j]<target) i++;\n            else{\n                while(l<=r){\n                    int mid=l+(r-l)/2;\n                    if(matrix[i][mid]==target) return true;\n                    else if(matrix[i][mid]<target) l=mid+1;\n                    else r=mid-1;\n                }\n                return false;\n            }\n        }\n        return false;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false}