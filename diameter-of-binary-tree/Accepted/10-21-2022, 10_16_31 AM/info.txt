{"id":827074827,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1666327591,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/827074827/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"43.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int ans=0;\n    public int diameterOfBinaryTree(TreeNode root) {\n        dfs(root);\n    return ans; \n}\n\npublic int dfs(TreeNode root){\n    \n    if(root == null)\n        return 0;\n    \n    int ld = dfs(root.left);\n    int rd = dfs(root.right);\n    ans = Math.max(ans, ld+rd); \n    return 1+ Math.max(ld,rd);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false}