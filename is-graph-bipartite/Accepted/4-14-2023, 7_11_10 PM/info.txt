{"id":933646681,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1681479670,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/933646681/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"43.3 MB","code":"class Solution {\n    public boolean isBipartite(int[][] graph) {\n        ArrayList<ArrayList<Integer>>l=new ArrayList<>();\n        for(int i=0;i<graph.length;i++)\n        {\n            l.add(new ArrayList<>());\n        }\n        for(int i=0;i<graph.length;i++)\n        {\n            for(int j=0;j<graph[i].length;j++)\n            {\n                l.get(i).add(graph[i][j]);\n                l.get(graph[i][j]).add(i);\n            }\n        }\n        int col[]=new int[graph.length];\n        Arrays.fill(col,-1);\n        for(int i=0;i<graph.length;i++)\n        {\n            if(col[i]==-1)\n            {\n                if(dfs(i,0,l,col)==false)return false;\n            }\n        }\n        return true;\n    }\n    public boolean dfs(int node,int c,ArrayList<ArrayList<Integer>>l,int col[])\n    {\n        col[node]=c;\n        for(Integer it:l.get(node))\n        {\n            if(col[it]==-1)\n            {\n                if(dfs(it,1-c,l,col)==false)return false;\n            }\n            else if(col[it]==c)return false;\n        }\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite","has_notes":false}